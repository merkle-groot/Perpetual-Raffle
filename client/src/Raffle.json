{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasuryOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasuryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_slotPrice",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_numSlotsAvailable",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "RaffleWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numClaimed",
          "type": "uint256"
        }
      ],
      "name": "SlotsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "refunder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numRefunded",
          "type": "uint256"
        }
      ],
      "name": "SlotsRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "TreasuryAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TREASURY_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToSlotsOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "noOfSlots",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "noOfSlotsBought",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredRound",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTreasuryAddress",
          "type": "address"
        }
      ],
      "name": "changeTreasuryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "countDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPhase",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deletedSlots",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disburseWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enterLockPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exitLockPeriod",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandomNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSlotOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStopped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftOwned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "noOfRounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numSlotsAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numSlotsFilled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numSlots",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_method",
          "type": "uint256"
        }
      ],
      "name": "purchaseSlot",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomResult",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomResultRequested",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "deleteIndices",
          "type": "uint256[]"
        }
      ],
      "name": "refundSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "slotOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slotPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopTheRaffle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/AccessControl.sol",
    "1": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/IAccessControl.sol",
    "10": "/home/punkster21/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFRequestIDBase.sol",
    "12": "contracts/Raffle.sol",
    "2": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/security/Pausable.sol",
    "3": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
    "4": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
    "5": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "7": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "8": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "9": "/home/punkster21/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol"
  },
  "ast": {
    "absolutePath": "contracts/Raffle.sol",
    "exportedSymbols": {
      "AccessControl": [
        1167
      ],
      "Context": [
        1609
      ],
      "ERC165": [
        1836
      ],
      "IAccessControl": [
        1587
      ],
      "IERC165": [
        1848
      ],
      "IERC721": [
        1375
      ],
      "IERC721Receiver": [
        1393
      ],
      "LinkTokenInterface": [
        1993
      ],
      "Pausable": [
        1259
      ],
      "Raffle": [
        860
      ],
      "Strings": [
        1812
      ],
      "VRFConsumerBase": [
        1514
      ],
      "VRFRequestIDBase": [
        1898
      ]
    },
    "id": 861,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:12"
      },
      {
        "absolutePath": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 861,
        "sourceUnit": 1168,
        "src": "186:58:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 861,
        "sourceUnit": 1260,
        "src": "245:55:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 861,
        "sourceUnit": 1376,
        "src": "301:58:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/punkster21/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 861,
        "sourceUnit": 1515,
        "src": "360:59:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/punkster21/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 861,
        "sourceUnit": 1394,
        "src": "420:66:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1167,
              "src": "560:13:12"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "560:13:12"
          },
          {
            "baseName": {
              "id": 10,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1514,
              "src": "575:15:12"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "575:15:12"
          },
          {
            "baseName": {
              "id": 12,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1259,
              "src": "592:8:12"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "592:8:12"
          },
          {
            "baseName": {
              "id": 14,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1393,
              "src": "602:15:12"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "602:15:12"
          }
        ],
        "canonicalName": "Raffle",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7,
          "nodeType": "StructuredDocumentation",
          "src": "488:52:12",
          "text": " @dev Raffle Contract\n @author merkle-groot"
        },
        "fullyImplemented": true,
        "id": 860,
        "linearizedBaseContracts": [
          860,
          1393,
          1259,
          1514,
          1898,
          1167,
          1836,
          1848,
          1587,
          1609
        ],
        "name": "Raffle",
        "nameLocation": "550:6:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 17,
            "mutability": "immutable",
            "name": "keyHash",
            "nameLocation": "727:7:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "700:34:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 16,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "700:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "immutable",
            "name": "fee",
            "nameLocation": "788:3:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "761:30:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "761:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "04e04656",
            "id": 21,
            "mutability": "mutable",
            "name": "slotPrice",
            "nameLocation": "852:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "837:24:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "837:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7489ce48",
            "id": 23,
            "mutability": "mutable",
            "name": "numSlotsAvailable",
            "nameLocation": "928:17:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "913:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "913:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d56d229d",
            "id": 25,
            "mutability": "mutable",
            "name": "nftContract",
            "nameLocation": "997:11:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "982:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "982:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "d11a57ec",
            "id": 30,
            "mutability": "constant",
            "name": "TREASURY_ROLE",
            "nameLocation": "1060:13:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1036:66:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 26,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1036:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "54524541535552595f524f4c45",
                  "id": 28,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1086:15:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca9",
                    "typeString": "literal_string \"TREASURY_ROLE\""
                  },
                  "value": "TREASURY_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca9",
                    "typeString": "literal_string \"TREASURY_ROLE\""
                  }
                ],
                "id": 27,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1076:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1076:26:12",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61d027b3",
            "id": 32,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "1178:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1163:23:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1163:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2efcd76f",
            "id": 35,
            "mutability": "mutable",
            "name": "noOfRounds",
            "nameLocation": "1234:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1219:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1219:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1247:1:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "055ad42e",
            "id": 39,
            "mutability": "mutable",
            "name": "currentPhase",
            "nameLocation": "1300:12:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1286:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 36,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "1286:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "UnaryOperation",
              "operator": "-",
              "prefix": true,
              "src": "1315:2:12",
              "subExpression": {
                "hexValue": "31",
                "id": 37,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1316:1:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "typeDescriptions": {
                "typeIdentifier": "t_rational_minus_1_by_1",
                "typeString": "int_const -1"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5fcbd5b6",
            "id": 41,
            "mutability": "mutable",
            "name": "countDown",
            "nameLocation": "1365:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1350:24:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1350:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f683b6a",
            "id": 44,
            "mutability": "mutable",
            "name": "isStopped",
            "nameLocation": "1446:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1431:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1431:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1458:1:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3994752",
            "id": 46,
            "mutability": "mutable",
            "name": "nftID",
            "nameLocation": "1495:5:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1480:20:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1480:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Raffle.slotOwner",
            "id": 53,
            "members": [
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "noOfSlots",
                "nameLocation": "1657:9:12",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "1649:17:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1649:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "noOfSlotsBought",
                "nameLocation": "1692:15:12",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "1684:23:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1684:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "enteredRound",
                "nameLocation": "1725:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "1717:20:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1717:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "slotOwner",
            "nameLocation": "1630:9:12",
            "nodeType": "StructDefinition",
            "scope": 860,
            "src": "1623:121:12",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "42619f66",
            "id": 56,
            "mutability": "mutable",
            "name": "randomResult",
            "nameLocation": "1797:12:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1782:31:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1782:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 55,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1812:1:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "47984f2c",
            "id": 59,
            "mutability": "mutable",
            "name": "randomResultRequested",
            "nameLocation": "1895:21:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1883:41:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 57,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1883:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 58,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1919:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5d1cf7ea",
            "id": 62,
            "mutability": "mutable",
            "name": "numSlotsFilled",
            "nameLocation": "1982:14:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "1967:33:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1967:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 61,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1999:1:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ce16097e",
            "id": 65,
            "mutability": "mutable",
            "name": "slotOwners",
            "nameLocation": "2051:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "2034:27:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2034:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 64,
              "nodeType": "ArrayTypeName",
              "src": "2034:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9cc1f301",
            "id": 68,
            "mutability": "mutable",
            "name": "deletedSlots",
            "nameLocation": "2146:12:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "2129:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 66,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2129:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 67,
              "nodeType": "ArrayTypeName",
              "src": "2129:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "796fc402",
            "id": 73,
            "mutability": "mutable",
            "name": "addressToSlotsOwner",
            "nameLocation": "2256:19:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "2219:56:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
              "typeString": "mapping(address => struct Raffle.slotOwner)"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2227:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2219:29:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
                "typeString": "mapping(address => struct Raffle.slotOwner)"
              },
              "valueType": {
                "id": 71,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 70,
                  "name": "slotOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2238:9:12"
                },
                "referencedDeclaration": 53,
                "src": "2238:9:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_slotOwner_$53_storage_ptr",
                  "typeString": "struct Raffle.slotOwner"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "15cc7b2a",
            "id": 76,
            "mutability": "mutable",
            "name": "nftOwned",
            "nameLocation": "2342:8:12",
            "nodeType": "VariableDeclaration",
            "scope": 860,
            "src": "2330:28:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 74,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2330:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 75,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2353:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 82,
            "name": "SlotsClaimed",
            "nameLocation": "2471:12:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimee",
                  "nameLocation": "2500:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "2484:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2484:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numClaimed",
                  "nameLocation": "2517:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "2509:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2483:45:12"
            },
            "src": "2465:64:12"
          },
          {
            "anonymous": false,
            "id": 88,
            "name": "SlotsRefunded",
            "nameLocation": "2601:13:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "refunder",
                  "nameLocation": "2631:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "2615:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2615:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numRefunded",
                  "nameLocation": "2649:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "2641:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2641:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2614:47:12"
            },
            "src": "2595:67:12"
          },
          {
            "anonymous": false,
            "id": 92,
            "name": "RaffleWon",
            "nameLocation": "2705:9:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "2731:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "2715:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2715:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2714:24:12"
            },
            "src": "2699:40:12"
          },
          {
            "anonymous": false,
            "id": 96,
            "name": "TreasuryAddressChanged",
            "nameLocation": "2798:22:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "2830:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2830:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2820:23:12"
            },
            "src": "2792:52:12"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "3224:311:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 122,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 888,
                        "src": "3245:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 123,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3265:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3265:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 121,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "3234:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3234:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "3234:42:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 128,
                        "name": "TREASURY_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "3297:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 129,
                        "name": "_treasuryOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "3312:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 127,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "3286:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3286:41:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:41:12"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "3337:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "_treasuryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "3348:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3337:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "3337:27:12"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3374:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 137,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "3384:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3374:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "3374:18:12"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3402:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 141,
                      "name": "_nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "3416:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3402:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "3402:25:12"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "3437:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 145,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "3443:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3437:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "3437:10:12"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "slotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "3458:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_slotPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "3470:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3458:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "3458:22:12"
                },
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "numSlotsAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3490:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 153,
                      "name": "_numSlotsAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "3510:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3490:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "3490:38:12"
                }
              ]
            },
            "id": 157,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 117,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 108,
                    "src": "3164:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 118,
                    "name": "_linkToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 110,
                    "src": "3208:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 119,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 116,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1514,
                  "src": "3139:15:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3139:85:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_treasuryOwner",
                  "nameLocation": "2879:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2871:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "_treasuryAddress",
                  "nameLocation": "2911:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2903:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "2945:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2937:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2937:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_slotPrice",
                  "nameLocation": "2974:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2966:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2966:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "3002:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2994:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2994:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "3028:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3020:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3020:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_linkToken",
                  "nameLocation": "3062:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3054:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3054:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "3091:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3083:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3083:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_numSlotsAvailable",
                  "nameLocation": "3113:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "3105:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3105:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2861:276:12"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3224:0:12"
            },
            "scope": 860,
            "src": "2850:685:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "3922:2537:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 168,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "4071:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4087:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4071:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f742062757920647572696e67207468697320726f756e64",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4090:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc87c0756a4ea7a1698836541ed7e48bc3d536aa167acd9111db5e75b6e7c789",
                          "typeString": "literal_string \"Cannot buy during this round\""
                        },
                        "value": "Cannot buy during this round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc87c0756a4ea7a1698836541ed7e48bc3d536aa167acd9111db5e75b6e7c789",
                          "typeString": "literal_string \"Cannot buy during this round\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4063:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4063:58:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "4063:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 175,
                          "name": "_numSlots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "4185:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4197:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4185:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a2043616e6e6f74207075726368617365203020736c6f74732e",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4200:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bf494f128522400b7261f9c829c3c614ad3365324b7f4a0c5e00b531d3ca439",
                          "typeString": "literal_string \"Raffle: Cannot purchase 0 slots.\""
                        },
                        "value": "Raffle: Cannot purchase 0 slots."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bf494f128522400b7261f9c829c3c614ad3365324b7f4a0c5e00b531d3ca439",
                          "typeString": "literal_string \"Raffle: Cannot purchase 0 slots.\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4177:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:58:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "4177:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 182,
                          "name": "nftOwned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "4317:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4329:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4317:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a20436f6e747261637420646f6573206e6f74206f776e20726166666c6561626c65204e46542e",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4335:47:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cd9df64ef0be2a5b3c9c1d3f99256260bed8da9c149077d58a2870fe663cdfb",
                          "typeString": "literal_string \"Raffle: Contract does not own raffleable NFT.\""
                        },
                        "value": "Raffle: Contract does not own raffleable NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cd9df64ef0be2a5b3c9c1d3f99256260bed8da9c149077d58a2870fe663cdfb",
                          "typeString": "literal_string \"Raffle: Contract does not own raffleable NFT.\""
                        }
                      ],
                      "id": 181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4309:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4309:74:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "4309:74:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 189,
                          "name": "numSlotsFilled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "4455:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 190,
                          "name": "numSlotsAvailable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "4472:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4455:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a20416c6c20726166666c6520736c6f7473206172652066696c6c65642e",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4491:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23c6f38d13860b0e97849018e3a001ceb81335e17988de49baf8d518ca78060c",
                          "typeString": "literal_string \"Raffle: All raffle slots are filled.\""
                        },
                        "value": "Raffle: All raffle slots are filled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23c6f38d13860b0e97849018e3a001ceb81335e17988de49baf8d518ca78060c",
                          "typeString": "literal_string \"Raffle: All raffle slots are filled.\""
                        }
                      ],
                      "id": 188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4447:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:83:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "4447:83:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 196,
                          "name": "randomResultRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "4599:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4624:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4599:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a2043616e6e6f7420707572636861736520736c6f742061667465722077696e6e657220686173206265656e2063686f73656e2e",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4631:60:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0be8cdc79db39793a5dc359ee45430fa1ec70615304265e6bfed1fc11860ec7b",
                          "typeString": "literal_string \"Raffle: Cannot purchase slot after winner has been chosen.\""
                        },
                        "value": "Raffle: Cannot purchase slot after winner has been chosen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0be8cdc79db39793a5dc359ee45430fa1ec70615304265e6bfed1fc11860ec7b",
                          "typeString": "literal_string \"Raffle: Cannot purchase slot after winner has been chosen.\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4591:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4591:101:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "4591:101:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 203,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4800:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "4800:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 205,
                              "name": "_numSlots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "4813:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 206,
                              "name": "slotPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "4825:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4813:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4800:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 209,
                            "name": "_method",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "4838:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4849:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4838:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4800:50:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a20496e73756666696369656e74204554482070726f766964656420746f20707572636861736520736c6f74732e",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4852:54:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da0e8a762b9b06706a2b96ff9821515b16dd7f4d3795856be2c24feb0297a2d5",
                          "typeString": "literal_string \"Raffle: Insufficient ETH provided to purchase slots.\""
                        },
                        "value": "Raffle: Insufficient ETH provided to purchase slots."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da0e8a762b9b06706a2b96ff9821515b16dd7f4d3795856be2c24feb0297a2d5",
                          "typeString": "literal_string \"Raffle: Insufficient ETH provided to purchase slots.\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4792:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4792:115:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "4792:115:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 217,
                                      "name": "addressToSlotsOwner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 73,
                                      "src": "5014:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
                                        "typeString": "mapping(address => struct Raffle.slotOwner storage ref)"
                                      }
                                    },
                                    "id": 220,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 218,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5034:3:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 219,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5034:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5014:31:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_slotOwner_$53_storage",
                                      "typeString": "struct Raffle.slotOwner storage ref"
                                    }
                                  },
                                  "id": 221,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "enteredRound",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 52,
                                  "src": "5014:44:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 222,
                                  "name": "noOfRounds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "5061:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5014:57:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 224,
                                  "name": "_numSlots",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "5075:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 231,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 225,
                                              "name": "addressToSlotsOwner",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 73,
                                              "src": "5089:19:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
                                                "typeString": "mapping(address => struct Raffle.slotOwner storage ref)"
                                              }
                                            },
                                            "id": 228,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 226,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "5109:3:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 227,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "5109:10:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5089:31:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_slotOwner_$53_storage",
                                              "typeString": "struct Raffle.slotOwner storage ref"
                                            }
                                          },
                                          "id": 229,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "noOfSlotsBought",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 50,
                                          "src": "5089:47:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130",
                                          "id": 230,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5137:2:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "src": "5089:50:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 232,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5142:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "5089:54:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 234,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5088:56:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5075:69:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5014:130:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 237,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5013:132:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 238,
                            "name": "_method",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "5149:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5160:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5149:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5013:148:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a2043616e6e6f7420696e6372656d656e7420736c6f747320696e207468697320726f756e64",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5163:46:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8f7266731ebe07e7eb3455c609e16b99e469405965942edfc18f0fddb4b1da1",
                          "typeString": "literal_string \"Raffle: Cannot increment slots in this round\""
                        },
                        "value": "Raffle: Cannot increment slots in this round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8f7266731ebe07e7eb3455c609e16b99e469405965942edfc18f0fddb4b1da1",
                          "typeString": "literal_string \"Raffle: Cannot increment slots in this round\""
                        }
                      ],
                      "id": 216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5005:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5005:205:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "5005:205:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 246,
                          "name": "_numSlots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "5310:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 247,
                            "name": "numSlotsAvailable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "5323:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 248,
                            "name": "numSlotsFilled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "5343:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5323:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5310:47:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a2052657175657374696e6720746f20707572636861736520746f6f206d616e7920736c6f74732e",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5359:48:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cda233493540ddfa24073519a80dafe0171e2cb18b3784bc16bde84b18e2d0f8",
                          "typeString": "literal_string \"Raffle: Requesting to purchase too many slots.\""
                        },
                        "value": "Raffle: Requesting to purchase too many slots."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cda233493540ddfa24073519a80dafe0171e2cb18b3784bc16bde84b18e2d0f8",
                          "typeString": "literal_string \"Raffle: Requesting to purchase too many slots.\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5302:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5302:106:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "5302:106:12"
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "idx",
                      "nameLocation": "5427:3:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 351,
                      "src": "5419:11:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 254,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5419:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 257,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5433:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5419:15:12"
                },
                {
                  "body": {
                    "id": 282,
                    "nodeType": "Block",
                    "src": "5532:138:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 262,
                              "name": "slotOwners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "5546:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 269,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 263,
                                "name": "deletedSlots",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "5557:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 268,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 264,
                                    "name": "deletedSlots",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68,
                                    "src": "5570:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5570:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5592:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5570:23:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5557:37:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5546:49:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 270,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5598:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5598:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5546:62:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 273,
                        "nodeType": "ExpressionStatement",
                        "src": "5546:62:12"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 274,
                              "name": "deletedSlots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "5622:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "5622:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5622:18:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 278,
                        "nodeType": "ExpressionStatement",
                        "src": "5622:18:12"
                      },
                      {
                        "expression": {
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5654:5:12",
                          "subExpression": {
                            "id": 279,
                            "name": "idx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "5654:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 281,
                        "nodeType": "ExpressionStatement",
                        "src": "5654:5:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 258,
                        "name": "deletedSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "5507:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5507:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5530:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5507:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 283,
                  "nodeType": "WhileStatement",
                  "src": "5500:170:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 284,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "5710:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 285,
                      "name": "_numSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "5716:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5710:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 309,
                  "nodeType": "IfStatement",
                  "src": "5707:235:12",
                  "trueBody": {
                    "id": 308,
                    "nodeType": "Block",
                    "src": "5726:216:12",
                    "statements": [
                      {
                        "body": {
                          "id": 306,
                          "nodeType": "Block",
                          "src": "5820:112:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 302,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5906:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5906:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 299,
                                    "name": "slotOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "5890:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "5890:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5890:27:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 305,
                              "nodeType": "ExpressionStatement",
                              "src": "5890:27:12"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 291,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "5794:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 292,
                              "name": "_numSlots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "5798:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 293,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "5810:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5798:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5794:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 307,
                        "initializationExpression": {
                          "assignments": [
                            288
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 288,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5787:1:12",
                              "nodeType": "VariableDeclaration",
                              "scope": 307,
                              "src": "5779:9:12",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 287,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5779:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 290,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5791:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5779:13:12"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5815:3:12",
                            "subExpression": {
                              "id": 296,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "5815:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 298,
                          "nodeType": "ExpressionStatement",
                          "src": "5815:3:12"
                        },
                        "nodeType": "ForStatement",
                        "src": "5774:158:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 310,
                      "name": "numSlotsFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "5986:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 311,
                        "name": "numSlotsFilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "6003:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 312,
                        "name": "_numSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "6020:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6003:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5986:43:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "5986:43:12"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 316,
                          "name": "addressToSlotsOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "6083:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
                            "typeString": "mapping(address => struct Raffle.slotOwner storage ref)"
                          }
                        },
                        "id": 319,
                        "indexExpression": {
                          "expression": {
                            "id": 317,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6103:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6103:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6083:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_slotOwner_$53_storage",
                          "typeString": "struct Raffle.slotOwner storage ref"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noOfSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "6083:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 321,
                      "name": "_numSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "6128:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6083:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "6083:54:12"
                },
                {
                  "expression": {
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 324,
                          "name": "addressToSlotsOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "6147:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
                            "typeString": "mapping(address => struct Raffle.slotOwner storage ref)"
                          }
                        },
                        "id": 327,
                        "indexExpression": {
                          "expression": {
                            "id": 325,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6167:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6167:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6147:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_slotOwner_$53_storage",
                          "typeString": "struct Raffle.slotOwner storage ref"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "enteredRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "6147:44:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 329,
                      "name": "noOfRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "6194:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6147:57:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "6147:57:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 332,
                      "name": "_method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "6277:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6288:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6277:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 344,
                  "nodeType": "IfStatement",
                  "src": "6274:101:12",
                  "trueBody": {
                    "id": 343,
                    "nodeType": "Block",
                    "src": "6290:85:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 335,
                                "name": "addressToSlotsOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "6304:19:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
                                  "typeString": "mapping(address => struct Raffle.slotOwner storage ref)"
                                }
                              },
                              "id": 338,
                              "indexExpression": {
                                "expression": {
                                  "id": 336,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6324:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6324:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6304:31:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slotOwner_$53_storage",
                                "typeString": "struct Raffle.slotOwner storage ref"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "noOfSlotsBought",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "6304:47:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 340,
                            "name": "_numSlots",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "6355:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6304:60:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 342,
                        "nodeType": "ExpressionStatement",
                        "src": "6304:60:12"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 346,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6430:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6430:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 348,
                        "name": "_numSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "6442:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 345,
                      "name": "SlotsClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "6417:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6417:35:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "EmitStatement",
                  "src": "6412:40:12"
                }
              ]
            },
            "documentation": {
              "id": 158,
              "nodeType": "StructuredDocumentation",
              "src": "3586:241:12",
              "text": " @dev Function used to buy slots or get free slots\n @param _numSlots No of slots\n @param _method 0 if buying, 1 if getting it for free\n @notice For getting free slots, the number must be calculated at front-end"
            },
            "functionSelector": "14d287a4",
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 164,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1215,
                  "src": "3907:13:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3907:15:12"
              }
            ],
            "name": "purchaseSlot",
            "nameLocation": "3841:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "_numSlots",
                  "nameLocation": "3862:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "3854:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3854:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "_method",
                  "nameLocation": "3881:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "3873:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3873:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3853:36:12"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3922:0:12"
            },
            "scope": 860,
            "src": "3832:2627:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "6720:1505:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 362,
                            "name": "currentPhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "6796:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6812:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6796:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 365,
                            "name": "isStopped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "6817:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6830:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6817:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6796:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a2043616e6e6f7420726566756e6420647572696e67207468697320726f756e642e",
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6833:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcf59eca7f53acb72cc6acdcc9e82d76e74a512036bb4a7b320234fb13aaff11",
                          "typeString": "literal_string \"Raffle: Cannot refund during this round.\""
                        },
                        "value": "Raffle: Cannot refund during this round."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fcf59eca7f53acb72cc6acdcc9e82d76e74a512036bb4a7b320234fb13aaff11",
                          "typeString": "literal_string \"Raffle: Cannot refund during this round.\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6788:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6788:88:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "6788:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 373,
                            "name": "nftOwned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "6958:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6970:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6958:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 376,
                            "name": "isStopped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "6978:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6991:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6978:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6958:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a20436f6e747261637420646f6573206e6f74206f776e20726166666c6561626c65204e46542e",
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6994:47:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cd9df64ef0be2a5b3c9c1d3f99256260bed8da9c149077d58a2870fe663cdfb",
                          "typeString": "literal_string \"Raffle: Contract does not own raffleable NFT.\""
                        },
                        "value": "Raffle: Contract does not own raffleable NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cd9df64ef0be2a5b3c9c1d3f99256260bed8da9c149077d58a2870fe663cdfb",
                          "typeString": "literal_string \"Raffle: Contract does not own raffleable NFT.\""
                        }
                      ],
                      "id": 372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6950:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6950:92:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "6950:92:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 384,
                              "name": "addressToSlotsOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "7152:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
                                "typeString": "mapping(address => struct Raffle.slotOwner storage ref)"
                              }
                            },
                            "id": 387,
                            "indexExpression": {
                              "expression": {
                                "id": 385,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7172:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7172:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7152:31:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_slotOwner_$53_storage",
                              "typeString": "struct Raffle.slotOwner storage ref"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "noOfSlotsBought",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "7152:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 389,
                            "name": "deleteIndices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "7203:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7203:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7152:71:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a204164647265737320646964206e6f742062757920746865736520736c6f74732e",
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7225:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87862ae3d281bc664e1924bc2f11c012a8bdd12cfa61921ba299c992d9516de3",
                          "typeString": "literal_string \"Raffle: Address did not buy these slots.\""
                        },
                        "value": "Raffle: Address did not buy these slots."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87862ae3d281bc664e1924bc2f11c012a8bdd12cfa61921ba299c992d9516de3",
                          "typeString": "literal_string \"Raffle: Address did not buy these slots.\""
                        }
                      ],
                      "id": 383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7144:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7144:124:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "7144:124:12"
                },
                {
                  "assignments": [
                    396
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 396,
                      "mutability": "mutable",
                      "name": "idx",
                      "nameLocation": "7287:3:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 492,
                      "src": "7279:11:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 395,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7279:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 398,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7293:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7279:15:12"
                },
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "deletedCount",
                      "nameLocation": "7312:12:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 492,
                      "src": "7304:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7304:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 402,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7327:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7304:24:12"
                },
                {
                  "body": {
                    "id": 451,
                    "nodeType": "Block",
                    "src": "7411:349:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 407,
                              "name": "deleteIndices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "7428:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 409,
                            "indexExpression": {
                              "id": 408,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "7442:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7428:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 410,
                              "name": "slotOwners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "7449:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7449:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7428:38:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 447,
                        "nodeType": "IfStatement",
                        "src": "7425:306:12",
                        "trueBody": {
                          "id": 446,
                          "nodeType": "Block",
                          "src": "7467:264:12",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 413,
                                    "name": "slotOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "7489:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 417,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 414,
                                      "name": "deleteIndices",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 356,
                                      "src": "7500:13:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 416,
                                    "indexExpression": {
                                      "id": 415,
                                      "name": "idx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 396,
                                      "src": "7514:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7500:18:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7489:30:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 418,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7523:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7523:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7489:44:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 445,
                              "nodeType": "IfStatement",
                              "src": "7485:232:12",
                              "trueBody": {
                                "id": 444,
                                "nodeType": "Block",
                                "src": "7535:182:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 421,
                                          "name": "slotOwners",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 65,
                                          "src": "7557:10:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 425,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 422,
                                            "name": "deleteIndices",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 356,
                                            "src": "7568:13:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 424,
                                          "indexExpression": {
                                            "id": 423,
                                            "name": "idx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 396,
                                            "src": "7582:3:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7568:18:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "7557:30:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 428,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7598:1:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 427,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7590:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 426,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7590:7:12",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 429,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7590:10:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "7557:43:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 431,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7557:43:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 435,
                                            "name": "deleteIndices",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 356,
                                            "src": "7640:13:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 437,
                                          "indexExpression": {
                                            "id": 436,
                                            "name": "idx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 396,
                                            "src": "7654:3:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7640:18:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 432,
                                          "name": "deletedSlots",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 68,
                                          "src": "7622:12:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "7622:17:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                          "typeString": "function (uint256[] storage pointer,uint256)"
                                        }
                                      },
                                      "id": 438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7622:37:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 439,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7622:37:12"
                                  },
                                  {
                                    "expression": {
                                      "id": 442,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 440,
                                        "name": "deletedCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 400,
                                        "src": "7681:12:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "hexValue": "31",
                                        "id": 441,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7697:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "7681:17:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 443,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7681:17:12"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7744:5:12",
                          "subExpression": {
                            "id": 448,
                            "name": "idx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "7744:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 450,
                        "nodeType": "ExpressionStatement",
                        "src": "7744:5:12"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 403,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "7383:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 404,
                        "name": "deleteIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "7389:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7389:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7383:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 452,
                  "nodeType": "WhileStatement",
                  "src": "7376:384:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 459,
                          "name": "deletedCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 400,
                          "src": "7835:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 460,
                          "name": "slotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "7850:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7835:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 455,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7814:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7814:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7806:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 453,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7806:8:12",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7806:19:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7806:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7806:54:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "7806:54:12"
                },
                {
                  "expression": {
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 464,
                      "name": "numSlotsFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "7904:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 465,
                        "name": "numSlotsFilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "7921:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 466,
                        "name": "deletedCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "7938:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7921:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7904:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "7904:46:12"
                },
                {
                  "expression": {
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 470,
                          "name": "addressToSlotsOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "8004:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
                            "typeString": "mapping(address => struct Raffle.slotOwner storage ref)"
                          }
                        },
                        "id": 473,
                        "indexExpression": {
                          "expression": {
                            "id": 471,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8024:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8024:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8004:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_slotOwner_$53_storage",
                          "typeString": "struct Raffle.slotOwner storage ref"
                        }
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noOfSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "8004:41:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 475,
                      "name": "deletedCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "8049:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8004:57:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "8004:57:12"
                },
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 478,
                          "name": "addressToSlotsOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "8071:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_slotOwner_$53_storage_$",
                            "typeString": "mapping(address => struct Raffle.slotOwner storage ref)"
                          }
                        },
                        "id": 481,
                        "indexExpression": {
                          "expression": {
                            "id": 479,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8091:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8091:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8071:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_slotOwner_$53_storage",
                          "typeString": "struct Raffle.slotOwner storage ref"
                        }
                      },
                      "id": 482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noOfSlotsBought",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "8071:47:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 483,
                      "name": "deletedCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "8122:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8071:63:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "8071:63:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8193:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8193:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 489,
                        "name": "deletedCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "8205:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 486,
                      "name": "SlotsRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "8179:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8179:39:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 491,
                  "nodeType": "EmitStatement",
                  "src": "8174:44:12"
                }
              ]
            },
            "documentation": {
              "id": 353,
              "nodeType": "StructuredDocumentation",
              "src": "6465:175:12",
              "text": " @dev Function to get refund from the raffle\n @param deleteIndices Pass the array of indices to be deleted\n @notice Only bought slots can be refunded"
            },
            "functionSelector": "9a23ec19",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 359,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 358,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1215,
                  "src": "6705:13:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "6705:15:12"
              }
            ],
            "name": "refundSlot",
            "nameLocation": "6654:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "deleteIndices",
                  "nameLocation": "6681:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "6665:29:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 354,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "6665:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 355,
                    "nodeType": "ArrayTypeName",
                    "src": "6665:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6664:31:12"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6720:0:12"
            },
            "scope": 860,
            "src": "6645:1580:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 527,
              "nodeType": "Block",
              "src": "8409:578:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 500,
                          "name": "numSlotsFilled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "8482:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8499:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8482:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a204e6f20736c6f7473206172652066696c6c6564",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8502:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fdfc8c2e6b33db71e031883333a3c44ad9ede361ba0dc86d0313fb9812e15aa",
                          "typeString": "literal_string \"Raffle: No slots are filled\""
                        },
                        "value": "Raffle: No slots are filled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fdfc8c2e6b33db71e031883333a3c44ad9ede361ba0dc86d0313fb9812e15aa",
                          "typeString": "literal_string \"Raffle: No slots are filled\""
                        }
                      ],
                      "id": 499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8474:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8474:58:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "8474:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 507,
                          "name": "nftOwned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "8604:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8616:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "8604:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a20436f6e747261637420646f6573206e6f74206f776e20726166666c6561626c65204e46542e",
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8622:47:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cd9df64ef0be2a5b3c9c1d3f99256260bed8da9c149077d58a2870fe663cdfb",
                          "typeString": "literal_string \"Raffle: Contract does not own raffleable NFT.\""
                        },
                        "value": "Raffle: Contract does not own raffleable NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cd9df64ef0be2a5b3c9c1d3f99256260bed8da9c149077d58a2870fe663cdfb",
                          "typeString": "literal_string \"Raffle: Contract does not own raffleable NFT.\""
                        }
                      ],
                      "id": 506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8596:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8596:74:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "8596:74:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 514,
                          "name": "randomResultRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "8762:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8787:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "8762:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a2043616e6e6f7420636f6c6c6563742077696e6e65722074776963652e",
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8794:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f05e09a11ccd5357d55f9109b13d9b0ddcfbba1aef88520232c0b3381504e0b2",
                          "typeString": "literal_string \"Raffle: Cannot collect winner twice.\""
                        },
                        "value": "Raffle: Cannot collect winner twice."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f05e09a11ccd5357d55f9109b13d9b0ddcfbba1aef88520232c0b3381504e0b2",
                          "typeString": "literal_string \"Raffle: Cannot collect winner twice.\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8754:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8754:79:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "8754:79:12"
                },
                {
                  "expression": {
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 520,
                      "name": "randomResultRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "8883:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8907:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8883:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "8883:28:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 524,
                      "name": "getRandomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "8963:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8963:17:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 498,
                  "id": 526,
                  "nodeType": "Return",
                  "src": "8956:24:12"
                }
              ]
            },
            "documentation": {
              "id": 494,
              "nodeType": "StructuredDocumentation",
              "src": "8231:105:12",
              "text": " @dev Internal Function called by exitLockPeriod\n @notice Calls the Chainlink Oracle"
            },
            "id": 528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectRandomWinner",
            "nameLocation": "8350:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8369:2:12"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "8398:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "8390:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8390:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8389:19:12"
            },
            "scope": 860,
            "src": "8341:646:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "9055:138:12",
              "statements": [
                {
                  "expression": {
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 534,
                      "name": "isStopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "9065:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9077:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9065:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "9065:13:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 544,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9135:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Raffle_$860",
                              "typeString": "contract Raffle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Raffle_$860",
                              "typeString": "contract Raffle"
                            }
                          ],
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9127:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 542,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9127:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9127:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 546,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9142:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9142:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 548,
                        "name": "nftID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "9154:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 539,
                            "name": "nftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "9097:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 538,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1375,
                          "src": "9089:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$1375_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9089:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1375",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1318,
                      "src": "9089:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9089:71:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "9089:71:12"
                },
                {
                  "expression": {
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 551,
                      "name": "nftOwned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "9170:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9181:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9170:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "9170:16:12"
                }
              ]
            },
            "functionSelector": "3912d466",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 531,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 888,
                    "src": "9036:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 532,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 530,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 901,
                  "src": "9027:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "9027:28:12"
              }
            ],
            "name": "stopTheRaffle",
            "nameLocation": "9002:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9015:2:12"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9055:0:12"
            },
            "scope": 860,
            "src": "8993:200:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 646,
              "nodeType": "Block",
              "src": "9311:1180:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 561,
                          "name": "nftOwned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "9380:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9392:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "9380:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a2043616e6e6f74206469737572627365204e465420746f2077696e6e657220776974686f757420686f6c64696e67204e46542e",
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9398:60:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f86aba778413a48d905e1821322f1dc20b35a78a2773d16704b934c8967a7f66",
                          "typeString": "literal_string \"Raffle: Cannot disurbse NFT to winner without holding NFT.\""
                        },
                        "value": "Raffle: Cannot disurbse NFT to winner without holding NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f86aba778413a48d905e1821322f1dc20b35a78a2773d16704b934c8967a7f66",
                          "typeString": "literal_string \"Raffle: Cannot disurbse NFT to winner without holding NFT.\""
                        }
                      ],
                      "id": 560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9372:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9372:87:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "9372:87:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 568,
                          "name": "randomResultRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "9537:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9562:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "9537:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a2043616e6e6f7420646973627572736520746f2077696e6e657220776974686f757420686176696e6720636f6c6c6563746564206f6e652e",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9568:65:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a11d9856e909951162eca0eb43514bc81dc631fc356394c53e8ab186f90c4fc6",
                          "typeString": "literal_string \"Raffle: Cannot disburse to winner without having collected one.\""
                        },
                        "value": "Raffle: Cannot disburse to winner without having collected one."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a11d9856e909951162eca0eb43514bc81dc631fc356394c53e8ab186f90c4fc6",
                          "typeString": "literal_string \"Raffle: Cannot disburse to winner without having collected one.\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9529:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9529:105:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "9529:105:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 575,
                          "name": "randomResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "9703:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9719:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9703:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a20506c65617365207761697420666f7220436861696e6c696e6b2056524620746f20757064617465207468652077696e6e65722066697273742e",
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9722:67:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_828892a51642e4692397926551d3ddd78044a0ffbb15463a247a609f7e27a9ad",
                          "typeString": "literal_string \"Raffle: Please wait for Chainlink VRF to update the winner first.\""
                        },
                        "value": "Raffle: Please wait for Chainlink VRF to update the winner first."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_828892a51642e4692397926551d3ddd78044a0ffbb15463a247a609f7e27a9ad",
                          "typeString": "literal_string \"Raffle: Please wait for Chainlink VRF to update the winner first.\""
                        }
                      ],
                      "id": 574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9695:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9695:95:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "9695:95:12"
                },
                {
                  "assignments": [
                    582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 582,
                      "mutability": "mutable",
                      "name": "randomNumber",
                      "nameLocation": "9809:12:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "9801:20:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 581,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9801:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 584,
                  "initialValue": {
                    "id": 583,
                    "name": "randomResult",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "9824:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9801:35:12"
                },
                {
                  "assignments": [
                    586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 586,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "9854:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "9846:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 585,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9846:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 587,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9846:14:12"
                },
                {
                  "body": {
                    "id": 616,
                    "nodeType": "Block",
                    "src": "9882:235:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 589,
                              "name": "slotOwners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "9899:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 594,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 590,
                                "name": "randomNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 582,
                                "src": "9910:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "expression": {
                                  "id": 591,
                                  "name": "slotOwners",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "9925:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "9925:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9910:32:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9899:44:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9955:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9947:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 595,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9947:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9947:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9899:58:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 611,
                        "nodeType": "IfStatement",
                        "src": "9896:171:12",
                        "trueBody": {
                          "id": 610,
                          "nodeType": "Block",
                          "src": "9958:109:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 600,
                                  "name": "winner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 586,
                                  "src": "9976:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 601,
                                    "name": "slotOwners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "9985:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 606,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 602,
                                      "name": "randomNumber",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 582,
                                      "src": "9996:12:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "%",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 603,
                                        "name": "slotOwners",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65,
                                        "src": "10011:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 604,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "10011:17:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9996:32:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9985:44:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "9976:53:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 608,
                              "nodeType": "ExpressionStatement",
                              "src": "9976:53:12"
                            },
                            {
                              "id": 609,
                              "nodeType": "Break",
                              "src": "10047:5:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 612,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "10081:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10097:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "10081:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 615,
                        "nodeType": "ExpressionStatement",
                        "src": "10081:17:12"
                      }
                    ]
                  },
                  "condition": {
                    "hexValue": "74727565",
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9877:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "id": 617,
                  "nodeType": "WhileStatement",
                  "src": "9871:246:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 624,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10207:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Raffle_$860",
                              "typeString": "contract Raffle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Raffle_$860",
                              "typeString": "contract Raffle"
                            }
                          ],
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10199:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 622,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10199:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10199:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 626,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "10214:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 627,
                        "name": "nftID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10222:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 619,
                            "name": "nftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "10169:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 618,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1375,
                          "src": "10161:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$1375_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10161:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$1375",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1318,
                      "src": "10161:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10161:67:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "10161:67:12"
                },
                {
                  "expression": {
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 630,
                      "name": "nftOwned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "10266:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10277:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10266:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "10266:16:12"
                },
                {
                  "expression": {
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 634,
                      "name": "randomResultRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "10341:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10365:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10341:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "10341:29:12"
                },
                {
                  "expression": {
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 638,
                      "name": "randomResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "10405:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10420:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10405:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "10405:16:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 643,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "10477:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 642,
                      "name": "RaffleWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "10467:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10467:17:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "EmitStatement",
                  "src": "10462:22:12"
                }
              ]
            },
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "9199:72:12",
              "text": " Disburses NFT to winner and raised raffle pool to owner"
            },
            "functionSelector": "1a8cef9a",
            "id": 647,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disburseWinner",
            "nameLocation": "9285:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9299:2:12"
            },
            "returnParameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9311:0:12"
            },
            "scope": 860,
            "src": "9276:1215:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 683,
              "nodeType": "Block",
              "src": "10680:267:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 655,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "10698:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10714:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10698:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c792063616c6c207468697320616674657220726166666c6520726f756e64",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10717:39:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eca3936eeedcc33753e96d1729d4d306d02baef268eeba5e969e3cb433a8af1a",
                          "typeString": "literal_string \"Can only call this after raffle round\""
                        },
                        "value": "Can only call this after raffle round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eca3936eeedcc33753e96d1729d4d306d02baef268eeba5e969e3cb433a8af1a",
                          "typeString": "literal_string \"Can only call this after raffle round\""
                        }
                      ],
                      "id": 654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10690:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10690:67:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "10690:67:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 662,
                          "name": "countDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "10775:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 663,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10787:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10787:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10775:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206973207374696c6c20696e20726166666c6520726f756e64",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10804:35:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_733b06ad230ab787161e1ad428ad67dae8e2534b83e1715ce7ee940ee7d64076",
                          "typeString": "literal_string \"Contract is still in raffle round\""
                        },
                        "value": "Contract is still in raffle round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_733b06ad230ab787161e1ad428ad67dae8e2534b83e1715ce7ee940ee7d64076",
                          "typeString": "literal_string \"Contract is still in raffle round\""
                        }
                      ],
                      "id": 661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10767:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10767:73:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "10767:73:12"
                },
                {
                  "expression": {
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 669,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "10859:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10874:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10859:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 672,
                  "nodeType": "ExpressionStatement",
                  "src": "10859:16:12"
                },
                {
                  "expression": {
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 673,
                      "name": "countDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "10885:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 674,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10897:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "10897:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3330",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10915:7:12",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2592000_by_1",
                          "typeString": "int_const 2592000"
                        },
                        "value": "30"
                      },
                      "src": "10897:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10885:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "10885:37:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 680,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "10932:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10932:8:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "10932:8:12"
                }
              ]
            },
            "documentation": {
              "id": 648,
              "nodeType": "StructuredDocumentation",
              "src": "10497:113:12",
              "text": " @dev Function to lock the funds and enter phase 1\n @notice Can only be called by admin role"
            },
            "functionSelector": "31f94d19",
            "id": 684,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 651,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 888,
                    "src": "10660:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 652,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 650,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 901,
                  "src": "10651:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "10651:28:12"
              }
            ],
            "name": "enterLockPeriod",
            "nameLocation": "10624:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10639:2:12"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10680:0:12"
            },
            "scope": 860,
            "src": "10615:332:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 721,
              "nodeType": "Block",
              "src": "11195:252:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 696,
                          "name": "currentPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "11213:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11229:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11213:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c792063616c6c2074686973206166746572206c6f636b20706572696f64",
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11232:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eb0a9efa6c0263f1ea67d0bac57362d96fc674071a52b62e160ad6a230282e4",
                          "typeString": "literal_string \"Can only call this after lock period\""
                        },
                        "value": "Can only call this after lock period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eb0a9efa6c0263f1ea67d0bac57362d96fc674071a52b62e160ad6a230282e4",
                          "typeString": "literal_string \"Can only call this after lock period\""
                        }
                      ],
                      "id": 695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11205:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11205:66:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "11205:66:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 703,
                          "name": "countDown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "11289:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 704,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11301:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11301:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11289:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206973207374696c6c20696e206c6f636b20706572696f64",
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11318:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1252746173b979fbbe9581b74095f06f61af38228e88f460c5ff290e1c83819a",
                          "typeString": "literal_string \"Contract is still in lock period\""
                        },
                        "value": "Contract is still in lock period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1252746173b979fbbe9581b74095f06f61af38228e88f460c5ff290e1c83819a",
                          "typeString": "literal_string \"Contract is still in lock period\""
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11281:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11281:72:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "11281:72:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 710,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
                      "src": "11365:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11365:10:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "11365:10:12"
                },
                {
                  "expression": {
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 713,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "11385:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "11400:2:12",
                      "subExpression": {
                        "hexValue": "31",
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11401:1:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_minus_1_by_1",
                        "typeString": "int_const -1"
                      }
                    },
                    "src": "11385:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "11385:17:12"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 718,
                      "name": "collectRandomWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "11419:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () returns (bytes32)"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11419:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 694,
                  "id": 720,
                  "nodeType": "Return",
                  "src": "11412:28:12"
                }
              ]
            },
            "documentation": {
              "id": 685,
              "nodeType": "StructuredDocumentation",
              "src": "10953:133:12",
              "text": " @dev Function to return -1 phase and call the chainlink oracle\n @notice Can only be called by the admin role   "
            },
            "functionSelector": "0ca098b2",
            "id": 722,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 688,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 888,
                    "src": "11135:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 687,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 901,
                  "src": "11126:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "11126:28:12"
              },
              {
                "arguments": [],
                "id": 691,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 690,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1226,
                  "src": "11155:10:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "11155:12:12"
              }
            ],
            "name": "exitLockPeriod",
            "nameLocation": "11100:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11114:2:12"
            },
            "returnParameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "11185:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "11177:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11177:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11176:19:12"
            },
            "scope": 860,
            "src": "11091:356:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1392
            ],
            "body": {
              "id": 782,
              "nodeType": "Block",
              "src": "11685:537:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 738,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "11748:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 739,
                          "name": "nftContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "11756:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11748:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c653a20526166666c65206e6f7420696e6974696174656420776974682074686973204e465420636f6e74726163742e",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11769:54:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f40a24cb78833604b79ec408a7be8517241dbbdeaef8c7ddb3304a10b551e0e0",
                          "typeString": "literal_string \"Raffle: Raffle not initiated with this NFT contract.\""
                        },
                        "value": "Raffle: Raffle not initiated with this NFT contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f40a24cb78833604b79ec408a7be8517241dbbdeaef8c7ddb3304a10b551e0e0",
                          "typeString": "literal_string \"Raffle: Raffle not initiated with this NFT contract.\""
                        }
                      ],
                      "id": 737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11740:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11740:84:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "11740:84:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 745,
                            "name": "currentPhase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "11842:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "11858:2:12",
                            "subExpression": {
                              "hexValue": "31",
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11859:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          },
                          "src": "11842:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 749,
                            "name": "nftOwned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "11864:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11876:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "11864:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11842:39:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f742072656365697665204e46542061742074686973207068617365",
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11883:34:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4ff4d2327e240c67a22508ee525851bcae01bd60594d56db02b10651e1f1d6a",
                          "typeString": "literal_string \"Cannot receive NFT at this phase\""
                        },
                        "value": "Cannot receive NFT at this phase"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4ff4d2327e240c67a22508ee525851bcae01bd60594d56db02b10651e1f1d6a",
                          "typeString": "literal_string \"Cannot receive NFT at this phase\""
                        }
                      ],
                      "id": 744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11834:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11834:84:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "11834:84:12"
                },
                {
                  "expression": {
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 756,
                      "name": "nftID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "11937:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 757,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 729,
                      "src": "11945:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11937:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "11937:15:12"
                },
                {
                  "expression": {
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 760,
                      "name": "currentPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "11963:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11978:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11963:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "11963:16:12"
                },
                {
                  "expression": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11989:12:12",
                    "subExpression": {
                      "id": 764,
                      "name": "noOfRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "11989:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "11989:12:12"
                },
                {
                  "expression": {
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 767,
                      "name": "countDown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "12011:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 768,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12023:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12023:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "37",
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12041:6:12",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_604800_by_1",
                          "typeString": "int_const 604800"
                        },
                        "value": "7"
                      },
                      "src": "12023:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12011:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "12011:36:12"
                },
                {
                  "expression": {
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 774,
                      "name": "nftOwned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "12098:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12109:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12098:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "12098:15:12"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 778,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "12185:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Raffle_$860",
                          "typeString": "contract Raffle"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 783,
                      "src": "12185:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "12185:30:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 736,
                  "id": 781,
                  "nodeType": "Return",
                  "src": "12178:37:12"
                }
              ]
            },
            "documentation": {
              "id": 723,
              "nodeType": "StructuredDocumentation",
              "src": "11454:48:12",
              "text": " @dev Called by the NFT contract"
            },
            "functionSelector": "150b7a02",
            "id": 783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "11516:16:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 733,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11659:8:12"
            },
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11550:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "11542:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11542:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11576:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "11568:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11568:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11599:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "11591:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11591:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11631:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "11616:19:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11616:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11532:109:12"
            },
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "11677:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "11677:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11676:8:12"
            },
            "scope": 860,
            "src": "11507:715:12",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "12335:157:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 794,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12376:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Raffle_$860",
                                    "typeString": "contract Raffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Raffle_$860",
                                    "typeString": "contract Raffle"
                                  }
                                ],
                                "id": 793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12368:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 792,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12368:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12368:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 790,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1467,
                              "src": "12353:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1993",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1925,
                            "src": "12353:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12353:29:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 797,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "12386:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12353:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e7472616374207769746820666175636574",
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12391:45:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet\""
                        },
                        "value": "Not enough LINK - fill contract with faucet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet\""
                        }
                      ],
                      "id": 789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12345:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12345:92:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "12345:92:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 803,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "12472:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 804,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "12481:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 802,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1464,
                      "src": "12454:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12454:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 788,
                  "id": 806,
                  "nodeType": "Return",
                  "src": "12447:38:12"
                }
              ]
            },
            "documentation": {
              "id": 784,
              "nodeType": "StructuredDocumentation",
              "src": "12228:40:12",
              "text": " Requests randomness "
            },
            "functionSelector": "dbdff2c1",
            "id": 808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nameLocation": "12282:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12297:2:12"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "12324:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "12316:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12316:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12315:19:12"
            },
            "scope": 860,
            "src": "12273:219:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1408
            ],
            "body": {
              "id": 821,
              "nodeType": "Block",
              "src": "12647:42:12",
              "statements": [
                {
                  "expression": {
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 817,
                      "name": "randomResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "12657:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 818,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "12672:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12657:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "12657:25:12"
                }
              ]
            },
            "documentation": {
              "id": 809,
              "nodeType": "StructuredDocumentation",
              "src": "12498:60:12",
              "text": " Callback function used by VRF Coordinator"
            },
            "id": 822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "12572:17:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 815,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12638:8:12"
            },
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "12598:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "12590:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12590:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nameLocation": "12617:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "12609:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12609:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12589:39:12"
            },
            "returnParameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12647:0:12"
            },
            "scope": 860,
            "src": "12563:126:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 849,
              "nodeType": "Block",
              "src": "13015:183:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 832,
                          "name": "newTreasuryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 825,
                          "src": "13033:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13063:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13055:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 833,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13055:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13055:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13033:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6e207a65726f2061646472657373207265717569726564",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13067:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01e5fe5cf1db2558233d4fec9a54af1da1c44025b6bafe641e1377458f8bf86b",
                          "typeString": "literal_string \"Non zero address required\""
                        },
                        "value": "Non zero address required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01e5fe5cf1db2558233d4fec9a54af1da1c44025b6bafe641e1377458f8bf86b",
                          "typeString": "literal_string \"Non zero address required\""
                        }
                      ],
                      "id": 831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13025:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13025:70:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "13025:70:12"
                },
                {
                  "expression": {
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 841,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "13105:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 842,
                      "name": "newTreasuryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "13116:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13105:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 844,
                  "nodeType": "ExpressionStatement",
                  "src": "13105:29:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 846,
                        "name": "newTreasuryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "13172:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 845,
                      "name": "TreasuryAddressChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "13149:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13149:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 848,
                  "nodeType": "EmitStatement",
                  "src": "13144:47:12"
                }
              ]
            },
            "documentation": {
              "id": 823,
              "nodeType": "StructuredDocumentation",
              "src": "12696:225:12",
              "text": " @dev Function that allows changing the treasury address\n @notice Can only be called by the owner of the contract\n @param newTreasuryAddress The new address to which the collected fees will be spent"
            },
            "functionSelector": "a6f353f0",
            "id": 850,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 828,
                    "name": "TREASURY_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "13001:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 829,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 827,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 901,
                  "src": "12992:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "12992:23:12"
              }
            ],
            "name": "changeTreasuryAddress",
            "nameLocation": "12935:21:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "newTreasuryAddress",
                  "nameLocation": "12965:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "12957:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12957:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12956:28:12"
            },
            "returnParameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13015:0:12"
            },
            "scope": 860,
            "src": "12926:272:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 858,
              "nodeType": "Block",
              "src": "13266:34:12",
              "statements": [
                {
                  "expression": {
                    "id": 856,
                    "name": "slotOwners",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65,
                    "src": "13283:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 855,
                  "id": 857,
                  "nodeType": "Return",
                  "src": "13276:17:12"
                }
              ]
            },
            "functionSelector": "9451b981",
            "id": 859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSlotOwners",
            "nameLocation": "13213:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13226:2:12"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "13248:17:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 852,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13248:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 853,
                    "nodeType": "ArrayTypeName",
                    "src": "13248:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13247:19:12"
            },
            "scope": 860,
            "src": "13204:96:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 861,
        "src": "541:12761:12",
        "usedErrors": []
      }
    ],
    "src": "32:13271:12"
  },
  "bytecode": "61010060405260006007819055600019600855600a819055600c819055600d805460ff19908116909155600e919091556012805490911690553480156200004557600080fd5b5060405162002860380380620028608339810160408190526200006891620001d7565b6001600160a01b0380851660a05283166080526002805460ff19169055620000926000336200010a565b620000be7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca98a6200010a565b600680546001600160a01b03199081166001600160a01b039a8b161790915560c095909552600580549095169690971695909517909255505060e091909152600355600455506200026e565b6200011682826200011a565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000116576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001763390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b0381168114620001d257600080fd5b919050565b60008060008060008060008060006101208a8c031215620001f757600080fd5b620002028a620001ba565b98506200021260208b01620001ba565b97506200022260408b01620001ba565b965060608a0151955060808a015194506200024060a08b01620001ba565b93506200025060c08b01620001ba565b925060e08a015191506101008a015190509295985092959850929598565b60805160a05160c05160e0516125a3620002bd600039600081816118da01526119f7015260006119d60152600081816113d60152611d790152600081816119040152611d4a01526125a36000f3fe60806040526004361061020f5760003560e01c80635d1cf7ea116101185780639cc1f301116100a0578063ce16097e1161006f578063ce16097e146105e1578063d11a57ec14610601578063d547741f14610635578063d56d229d14610655578063dbdff2c11461067557600080fd5b80639cc1f30114610576578063a217fddf14610596578063a6f353f0146105ab578063c3994752146105cb57600080fd5b8063796fc402116100e7578063796fc4021461049d57806391d14854146104f45780639451b9811461051457806394985ddd146105365780639a23ec191461055657600080fd5b80635d1cf7ea146104235780635fcbd5b61461043957806361d027b31461044f5780637489ce481461048757600080fd5b80632efcd76f1161019b5780633912d4661161016a5780633912d466146103b05780633f683b6a146103c557806342619f66146103db57806347984f2c146103f15780635c975abb1461040b57600080fd5b80632efcd76f146103455780632f2ff15d1461035b57806331f94d191461037b57806336568abe1461039057600080fd5b806314d287a4116101e257806314d287a414610298578063150b7a02146102ad57806315cc7b2a146102e65780631a8cef9a14610300578063248a9ca31461031557600080fd5b806301ffc9a71461021457806304e0465614610249578063055ad42e1461026d5780630ca098b214610283575b600080fd5b34801561022057600080fd5b5061023461022f36600461206c565b61068a565b60405190151581526020015b60405180910390f35b34801561025557600080fd5b5061025f60035481565b604051908152602001610240565b34801561027957600080fd5b5061025f60085481565b34801561028f57600080fd5b5061025f6106c1565b6102ab6102a6366004612096565b6107e7565b005b3480156102b957600080fd5b506102cd6102c83660046120d4565b610d30565b6040516001600160e01b03199091168152602001610240565b3480156102f257600080fd5b506012546102349060ff1681565b34801561030c57600080fd5b506102ab610e5e565b34801561032157600080fd5b5061025f61033036600461216f565b60009081526020819052604090206001015490565b34801561035157600080fd5b5061025f60075481565b34801561036757600080fd5b506102ab610376366004612188565b611126565b34801561038757600080fd5b506102ab611151565b34801561039c57600080fd5b506102ab6103ab366004612188565b611236565b3480156103bc57600080fd5b506102ab6112b4565b3480156103d157600080fd5b5061025f600a5481565b3480156103e757600080fd5b5061025f600c5481565b3480156103fd57600080fd5b50600d546102349060ff1681565b34801561041757600080fd5b5060025460ff16610234565b34801561042f57600080fd5b5061025f600e5481565b34801561044557600080fd5b5061025f60095481565b34801561045b57600080fd5b5060065461046f906001600160a01b031681565b6040516001600160a01b039091168152602001610240565b34801561049357600080fd5b5061025f60045481565b3480156104a957600080fd5b506104d96104b83660046121b4565b60116020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610240565b34801561050057600080fd5b5061023461050f366004612188565b611340565b34801561052057600080fd5b50610529611369565b60405161024091906121cf565b34801561054257600080fd5b506102ab610551366004612096565b6113cb565b34801561056257600080fd5b506102ab61057136600461221c565b611449565b34801561058257600080fd5b5061025f61059136600461216f565b61177b565b3480156105a257600080fd5b5061025f600081565b3480156105b757600080fd5b506102ab6105c63660046121b4565b61179c565b3480156105d757600080fd5b5061025f600b5481565b3480156105ed57600080fd5b5061046f6105fc36600461216f565b611872565b34801561060d57600080fd5b5061025f7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca981565b34801561064157600080fd5b506102ab610650366004612188565b61189c565b34801561066157600080fd5b5060055461046f906001600160a01b031681565b34801561068157600080fd5b5061025f6118c2565b60006001600160e01b03198216637965db0b60e01b14806106bb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000806106ce8133611a20565b60025460ff1661071c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064015b60405180910390fd5b60085460011461077a5760405162461bcd60e51b8152602060048201526024808201527f43616e206f6e6c792063616c6c2074686973206166746572206c6f636b2070656044820152631c9a5bd960e21b6064820152608401610713565b42600954116107cb5760405162461bcd60e51b815260206004820181905260248201527f436f6e7472616374206973207374696c6c20696e206c6f636b20706572696f646044820152606401610713565b6107d3611a84565b6000196008556107e1611b17565b91505090565b60025460ff161561080a5760405162461bcd60e51b815260040161071390612291565b6008541561085a5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742062757920647572696e67207468697320726f756e64000000006044820152606401610713565b600082116108aa5760405162461bcd60e51b815260206004820181905260248201527f526166666c653a2043616e6e6f74207075726368617365203020736c6f74732e6044820152606401610713565b60125460ff1615156001146108d15760405162461bcd60e51b8152600401610713906122bb565b600454600e54106109305760405162461bcd60e51b8152602060048201526024808201527f526166666c653a20416c6c20726166666c6520736c6f7473206172652066696c6044820152633632b21760e11b6064820152608401610713565b600d5460ff16156109a95760405162461bcd60e51b815260206004820152603a60248201527f526166666c653a2043616e6e6f7420707572636861736520736c6f742061667460448201527f65722077696e6e657220686173206265656e2063686f73656e2e0000000000006064820152608401610713565b6003546109b6908361231e565b341015806109c45750806001145b610a2d5760405162461bcd60e51b815260206004820152603460248201527f526166666c653a20496e73756666696369656e74204554482070726f7669646560448201527332103a3790383ab931b430b9b29039b637ba399760611b6064820152608401610713565b60075433600090815260116020526040902060020154108015610a79575033600090815260116020526040902060010154610a6a90600a90612353565b610a75906001612367565b8211155b80610a82575080155b610ae35760405162461bcd60e51b815260206004820152602c60248201527f526166666c653a2043616e6e6f7420696e6372656d656e7420736c6f7473206960448201526b1b881d1a1a5cc81c9bdd5b9960a21b6064820152608401610713565b600e54600454610af3919061237f565b821115610b595760405162461bcd60e51b815260206004820152602e60248201527f526166666c653a2052657175657374696e6720746f207075726368617365207460448201526d37b79036b0b73c9039b637ba399760911b6064820152608401610713565b60005b60105415610c0c57601080543391600f91610b799060019061237f565b81548110610b8957610b89612396565b906000526020600020015481548110610ba457610ba4612396565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506010805480610be357610be36123ac565b600190038181906000526020600020016000905590558080610c04906123c2565b915050610b5c565b82811015610c7e5760005b610c21828561237f565b811015610c7c57600f80546001810182556000919091527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180546001600160a01b0319163317905580610c74816123c2565b915050610c17565b505b82600e54610c8c9190612367565b600e553360009081526011602052604081208054859290610cae908490612367565b90915550506007543360009081526011602052604090206002015581610cf6573360009081526011602052604081206001018054859290610cf0908490612367565b90915550505b60405183815233907f86e01953521e8ca90cf9568ce180d715096931ef1c18c1343b19c53e5c6e63619060200160405180910390a2505050565b6005546000906001600160a01b03868116911614610dad5760405162461bcd60e51b815260206004820152603460248201527f526166666c653a20526166666c65206e6f7420696e697469617465642077697460448201527334103a3434b99027232a1031b7b73a3930b1ba1760611b6064820152608401610713565b600854600019148015610dc3575060125460ff16155b610e0f5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f742072656365697665204e465420617420746869732070686173656044820152606401610713565b600b849055600060088190556007805491610e29836123c2565b90915550610e3c90504262093a80612367565b600955506012805460ff19166001179055630a85bd0160e11b95945050505050565b60125460ff161515600114610edb5760405162461bcd60e51b815260206004820152603a60248201527f526166666c653a2043616e6e6f74206469737572627365204e465420746f207760448201527f696e6e657220776974686f757420686f6c64696e67204e46542e0000000000006064820152608401610713565b600d5460ff161515600114610f585760405162461bcd60e51b815260206004820152603f60248201527f526166666c653a2043616e6e6f7420646973627572736520746f2077696e6e6560448201527f7220776974686f757420686176696e6720636f6c6c6563746564206f6e652e006064820152608401610713565b600c54610fd75760405162461bcd60e51b815260206004820152604160248201527f526166666c653a20506c65617365207761697420666f7220436861696e6c696e60448201527f6b2056524620746f20757064617465207468652077696e6e65722066697273746064820152601760f91b608482015260a401610713565b600c5460005b600f805460009190610fef90856123dd565b81548110610fff57610fff612396565b6000918252602090912001546001600160a01b03161461105357600f805461102790846123dd565b8154811061103757611037612396565b6000918252602090912001546001600160a01b03169050611065565b61105e600183612367565b9150610fdd565b600554600b54604051632142170760e11b81523060048201526001600160a01b03848116602483015260448201929092529116906342842e0e90606401600060405180830381600087803b1580156110bc57600080fd5b505af11580156110d0573d6000803e3d6000fd5b50506012805460ff19908116909155600d8054909116905550506000600c8190556040516001600160a01b038316917fa2564fbe9f8e6077adcf46dfe7c571eae3b5a67375d138e992f66e4db4f9752691a25050565b6000828152602081905260409020600101546111428133611a20565b61114c8383611c05565b505050565b600061115d8133611a20565b600854156111bb5760405162461bcd60e51b815260206004820152602560248201527f43616e206f6e6c792063616c6c207468697320616674657220726166666c65206044820152641c9bdd5b9960da1b6064820152608401610713565b42600954116112165760405162461bcd60e51b815260206004820152602160248201527f436f6e7472616374206973207374696c6c20696e20726166666c6520726f756e6044820152601960fa1b6064820152608401610713565b60016008556112284262278d00612367565b600955611233611c89565b50565b6001600160a01b03811633146112a65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610713565b6112b08282611ce1565b5050565b60006112c08133611a20565b6001600a55600554600b54604051632142170760e11b815230600482015233602482015260448101919091526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561131b57600080fd5b505af115801561132f573d6000803e3d6000fd5b50506012805460ff19169055505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600f8054806020026020016040519081016040528092919081815260200182805480156113c157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116113a3575b5050505050905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114435760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610713565b600c5550565b60025460ff161561146c5760405162461bcd60e51b815260040161071390612291565b600854158061147d5750600a546001145b6114da5760405162461bcd60e51b815260206004820152602860248201527f526166666c653a2043616e6e6f7420726566756e6420647572696e672074686960448201526739903937bab7321760c11b6064820152608401610713565b60125460ff161515600114806114f25750600a546001145b61150e5760405162461bcd60e51b8152600401610713906122bb565b336000908152601160205260409020600101548111156115815760405162461bcd60e51b815260206004820152602860248201527f526166666c653a204164647265737320646964206e6f74206275792074686573604482015267329039b637ba399760c11b6064820152608401610713565b6000805b828210156116a857600f548484848181106115a2576115a2612396565b9050602002013510156116965733600f8585858181106115c4576115c4612396565b90506020020135815481106115db576115db612396565b6000918252602090912001546001600160a01b03161415611696576000600f85858581811061160c5761160c612396565b905060200201358154811061162357611623612396565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550601084848481811061166557611665612396565b8354600180820186556000958652602095869020929095029390930135920191909155506116939082612367565b90505b816116a0816123c2565b925050611585565b60035433906108fc906116bb908461231e565b6040518115909202916000818181858888f193505050501580156116e3573d6000803e3d6000fd5b5080600e546116f2919061237f565b600e55336000908152601160205260408120805483929061171490849061237f565b9091555050336000908152601160205260408120600101805483929061173b90849061237f565b909155505060405181815233907fe8e3157b474707a4ad53aa38ca233ac428bb08f705eb304f0859d2a884c880029060200160405180910390a250505050565b6010818154811061178b57600080fd5b600091825260209091200154905081565b7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca96117c78133611a20565b6001600160a01b03821661181d5760405162461bcd60e51b815260206004820152601960248201527f4e6f6e207a65726f2061646472657373207265717569726564000000000000006044820152606401610713565b600680546001600160a01b0319166001600160a01b0384169081179091556040519081527f9073dfac663173e64aa95665faedae52e2246f9bcdd3890fbfaf6733b46bba139060200160405180910390a15050565b600f818154811061188257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000828152602081905260409020600101546118b88133611a20565b61114c8383611ce1565b6040516370a0823160e01b81523060048201526000907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561194b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196f91906123f1565b10156119d15760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060448201526a1dda5d1a0819985d58d95d60aa1b6064820152608401610713565b611a1b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611d46565b905090565b611a2a8282611340565b6112b057611a42816001600160a01b03166014611ec9565b611a4d836020611ec9565b604051602001611a5e92919061243a565b60408051601f198184030181529082905262461bcd60e51b8252610713916004016124db565b60025460ff16611acd5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610713565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080600e5411611b6a5760405162461bcd60e51b815260206004820152601b60248201527f526166666c653a204e6f20736c6f7473206172652066696c6c656400000000006044820152606401610713565b60125460ff161515600114611b915760405162461bcd60e51b8152600401610713906122bb565b600d5460ff1615611bf05760405162461bcd60e51b8152602060048201526024808201527f526166666c653a2043616e6e6f7420636f6c6c6563742077696e6e657220747760448201526334b1b29760e11b6064820152608401610713565b600d805460ff19166001179055611a1b6118c2565b611c0f8282611340565b6112b0576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611c453390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60025460ff1615611cac5760405162461bcd60e51b815260040161071390612291565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611afa3390565b611ceb8282611340565b156112b0576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611db6929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611de3939291906124ee565b6020604051808303816000875af1158015611e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e26919061251e565b50600083815260016020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a09091019092528151918301919091209387905290829052611e8191612367565b600085815260016020526040902055611ec18482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b60606000611ed883600261231e565b611ee3906002612367565b67ffffffffffffffff811115611efb57611efb612540565b6040519080825280601f01601f191660200182016040528015611f25576020820181803683370190505b509050600360fc1b81600081518110611f4057611f40612396565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611f6f57611f6f612396565b60200101906001600160f81b031916908160001a9053506000611f9384600261231e565b611f9e906001612367565b90505b6001811115612016576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611fd257611fd2612396565b1a60f81b828281518110611fe857611fe8612396565b60200101906001600160f81b031916908160001a90535060049490941c9361200f81612556565b9050611fa1565b5083156120655760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610713565b9392505050565b60006020828403121561207e57600080fd5b81356001600160e01b03198116811461206557600080fd5b600080604083850312156120a957600080fd5b50508035926020909101359150565b80356001600160a01b03811681146120cf57600080fd5b919050565b6000806000806000608086880312156120ec57600080fd5b6120f5866120b8565b9450612103602087016120b8565b935060408601359250606086013567ffffffffffffffff8082111561212757600080fd5b818801915088601f83011261213b57600080fd5b81358181111561214a57600080fd5b89602082850101111561215c57600080fd5b9699959850939650602001949392505050565b60006020828403121561218157600080fd5b5035919050565b6000806040838503121561219b57600080fd5b823591506121ab602084016120b8565b90509250929050565b6000602082840312156121c657600080fd5b612065826120b8565b6020808252825182820181905260009190848201906040850190845b818110156122105783516001600160a01b0316835292840192918401916001016121eb565b50909695505050505050565b6000806020838503121561222f57600080fd5b823567ffffffffffffffff8082111561224757600080fd5b818501915085601f83011261225b57600080fd5b81358181111561226a57600080fd5b8660208260051b850101111561227f57600080fd5b60209290920196919550909350505050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602d908201527f526166666c653a20436f6e747261637420646f6573206e6f74206f776e20726160408201526c33333632b0b136329027232a1760991b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561233857612338612308565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826123625761236261233d565b500490565b6000821982111561237a5761237a612308565b500190565b60008282101561239157612391612308565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006000198214156123d6576123d6612308565b5060010190565b6000826123ec576123ec61233d565b500690565b60006020828403121561240357600080fd5b5051919050565b60005b8381101561242557818101518382015260200161240d565b83811115612434576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161247281601785016020880161240a565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516124a381602884016020880161240a565b01602801949350505050565b600081518084526124c781602086016020860161240a565b601f01601f19169290920160200192915050565b60208152600061206560208301846124af565b60018060a01b038416815282602082015260606040820152600061251560608301846124af565b95945050505050565b60006020828403121561253057600080fd5b8151801515811461206557600080fd5b634e487b7160e01b600052604160045260246000fd5b60008161256557612565612308565b50600019019056fea26469706673582212207a589db1fa7be09bf0d8e3f25e86dd23f00e80b22fb8dd71bc4a928c6bfa736f64736f6c634300080a0033",
  "bytecodeSha1": "e0be42df9db588d006551444522940fd0a7d3129",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "Raffle",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._checkRole": {
          "134": [
            3332,
            3354,
            false
          ]
        },
        "AccessControl._grantRole": {
          "135": [
            6646,
            6668,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "136": [
            6876,
            6898,
            false
          ]
        },
        "AccessControl.renounceRole": {
          "133": [
            5400,
            5423,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "12": {
        "Raffle.changeTreasuryAddress": {
          "128": [
            13033,
            13065,
            true
          ]
        },
        "Raffle.collectRandomWinner": {
          "130": [
            8482,
            8500,
            true
          ],
          "131": [
            8604,
            8620,
            true
          ],
          "132": [
            8762,
            8792,
            true
          ]
        },
        "Raffle.disburseWinner": {
          "116": [
            9380,
            9396,
            true
          ],
          "117": [
            9537,
            9566,
            true
          ],
          "118": [
            9899,
            9957,
            false
          ]
        },
        "Raffle.enterLockPeriod": {
          "119": [
            10698,
            10715,
            true
          ],
          "120": [
            10775,
            10802,
            true
          ]
        },
        "Raffle.exitLockPeriod": {
          "98": [
            11213,
            11230,
            true
          ],
          "99": [
            11289,
            11316,
            true
          ]
        },
        "Raffle.getRandomNumber": {
          "129": [
            12353,
            12389,
            true
          ]
        },
        "Raffle.onERC721Received": {
          "113": [
            11748,
            11767,
            true
          ],
          "114": [
            11842,
            11860,
            false
          ],
          "115": [
            11864,
            11881,
            true
          ]
        },
        "Raffle.purchaseSlot": {
          "100": [
            4071,
            4088,
            true
          ],
          "101": [
            4185,
            4198,
            true
          ],
          "102": [
            4317,
            4333,
            true
          ],
          "103": [
            4455,
            4489,
            true
          ],
          "104": [
            4599,
            4629,
            true
          ],
          "105": [
            4800,
            4834,
            true
          ],
          "106": [
            4838,
            4850,
            true
          ],
          "107": [
            5014,
            5071,
            false
          ],
          "108": [
            5075,
            5144,
            true
          ],
          "109": [
            5149,
            5161,
            true
          ],
          "110": [
            5310,
            5357,
            true
          ],
          "111": [
            5710,
            5725,
            false
          ],
          "112": [
            6277,
            6289,
            false
          ]
        },
        "Raffle.refundSlot": {
          "121": [
            6796,
            6813,
            true
          ],
          "122": [
            6817,
            6831,
            true
          ],
          "123": [
            6958,
            6974,
            true
          ],
          "124": [
            6978,
            6992,
            true
          ],
          "125": [
            7152,
            7223,
            true
          ],
          "126": [
            7428,
            7466,
            false
          ],
          "127": [
            7489,
            7533,
            false
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "7": {},
      "8": {},
      "9": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "137": [
            9749,
            9777,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "AccessControl._checkRole": {
          "79": [
            3370,
            3719
          ]
        },
        "AccessControl._grantRole": {
          "87": [
            6684,
            6720
          ],
          "88": [
            6734,
            6779
          ]
        },
        "AccessControl._revokeRole": {
          "91": [
            6914,
            6951
          ],
          "92": [
            6965,
            7010
          ]
        },
        "AccessControl.getRoleAdmin": {
          "0": [
            4002,
            4031
          ]
        },
        "AccessControl.grantRole": {
          "46": [
            4401,
            4426
          ]
        },
        "AccessControl.hasRole": {
          "57": [
            2928,
            2964
          ]
        },
        "AccessControl.renounceRole": {
          "52": [
            5392,
            5475
          ],
          "53": [
            5486,
            5512
          ]
        },
        "AccessControl.revokeRole": {
          "76": [
            4781,
            4807
          ]
        },
        "AccessControl.supportsInterface": {
          "2": [
            2646,
            2740
          ]
        }
      },
      "1": {},
      "10": {
        "VRFRequestIDBase.makeRequestId": {
          "97": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "94": [
            980,
            1058
          ]
        }
      },
      "12": {
        "Raffle.changeTreasuryAddress": {
          "73": [
            13025,
            13095
          ],
          "74": [
            13105,
            13134
          ],
          "75": [
            13144,
            13191
          ]
        },
        "Raffle.collectRandomWinner": {
          "82": [
            8474,
            8532
          ],
          "83": [
            8596,
            8670
          ],
          "84": [
            8754,
            8833
          ],
          "85": [
            8883,
            8911
          ],
          "86": [
            8956,
            8980
          ]
        },
        "Raffle.disburseWinner": {
          "35": [
            9372,
            9459
          ],
          "36": [
            9529,
            9634
          ],
          "37": [
            9695,
            9790
          ],
          "38": [
            9976,
            10029
          ],
          "39": [
            10047,
            10052
          ],
          "40": [
            10081,
            10098
          ],
          "41": [
            10161,
            10228
          ],
          "42": [
            10266,
            10282
          ],
          "43": [
            10341,
            10370
          ],
          "44": [
            10405,
            10421
          ],
          "45": [
            10462,
            10484
          ]
        },
        "Raffle.enterLockPeriod": {
          "47": [
            10690,
            10757
          ],
          "48": [
            10767,
            10840
          ],
          "49": [
            10859,
            10875
          ],
          "50": [
            10885,
            10922
          ],
          "51": [
            10932,
            10940
          ]
        },
        "Raffle.exitLockPeriod": {
          "5": [
            11205,
            11271
          ],
          "6": [
            11281,
            11353
          ],
          "7": [
            11365,
            11375
          ],
          "8": [
            11385,
            11402
          ],
          "9": [
            11412,
            11440
          ]
        },
        "Raffle.fulfillRandomness": {
          "60": [
            12657,
            12682
          ]
        },
        "Raffle.getRandomNumber": {
          "77": [
            12345,
            12437
          ],
          "78": [
            12447,
            12485
          ]
        },
        "Raffle.getSlotOwners": {
          "58": [
            13276,
            13293
          ]
        },
        "Raffle.onERC721Received": {
          "28": [
            11740,
            11824
          ],
          "29": [
            11834,
            11918
          ],
          "30": [
            11937,
            11952
          ],
          "31": [
            11963,
            11979
          ],
          "32": [
            11989,
            12001
          ],
          "33": [
            12011,
            12047
          ],
          "34": [
            12098,
            12113
          ]
        },
        "Raffle.purchaseSlot": {
          "10": [
            4063,
            4121
          ],
          "11": [
            4177,
            4235
          ],
          "12": [
            4309,
            4383
          ],
          "13": [
            4447,
            4530
          ],
          "14": [
            4591,
            4692
          ],
          "15": [
            4792,
            4907
          ],
          "16": [
            5005,
            5210
          ],
          "17": [
            5302,
            5408
          ],
          "18": [
            5546,
            5608
          ],
          "19": [
            5622,
            5640
          ],
          "20": [
            5654,
            5659
          ],
          "21": [
            5890,
            5917
          ],
          "22": [
            5815,
            5818
          ],
          "23": [
            5986,
            6029
          ],
          "24": [
            6083,
            6137
          ],
          "25": [
            6147,
            6204
          ],
          "26": [
            6304,
            6364
          ],
          "27": [
            6412,
            6452
          ]
        },
        "Raffle.refundSlot": {
          "61": [
            6788,
            6876
          ],
          "62": [
            6950,
            7042
          ],
          "63": [
            7144,
            7268
          ],
          "64": [
            7557,
            7600
          ],
          "65": [
            7622,
            7659
          ],
          "66": [
            7681,
            7698
          ],
          "67": [
            7744,
            7749
          ],
          "68": [
            7806,
            7860
          ],
          "69": [
            7904,
            7950
          ],
          "70": [
            8004,
            8061
          ],
          "71": [
            8071,
            8134
          ],
          "72": [
            8174,
            8218
          ]
        },
        "Raffle.stopTheRaffle": {
          "54": [
            9065,
            9078
          ],
          "55": [
            9089,
            9160
          ],
          "56": [
            9170,
            9186
          ]
        }
      },
      "2": {
        "Pausable._pause": {
          "89": [
            1865,
            1879
          ],
          "90": [
            1889,
            1914
          ]
        },
        "Pausable._unpause": {
          "80": [
            2111,
            2126
          ],
          "81": [
            2136,
            2163
          ]
        },
        "Pausable.paused": {
          "1": [
            1104,
            1118
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "Context._msgSender": {
          "4": [
            659,
            676
          ]
        }
      },
      "7": {
        "ERC165.supportsInterface": {
          "3": [
            864,
            911
          ]
        }
      },
      "8": {},
      "9": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "59": [
            9741,
            9813
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "93": [
            7888,
            7975
          ],
          "95": [
            8718,
            8757
          ],
          "96": [
            8763,
            8802
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IAccessControl",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Pausable",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFRequestIDBase"
  ],
  "deployedBytecode": "60806040526004361061020f5760003560e01c80635d1cf7ea116101185780639cc1f301116100a0578063ce16097e1161006f578063ce16097e146105e1578063d11a57ec14610601578063d547741f14610635578063d56d229d14610655578063dbdff2c11461067557600080fd5b80639cc1f30114610576578063a217fddf14610596578063a6f353f0146105ab578063c3994752146105cb57600080fd5b8063796fc402116100e7578063796fc4021461049d57806391d14854146104f45780639451b9811461051457806394985ddd146105365780639a23ec191461055657600080fd5b80635d1cf7ea146104235780635fcbd5b61461043957806361d027b31461044f5780637489ce481461048757600080fd5b80632efcd76f1161019b5780633912d4661161016a5780633912d466146103b05780633f683b6a146103c557806342619f66146103db57806347984f2c146103f15780635c975abb1461040b57600080fd5b80632efcd76f146103455780632f2ff15d1461035b57806331f94d191461037b57806336568abe1461039057600080fd5b806314d287a4116101e257806314d287a414610298578063150b7a02146102ad57806315cc7b2a146102e65780631a8cef9a14610300578063248a9ca31461031557600080fd5b806301ffc9a71461021457806304e0465614610249578063055ad42e1461026d5780630ca098b214610283575b600080fd5b34801561022057600080fd5b5061023461022f36600461206c565b61068a565b60405190151581526020015b60405180910390f35b34801561025557600080fd5b5061025f60035481565b604051908152602001610240565b34801561027957600080fd5b5061025f60085481565b34801561028f57600080fd5b5061025f6106c1565b6102ab6102a6366004612096565b6107e7565b005b3480156102b957600080fd5b506102cd6102c83660046120d4565b610d30565b6040516001600160e01b03199091168152602001610240565b3480156102f257600080fd5b506012546102349060ff1681565b34801561030c57600080fd5b506102ab610e5e565b34801561032157600080fd5b5061025f61033036600461216f565b60009081526020819052604090206001015490565b34801561035157600080fd5b5061025f60075481565b34801561036757600080fd5b506102ab610376366004612188565b611126565b34801561038757600080fd5b506102ab611151565b34801561039c57600080fd5b506102ab6103ab366004612188565b611236565b3480156103bc57600080fd5b506102ab6112b4565b3480156103d157600080fd5b5061025f600a5481565b3480156103e757600080fd5b5061025f600c5481565b3480156103fd57600080fd5b50600d546102349060ff1681565b34801561041757600080fd5b5060025460ff16610234565b34801561042f57600080fd5b5061025f600e5481565b34801561044557600080fd5b5061025f60095481565b34801561045b57600080fd5b5060065461046f906001600160a01b031681565b6040516001600160a01b039091168152602001610240565b34801561049357600080fd5b5061025f60045481565b3480156104a957600080fd5b506104d96104b83660046121b4565b60116020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610240565b34801561050057600080fd5b5061023461050f366004612188565b611340565b34801561052057600080fd5b50610529611369565b60405161024091906121cf565b34801561054257600080fd5b506102ab610551366004612096565b6113cb565b34801561056257600080fd5b506102ab61057136600461221c565b611449565b34801561058257600080fd5b5061025f61059136600461216f565b61177b565b3480156105a257600080fd5b5061025f600081565b3480156105b757600080fd5b506102ab6105c63660046121b4565b61179c565b3480156105d757600080fd5b5061025f600b5481565b3480156105ed57600080fd5b5061046f6105fc36600461216f565b611872565b34801561060d57600080fd5b5061025f7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca981565b34801561064157600080fd5b506102ab610650366004612188565b61189c565b34801561066157600080fd5b5060055461046f906001600160a01b031681565b34801561068157600080fd5b5061025f6118c2565b60006001600160e01b03198216637965db0b60e01b14806106bb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000806106ce8133611a20565b60025460ff1661071c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064015b60405180910390fd5b60085460011461077a5760405162461bcd60e51b8152602060048201526024808201527f43616e206f6e6c792063616c6c2074686973206166746572206c6f636b2070656044820152631c9a5bd960e21b6064820152608401610713565b42600954116107cb5760405162461bcd60e51b815260206004820181905260248201527f436f6e7472616374206973207374696c6c20696e206c6f636b20706572696f646044820152606401610713565b6107d3611a84565b6000196008556107e1611b17565b91505090565b60025460ff161561080a5760405162461bcd60e51b815260040161071390612291565b6008541561085a5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742062757920647572696e67207468697320726f756e64000000006044820152606401610713565b600082116108aa5760405162461bcd60e51b815260206004820181905260248201527f526166666c653a2043616e6e6f74207075726368617365203020736c6f74732e6044820152606401610713565b60125460ff1615156001146108d15760405162461bcd60e51b8152600401610713906122bb565b600454600e54106109305760405162461bcd60e51b8152602060048201526024808201527f526166666c653a20416c6c20726166666c6520736c6f7473206172652066696c6044820152633632b21760e11b6064820152608401610713565b600d5460ff16156109a95760405162461bcd60e51b815260206004820152603a60248201527f526166666c653a2043616e6e6f7420707572636861736520736c6f742061667460448201527f65722077696e6e657220686173206265656e2063686f73656e2e0000000000006064820152608401610713565b6003546109b6908361231e565b341015806109c45750806001145b610a2d5760405162461bcd60e51b815260206004820152603460248201527f526166666c653a20496e73756666696369656e74204554482070726f7669646560448201527332103a3790383ab931b430b9b29039b637ba399760611b6064820152608401610713565b60075433600090815260116020526040902060020154108015610a79575033600090815260116020526040902060010154610a6a90600a90612353565b610a75906001612367565b8211155b80610a82575080155b610ae35760405162461bcd60e51b815260206004820152602c60248201527f526166666c653a2043616e6e6f7420696e6372656d656e7420736c6f7473206960448201526b1b881d1a1a5cc81c9bdd5b9960a21b6064820152608401610713565b600e54600454610af3919061237f565b821115610b595760405162461bcd60e51b815260206004820152602e60248201527f526166666c653a2052657175657374696e6720746f207075726368617365207460448201526d37b79036b0b73c9039b637ba399760911b6064820152608401610713565b60005b60105415610c0c57601080543391600f91610b799060019061237f565b81548110610b8957610b89612396565b906000526020600020015481548110610ba457610ba4612396565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506010805480610be357610be36123ac565b600190038181906000526020600020016000905590558080610c04906123c2565b915050610b5c565b82811015610c7e5760005b610c21828561237f565b811015610c7c57600f80546001810182556000919091527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180546001600160a01b0319163317905580610c74816123c2565b915050610c17565b505b82600e54610c8c9190612367565b600e553360009081526011602052604081208054859290610cae908490612367565b90915550506007543360009081526011602052604090206002015581610cf6573360009081526011602052604081206001018054859290610cf0908490612367565b90915550505b60405183815233907f86e01953521e8ca90cf9568ce180d715096931ef1c18c1343b19c53e5c6e63619060200160405180910390a2505050565b6005546000906001600160a01b03868116911614610dad5760405162461bcd60e51b815260206004820152603460248201527f526166666c653a20526166666c65206e6f7420696e697469617465642077697460448201527334103a3434b99027232a1031b7b73a3930b1ba1760611b6064820152608401610713565b600854600019148015610dc3575060125460ff16155b610e0f5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f742072656365697665204e465420617420746869732070686173656044820152606401610713565b600b849055600060088190556007805491610e29836123c2565b90915550610e3c90504262093a80612367565b600955506012805460ff19166001179055630a85bd0160e11b95945050505050565b60125460ff161515600114610edb5760405162461bcd60e51b815260206004820152603a60248201527f526166666c653a2043616e6e6f74206469737572627365204e465420746f207760448201527f696e6e657220776974686f757420686f6c64696e67204e46542e0000000000006064820152608401610713565b600d5460ff161515600114610f585760405162461bcd60e51b815260206004820152603f60248201527f526166666c653a2043616e6e6f7420646973627572736520746f2077696e6e6560448201527f7220776974686f757420686176696e6720636f6c6c6563746564206f6e652e006064820152608401610713565b600c54610fd75760405162461bcd60e51b815260206004820152604160248201527f526166666c653a20506c65617365207761697420666f7220436861696e6c696e60448201527f6b2056524620746f20757064617465207468652077696e6e65722066697273746064820152601760f91b608482015260a401610713565b600c5460005b600f805460009190610fef90856123dd565b81548110610fff57610fff612396565b6000918252602090912001546001600160a01b03161461105357600f805461102790846123dd565b8154811061103757611037612396565b6000918252602090912001546001600160a01b03169050611065565b61105e600183612367565b9150610fdd565b600554600b54604051632142170760e11b81523060048201526001600160a01b03848116602483015260448201929092529116906342842e0e90606401600060405180830381600087803b1580156110bc57600080fd5b505af11580156110d0573d6000803e3d6000fd5b50506012805460ff19908116909155600d8054909116905550506000600c8190556040516001600160a01b038316917fa2564fbe9f8e6077adcf46dfe7c571eae3b5a67375d138e992f66e4db4f9752691a25050565b6000828152602081905260409020600101546111428133611a20565b61114c8383611c05565b505050565b600061115d8133611a20565b600854156111bb5760405162461bcd60e51b815260206004820152602560248201527f43616e206f6e6c792063616c6c207468697320616674657220726166666c65206044820152641c9bdd5b9960da1b6064820152608401610713565b42600954116112165760405162461bcd60e51b815260206004820152602160248201527f436f6e7472616374206973207374696c6c20696e20726166666c6520726f756e6044820152601960fa1b6064820152608401610713565b60016008556112284262278d00612367565b600955611233611c89565b50565b6001600160a01b03811633146112a65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610713565b6112b08282611ce1565b5050565b60006112c08133611a20565b6001600a55600554600b54604051632142170760e11b815230600482015233602482015260448101919091526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561131b57600080fd5b505af115801561132f573d6000803e3d6000fd5b50506012805460ff19169055505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600f8054806020026020016040519081016040528092919081815260200182805480156113c157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116113a3575b5050505050905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114435760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610713565b600c5550565b60025460ff161561146c5760405162461bcd60e51b815260040161071390612291565b600854158061147d5750600a546001145b6114da5760405162461bcd60e51b815260206004820152602860248201527f526166666c653a2043616e6e6f7420726566756e6420647572696e672074686960448201526739903937bab7321760c11b6064820152608401610713565b60125460ff161515600114806114f25750600a546001145b61150e5760405162461bcd60e51b8152600401610713906122bb565b336000908152601160205260409020600101548111156115815760405162461bcd60e51b815260206004820152602860248201527f526166666c653a204164647265737320646964206e6f74206275792074686573604482015267329039b637ba399760c11b6064820152608401610713565b6000805b828210156116a857600f548484848181106115a2576115a2612396565b9050602002013510156116965733600f8585858181106115c4576115c4612396565b90506020020135815481106115db576115db612396565b6000918252602090912001546001600160a01b03161415611696576000600f85858581811061160c5761160c612396565b905060200201358154811061162357611623612396565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550601084848481811061166557611665612396565b8354600180820186556000958652602095869020929095029390930135920191909155506116939082612367565b90505b816116a0816123c2565b925050611585565b60035433906108fc906116bb908461231e565b6040518115909202916000818181858888f193505050501580156116e3573d6000803e3d6000fd5b5080600e546116f2919061237f565b600e55336000908152601160205260408120805483929061171490849061237f565b9091555050336000908152601160205260408120600101805483929061173b90849061237f565b909155505060405181815233907fe8e3157b474707a4ad53aa38ca233ac428bb08f705eb304f0859d2a884c880029060200160405180910390a250505050565b6010818154811061178b57600080fd5b600091825260209091200154905081565b7fe1dcbdb91df27212a29bc27177c840cf2f819ecf2187432e1fac86c2dd5dfca96117c78133611a20565b6001600160a01b03821661181d5760405162461bcd60e51b815260206004820152601960248201527f4e6f6e207a65726f2061646472657373207265717569726564000000000000006044820152606401610713565b600680546001600160a01b0319166001600160a01b0384169081179091556040519081527f9073dfac663173e64aa95665faedae52e2246f9bcdd3890fbfaf6733b46bba139060200160405180910390a15050565b600f818154811061188257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000828152602081905260409020600101546118b88133611a20565b61114c8383611ce1565b6040516370a0823160e01b81523060048201526000907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561194b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196f91906123f1565b10156119d15760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060448201526a1dda5d1a0819985d58d95d60aa1b6064820152608401610713565b611a1b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611d46565b905090565b611a2a8282611340565b6112b057611a42816001600160a01b03166014611ec9565b611a4d836020611ec9565b604051602001611a5e92919061243a565b60408051601f198184030181529082905262461bcd60e51b8252610713916004016124db565b60025460ff16611acd5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610713565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080600e5411611b6a5760405162461bcd60e51b815260206004820152601b60248201527f526166666c653a204e6f20736c6f7473206172652066696c6c656400000000006044820152606401610713565b60125460ff161515600114611b915760405162461bcd60e51b8152600401610713906122bb565b600d5460ff1615611bf05760405162461bcd60e51b8152602060048201526024808201527f526166666c653a2043616e6e6f7420636f6c6c6563742077696e6e657220747760448201526334b1b29760e11b6064820152608401610713565b600d805460ff19166001179055611a1b6118c2565b611c0f8282611340565b6112b0576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611c453390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60025460ff1615611cac5760405162461bcd60e51b815260040161071390612291565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611afa3390565b611ceb8282611340565b156112b0576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611db6929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611de3939291906124ee565b6020604051808303816000875af1158015611e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e26919061251e565b50600083815260016020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a09091019092528151918301919091209387905290829052611e8191612367565b600085815260016020526040902055611ec18482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b60606000611ed883600261231e565b611ee3906002612367565b67ffffffffffffffff811115611efb57611efb612540565b6040519080825280601f01601f191660200182016040528015611f25576020820181803683370190505b509050600360fc1b81600081518110611f4057611f40612396565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611f6f57611f6f612396565b60200101906001600160f81b031916908160001a9053506000611f9384600261231e565b611f9e906001612367565b90505b6001811115612016576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611fd257611fd2612396565b1a60f81b828281518110611fe857611fe8612396565b60200101906001600160f81b031916908160001a90535060049490941c9361200f81612556565b9050611fa1565b5083156120655760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610713565b9392505050565b60006020828403121561207e57600080fd5b81356001600160e01b03198116811461206557600080fd5b600080604083850312156120a957600080fd5b50508035926020909101359150565b80356001600160a01b03811681146120cf57600080fd5b919050565b6000806000806000608086880312156120ec57600080fd5b6120f5866120b8565b9450612103602087016120b8565b935060408601359250606086013567ffffffffffffffff8082111561212757600080fd5b818801915088601f83011261213b57600080fd5b81358181111561214a57600080fd5b89602082850101111561215c57600080fd5b9699959850939650602001949392505050565b60006020828403121561218157600080fd5b5035919050565b6000806040838503121561219b57600080fd5b823591506121ab602084016120b8565b90509250929050565b6000602082840312156121c657600080fd5b612065826120b8565b6020808252825182820181905260009190848201906040850190845b818110156122105783516001600160a01b0316835292840192918401916001016121eb565b50909695505050505050565b6000806020838503121561222f57600080fd5b823567ffffffffffffffff8082111561224757600080fd5b818501915085601f83011261225b57600080fd5b81358181111561226a57600080fd5b8660208260051b850101111561227f57600080fd5b60209290920196919550909350505050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602d908201527f526166666c653a20436f6e747261637420646f6573206e6f74206f776e20726160408201526c33333632b0b136329027232a1760991b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561233857612338612308565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826123625761236261233d565b500490565b6000821982111561237a5761237a612308565b500190565b60008282101561239157612391612308565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006000198214156123d6576123d6612308565b5060010190565b6000826123ec576123ec61233d565b500690565b60006020828403121561240357600080fd5b5051919050565b60005b8381101561242557818101518382015260200161240d565b83811115612434576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161247281601785016020880161240a565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516124a381602884016020880161240a565b01602801949350505050565b600081518084526124c781602086016020860161240a565b601f01601f19169290920160200192915050565b60208152600061206560208301846124af565b60018060a01b038416815282602082015260606040820152600061251560608301846124af565b95945050505050565b60006020828403121561253057600080fd5b8151801515811461206557600080fd5b634e487b7160e01b600052604160045260246000fd5b60008161256557612565612308565b50600019019056fea26469706673582212207a589db1fa7be09bf0d8e3f25e86dd23f00e80b22fb8dd71bc4a928c6bfa736f64736f6c634300080a0033",
  "deployedSourceMap": "541:12761:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2545:202:0;;;;;;;;;;-1:-1:-1;2545:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;2545:202:0;;;;;;;;837:24:12;;;;;;;;;;;;;;;;;;;643:25:13;;;631:2;616:18;837:24:12;497:177:13;1286:31:12;;;;;;;;;;;;;;;;11091:356;;;;;;;;;;;;;:::i;3832:2627::-;;;;;;:::i;:::-;;:::i;:::-;;11507:715;;;;;;;;;;-1:-1:-1;11507:715:12;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;2447:33:13;;;2429:52;;2417:2;2402:18;11507:715:12;2285:202:13;2330:28:12;;;;;;;;;;-1:-1:-1;2330:28:12;;;;;;;;9276:1215;;;;;;;;;;;;;:::i;3917:121:0:-;;;;;;;;;;-1:-1:-1;3917:121:0;;;;;:::i;:::-;3983:7;4009:12;;;;;;;;;;:22;;;;3917:121;1219:29:12;;;;;;;;;;;;;;;;4288:145:0;;;;;;;;;;-1:-1:-1;4288:145:0;;;;;:::i;:::-;;:::i;10615:332:12:-;;;;;;;;;;;;;:::i;5305:214:0:-;;;;;;;;;;-1:-1:-1;5305:214:0;;;;;:::i;:::-;;:::i;8993:200:12:-;;;;;;;;;;;;;:::i;1431:28::-;;;;;;;;;;;;;;;;1782:31;;;;;;;;;;;;;;;;1883:41;;;;;;;;;;-1:-1:-1;1883:41:12;;;;;;;;1041:84:2;;;;;;;;;;-1:-1:-1;1111:7:2;;;;1041:84;;1967:33:12;;;;;;;;;;;;;;;;1350:24;;;;;;;;;;;;;;;;1163:23;;;;;;;;;;-1:-1:-1;1163:23:12;;;;-1:-1:-1;;;;;1163:23:12;;;;;;-1:-1:-1;;;;;3100:32:13;;;3082:51;;3070:2;3055:18;1163:23:12;2936:203:13;913:32:12;;;;;;;;;;;;;;;;2219:56;;;;;;;;;;-1:-1:-1;2219:56:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3537:25:13;;;3593:2;3578:18;;3571:34;;;;3621:18;;;3614:34;3525:2;3510:18;2219:56:12;3335:319:13;2834:137:0;;;;;;;;;;-1:-1:-1;2834:137:0;;;;;:::i;:::-;;:::i;13204:96:12:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;9639:225:9:-;;;;;;;;;;-1:-1:-1;9639:225:9;;;;;:::i;:::-;;:::i;6645:1580:12:-;;;;;;;;;;-1:-1:-1;6645:1580:12;;;;;:::i;:::-;;:::i;2129:29::-;;;;;;;;;;-1:-1:-1;2129:29:12;;;;;:::i;:::-;;:::i;1952:49:0:-;;;;;;;;;;-1:-1:-1;1952:49:0;1997:4;1952:49;;12926:272:12;;;;;;;;;;-1:-1:-1;12926:272:12;;;;;:::i;:::-;;:::i;1480:20::-;;;;;;;;;;;;;;;;2034:27;;;;;;;;;;-1:-1:-1;2034:27:12;;;;;:::i;:::-;;:::i;1036:66::-;;;;;;;;;;;;1076:26;1036:66;;4667:147:0;;;;;;;;;;-1:-1:-1;4667:147:0;;;;;:::i;:::-;;:::i;982:26:12:-;;;;;;;;;;-1:-1:-1;982:26:12;;;;-1:-1:-1;;;;;982:26:12;;;12273:219;;;;;;;;;;;;;:::i;2545:202:0:-;2630:4;-1:-1:-1;;;;;;2653:47:0;;-1:-1:-1;;;2653:47:0;;:87;;-1:-1:-1;;;;;;;;;;871:40:7;;;2704:36:0;2646:94;2545:202;-1:-1:-1;;2545:202:0:o;11091:356:12:-;11177:17;;2430:30:0;11177:17:12;666:10:5;2430::0;:30::i;:::-;1111:7:2;;;;1612:41:::1;;;::::0;-1:-1:-1;;;1612:41:2;;5582:2:13;1612:41:2::1;::::0;::::1;5564:21:13::0;5621:2;5601:18;;;5594:30;-1:-1:-1;;;5640:18:13;;;5633:50;5700:18;;1612:41:2::1;;;;;;;;;11213:12:12::2;;11229:1;11213:17;11205:66;;;::::0;-1:-1:-1;;;11205:66:12;;5931:2:13;11205:66:12::2;::::0;::::2;5913:21:13::0;5970:2;5950:18;;;5943:30;6009:34;5989:18;;;5982:62;-1:-1:-1;;;6060:18:13;;;6053:34;6104:19;;11205:66:12::2;5729:400:13::0;11205:66:12::2;11301:15;11289:9;;:27;11281:72;;;::::0;-1:-1:-1;;;11281:72:12;;6336:2:13;11281:72:12::2;::::0;::::2;6318:21:13::0;;;6355:18;;;6348:30;6414:34;6394:18;;;6387:62;6466:18;;11281:72:12::2;6134:356:13::0;11281:72:12::2;11365:10;:8;:10::i;:::-;-1:-1:-1::0;;11385:12:12::2;:17:::0;11419:21:::2;:19;:21::i;:::-;11412:28;;11091:356:::0;;:::o;3832:2627::-;1111:7:2;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:2;;;;;;;:::i;:::-;4071:12:12::1;::::0;:17;4063:58:::1;;;::::0;-1:-1:-1;;;4063:58:12;;7042:2:13;4063:58:12::1;::::0;::::1;7024:21:13::0;7081:2;7061:18;;;7054:30;7120;7100:18;;;7093:58;7168:18;;4063:58:12::1;6840:352:13::0;4063:58:12::1;4197:1;4185:9;:13;4177:58;;;::::0;-1:-1:-1;;;4177:58:12;;7399:2:13;4177:58:12::1;::::0;::::1;7381:21:13::0;;;7418:18;;;7411:30;7477:34;7457:18;;;7450:62;7529:18;;4177:58:12::1;7197:356:13::0;4177:58:12::1;4317:8;::::0;::::1;;:16;;:8:::0;:16:::1;4309:74;;;;-1:-1:-1::0;;;4309:74:12::1;;;;;;;:::i;:::-;4472:17;;4455:14;;:34;4447:83;;;::::0;-1:-1:-1;;;4447:83:12;;8174:2:13;4447:83:12::1;::::0;::::1;8156:21:13::0;8213:2;8193:18;;;8186:30;8252:34;8232:18;;;8225:62;-1:-1:-1;;;8303:18:13;;;8296:34;8347:19;;4447:83:12::1;7972:400:13::0;4447:83:12::1;4599:21;::::0;::::1;;:30;4591:101;;;::::0;-1:-1:-1;;;4591:101:12;;8579:2:13;4591:101:12::1;::::0;::::1;8561:21:13::0;8618:2;8598:18;;;8591:30;8657:34;8637:18;;;8630:62;8728:28;8708:18;;;8701:56;8774:19;;4591:101:12::1;8377:422:13::0;4591:101:12::1;4825:9;::::0;4813:21:::1;::::0;:9;:21:::1;:::i;:::-;4800:9;:34;;:50;;;;4838:7;4849:1;4838:12;4800:50;4792:115;;;::::0;-1:-1:-1;;;4792:115:12;;9311:2:13;4792:115:12::1;::::0;::::1;9293:21:13::0;9350:2;9330:18;;;9323:30;9389:34;9369:18;;;9362:62;-1:-1:-1;;;9440:18:13;;;9433:50;9500:19;;4792:115:12::1;9109:416:13::0;4792:115:12::1;5061:10;::::0;5034::::1;5014:31;::::0;;;:19:::1;:31;::::0;;;;:44:::1;;::::0;:57:::1;:130:::0;::::1;;;-1:-1:-1::0;5109:10:12::1;5089:31;::::0;;;:19:::1;:31;::::0;;;;:47:::1;;::::0;:50:::1;::::0;5137:2:::1;::::0;5089:50:::1;:::i;:::-;:54;::::0;5142:1:::1;5089:54;:::i;:::-;5075:9;:69;;5014:130;5013:148;;;-1:-1:-1::0;5149:12:12;;5013:148:::1;5005:205;;;::::0;-1:-1:-1;;;5005:205:12;;10122:2:13;5005:205:12::1;::::0;::::1;10104:21:13::0;10161:2;10141:18;;;10134:30;10200:34;10180:18;;;10173:62;-1:-1:-1;;;10251:18:13;;;10244:42;10303:19;;5005:205:12::1;9920:408:13::0;5005:205:12::1;5343:14;;5323:17;;:34;;;;:::i;:::-;5310:9;:47;;5302:106;;;::::0;-1:-1:-1;;;5302:106:12;;10665:2:13;5302:106:12::1;::::0;::::1;10647:21:13::0;10704:2;10684:18;;;10677:30;10743:34;10723:18;;;10716:62;-1:-1:-1;;;10794:18:13;;;10787:44;10848:19;;5302:106:12::1;10463:410:13::0;5302:106:12::1;5419:11;5500:170;5507:12;:19:::0;:24;5500:170:::1;;5557:12;5570:19:::0;;5598:10:::1;::::0;5546::::1;::::0;5570:23:::1;::::0;5592:1:::1;::::0;5570:23:::1;:::i;:::-;5557:37;;;;;;;;:::i;:::-;;;;;;;;;5546:49;;;;;;;;:::i;:::-;;;;;;;;;:62;;;;;-1:-1:-1::0;;;;;5546:62:12::1;;;;;-1:-1:-1::0;;;;;5546:62:12::1;;;;;;5622:12;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5654:5;;;;;:::i;:::-;;;;5500:170;;;5716:9;5710:3;:15;5707:235;;;5779:9;5774:158;5798:15;5810:3:::0;5798:9;:15:::1;:::i;:::-;5794:1;:19;5774:158;;;5890:10;:27:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5890:27:12;;;;;::::1;::::0;;-1:-1:-1;;;;;;5890:27:12::1;5906:10;5890:27;::::0;;5815:3;::::1;::::0;::::1;:::i;:::-;;;;5774:158;;;;5707:235;6020:9;6003:14;;:26;;;;:::i;:::-;5986:14;:43:::0;6103:10:::1;6083:31;::::0;;;:19:::1;:31;::::0;;;;:54;;6128:9;;6083:31;:54:::1;::::0;6128:9;;6083:54:::1;:::i;:::-;::::0;;;-1:-1:-1;;6194:10:12::1;::::0;6167::::1;6147:31;::::0;;;:19:::1;:31;::::0;;;;:44:::1;;:57:::0;6277:12;6274:101:::1;;6324:10;6304:31;::::0;;;:19:::1;:31;::::0;;;;:47:::1;;:60:::0;;6355:9;;6304:31;:60:::1;::::0;6355:9;;6304:60:::1;:::i;:::-;::::0;;;-1:-1:-1;;6274:101:12::1;6417:35;::::0;643:25:13;;;6430:10:12::1;::::0;6417:35:::1;::::0;631:2:13;616:18;6417:35:12::1;;;;;;;3922:2537;3832:2627:::0;;:::o;11507:715::-;11756:11;;11677:6;;-1:-1:-1;;;;;11748:19:12;;;11756:11;;11748:19;11740:84;;;;-1:-1:-1;;;11740:84:12;;11484:2:13;11740:84:12;;;11466:21:13;11523:2;11503:18;;;11496:30;11562:34;11542:18;;;11535:62;-1:-1:-1;;;11613:18:13;;;11606:50;11673:19;;11740:84:12;11282:416:13;11740:84:12;11842:12;;-1:-1:-1;;11842:18:12;:39;;;;-1:-1:-1;11864:8:12;;;;:17;11842:39;11834:84;;;;-1:-1:-1;;;11834:84:12;;11905:2:13;11834:84:12;;;11887:21:13;;;11924:18;;;11917:30;11983:34;11963:18;;;11956:62;12035:18;;11834:84:12;11703:356:13;11834:84:12;11937:5;:15;;;11978:1;11963:12;:16;;;11989:10;:12;;;;;;:::i;:::-;;;;-1:-1:-1;12023:24:12;;-1:-1:-1;12023:15:12;12041:6;12023:24;:::i;:::-;12011:9;:36;-1:-1:-1;12098:8:12;:15;;-1:-1:-1;;12098:15:12;12109:4;12098:15;;;-1:-1:-1;;;11507:715:12;;;;;;;:::o;9276:1215::-;9380:8;;;;:16;;:8;:16;9372:87;;;;-1:-1:-1;;;9372:87:12;;12266:2:13;9372:87:12;;;12248:21:13;12305:2;12285:18;;;12278:30;12344:34;12324:18;;;12317:62;12415:28;12395:18;;;12388:56;12461:19;;9372:87:12;12064:422:13;9372:87:12;9537:21;;;;:29;;:21;:29;9529:105;;;;-1:-1:-1;;;9529:105:12;;12693:2:13;9529:105:12;;;12675:21:13;12732:2;12712:18;;;12705:30;12771:34;12751:18;;;12744:62;12842:33;12822:18;;;12815:61;12893:19;;9529:105:12;12491:427:13;9529:105:12;9703:12;;9695:95;;;;-1:-1:-1;;;9695:95:12;;13125:2:13;9695:95:12;;;13107:21:13;13164:2;13144:18;;;13137:30;13203:34;13183:18;;;13176:62;13274:34;13254:18;;;13247:62;-1:-1:-1;;;13325:19:13;;;13318:32;13367:19;;9695:95:12;12923:469:13;9695:95:12;9824:12;;9801:20;9871:246;9899:10;9925:17;;9955:1;;9899:10;9910:32;;:12;:32;:::i;:::-;9899:44;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;9899:44:12;:58;9896:171;;9985:10;10011:17;;9996:32;;:12;:32;:::i;:::-;9985:44;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;9985:44:12;;-1:-1:-1;10047:5:12;;9896:171;10081:17;10097:1;10081:17;;:::i;:::-;;;9871:246;;;10169:11;;10222:5;;10161:67;;-1:-1:-1;;;10161:67:12;;10207:4;10161:67;;;13754:34:13;-1:-1:-1;;;;;13824:15:13;;;13804:18;;;13797:43;13856:18;;;13849:34;;;;10169:11:12;;;10161:37;;13689:18:13;;10161:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10266:8:12;:16;;-1:-1:-1;;10266:16:12;;;;;;10341:21;:29;;;;;;;-1:-1:-1;;10277:5:12;10405:12;:16;;;10467:17;;-1:-1:-1;;;;;10467:17:12;;;;;;9311:1180;;9276:1215::o;4288:145:0:-;3983:7;4009:12;;;;;;;;;;:22;;;2430:30;2441:4;666:10:5;2430::0;:30::i;:::-;4401:25:::1;4412:4;4418:7;4401:10;:25::i;:::-;4288:145:::0;;;:::o;10615:332:12:-;1997:4:0;2430:30;1997:4;666:10:5;2430::0;:30::i;:::-;10698:12:12::1;::::0;:17;10690:67:::1;;;::::0;-1:-1:-1;;;10690:67:12;;14096:2:13;10690:67:12::1;::::0;::::1;14078:21:13::0;14135:2;14115:18;;;14108:30;14174:34;14154:18;;;14147:62;-1:-1:-1;;;14225:18:13;;;14218:35;14270:19;;10690:67:12::1;13894:401:13::0;10690:67:12::1;10787:15;10775:9;;:27;10767:73;;;::::0;-1:-1:-1;;;10767:73:12;;14502:2:13;10767:73:12::1;::::0;::::1;14484:21:13::0;14541:2;14521:18;;;14514:30;14580:34;14560:18;;;14553:62;-1:-1:-1;;;14631:18:13;;;14624:31;14672:19;;10767:73:12::1;14300:397:13::0;10767:73:12::1;10874:1;10859:12;:16:::0;10897:25:::1;:15;10915:7;10897:25;:::i;:::-;10885:9;:37:::0;10932:8:::1;:6;:8::i;:::-;10615:332:::0;:::o;5305:214:0:-;-1:-1:-1;;;;;5400:23:0;;666:10:5;5400:23:0;5392:83;;;;-1:-1:-1;;;5392:83:0;;14904:2:13;5392:83:0;;;14886:21:13;14943:2;14923:18;;;14916:30;14982:34;14962:18;;;14955:62;-1:-1:-1;;;15033:18:13;;;15026:45;15088:19;;5392:83:0;14702:411:13;5392:83:0;5486:26;5498:4;5504:7;5486:11;:26::i;:::-;5305:214;;:::o;8993:200:12:-;1997:4:0;2430:30;1997:4;666:10:5;2430::0;:30::i;:::-;9077:1:12::1;9065:9;:13:::0;9097:11:::1;::::0;9154:5:::1;::::0;9089:71:::1;::::0;-1:-1:-1;;;9089:71:12;;9135:4:::1;9089:71;::::0;::::1;13754:34:13::0;9142:10:12::1;13804:18:13::0;;;13797:43;13856:18;;;13849:34;;;;-1:-1:-1;;;;;9097:11:12;;::::1;::::0;9089:37:::1;::::0;13689:18:13;;9089:71:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9170:8:12::1;:16:::0;;-1:-1:-1;;9170:16:12::1;::::0;;-1:-1:-1;;;8993:200:12:o;2834:137:0:-;2912:4;2935:12;;;;;;;;;;;-1:-1:-1;;;;;2935:29:0;;;;;;;;;;;;;;;2834:137::o;13204:96:12:-;13248:17;13283:10;13276:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13276:17:12;;;;;;;;;;;;;;;;;;;;;;;13204:96;:::o;9639:225:9:-;9749:10;-1:-1:-1;;;;;9763:14:9;9749:28;;9741:72;;;;-1:-1:-1;;;9741:72:9;;15320:2:13;9741:72:9;;;15302:21:13;15359:2;15339:18;;;15332:30;15398:33;15378:18;;;15371:61;15449:18;;9741:72:9;15118:355:13;9741:72:9;12657:12:12;:25;-1:-1:-1;5305:214:0:o;6645:1580:12:-;1111:7:2;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:2;;;;;;;:::i;:::-;6796:12:12::1;::::0;:17;;:35:::1;;;6817:9;;6830:1;6817:14;6796:35;6788:88;;;::::0;-1:-1:-1;;;6788:88:12;;15680:2:13;6788:88:12::1;::::0;::::1;15662:21:13::0;15719:2;15699:18;;;15692:30;15758:34;15738:18;;;15731:62;-1:-1:-1;;;15809:18:13;;;15802:38;15857:19;;6788:88:12::1;15478:404:13::0;6788:88:12::1;6958:8;::::0;::::1;;:16;;:8:::0;:16:::1;::::0;:34:::1;;;6978:9;;6991:1;6978:14;6958:34;6950:92;;;;-1:-1:-1::0;;;6950:92:12::1;;;;;;;:::i;:::-;7172:10;7152:31;::::0;;;:19:::1;:31;::::0;;;;:47:::1;;::::0;:71;-1:-1:-1;7152:71:12::1;7144:124;;;::::0;-1:-1:-1;;;7144:124:12;;16089:2:13;7144:124:12::1;::::0;::::1;16071:21:13::0;16128:2;16108:18;;;16101:30;16167:34;16147:18;;;16140:62;-1:-1:-1;;;16218:18:13;;;16211:38;16266:19;;7144:124:12::1;15887:404:13::0;7144:124:12::1;7279:11;7304:20:::0;7376:384:::1;7383:26:::0;;::::1;7376:384;;;7449:10;:17:::0;7428:13;;7442:3;7428:18;;::::1;;;;;:::i;:::-;;;;;;;:38;7425:306;;;7523:10;7489;7500:13:::0;;7514:3;7500:18;;::::1;;;;;:::i;:::-;;;;;;;7489:30;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;7489:30:12::1;:44;7485:232;;;7598:1;7557:10;7568:13;;7582:3;7568:18;;;;;;;:::i;:::-;;;;;;;7557:30;;;;;;;;:::i;:::-;;;;;;;;;:43;;;;;-1:-1:-1::0;;;;;7557:43:12::1;;;;;-1:-1:-1::0;;;;;7557:43:12::1;;;;;;7622:12;7640:13;;7654:3;7640:18;;;;;;;:::i;:::-;7622:37:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;7622:37:12;;;7640:18:::1;7622:37:::0;;;;7640:18;;;::::1;::::0;;;::::1;;7622:37:::0;::::1;::::0;;;;-1:-1:-1;7681:17:12::1;::::0;;::::1;:::i;:::-;;;7485:232;7744:5:::0;::::1;::::0;::::1;:::i;:::-;;;;7376:384;;;7850:9;::::0;7814:10:::1;::::0;7806:54:::1;::::0;7835:24:::1;::::0;:12;:24:::1;:::i;:::-;7806:54;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;7938:12;7921:14;;:29;;;;:::i;:::-;7904:14;:46:::0;8024:10:::1;8004:31;::::0;;;:19:::1;:31;::::0;;;;:57;;8049:12;;8004:31;:57:::1;::::0;8049:12;;8004:57:::1;:::i;:::-;::::0;;;-1:-1:-1;;8091:10:12::1;8071:31;::::0;;;:19:::1;:31;::::0;;;;:47:::1;;:63:::0;;8122:12;;8071:31;:63:::1;::::0;8122:12;;8071:63:::1;:::i;:::-;::::0;;;-1:-1:-1;;8179:39:12::1;::::0;643:25:13;;;8193:10:12::1;::::0;8179:39:::1;::::0;631:2:13;616:18;8179:39:12::1;;;;;;;6720:1505;;6645:1580:::0;;:::o;2129:29::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2129:29:12;:::o;12926:272::-;1076:26;2430:30:0;1076:26:12;666:10:5;2430::0;:30::i;:::-;-1:-1:-1;;;;;13033:32:12;::::1;13025:70;;;::::0;-1:-1:-1;;;13025:70:12;;16498:2:13;13025:70:12::1;::::0;::::1;16480:21:13::0;16537:2;16517:18;;;16510:30;16576:27;16556:18;;;16549:55;16621:18;;13025:70:12::1;16296:349:13::0;13025:70:12::1;13105:8;:29:::0;;-1:-1:-1;;;;;;13105:29:12::1;-1:-1:-1::0;;;;;13105:29:12;::::1;::::0;;::::1;::::0;;;13149:42:::1;::::0;3082:51:13;;;13149:42:12::1;::::0;3070:2:13;3055:18;13149:42:12::1;;;;;;;12926:272:::0;;:::o;2034:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2034:27:12;;-1:-1:-1;2034:27:12;:::o;4667:147:0:-;3983:7;4009:12;;;;;;;;;;:22;;;2430:30;2441:4;666:10:5;2430::0;:30::i;:::-;4781:26:::1;4793:4;4799:7;4781:11;:26::i;12273:219:12:-:0;12353:29;;-1:-1:-1;;;12353:29:12;;12376:4;12353:29;;;3082:51:13;12316:17:12;;12386:3;;-1:-1:-1;;;;;12353:4:12;:14;;;;3055:18:13;;12353:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;12345:92;;;;-1:-1:-1;;;12345:92:12;;17041:2:13;12345:92:12;;;17023:21:13;17080:2;17060:18;;;17053:30;17119:34;17099:18;;;17092:62;-1:-1:-1;;;17170:18:13;;;17163:41;17221:19;;12345:92:12;16839:407:13;12345:92:12;12454:31;12472:7;12481:3;12454:17;:31::i;:::-;12447:38;;12273:219;:::o;3252:484:0:-;3332:22;3340:4;3346:7;3332;:22::i;:::-;3327:403;;3515:41;3543:7;-1:-1:-1;;;;;3515:41:0;3553:2;3515:19;:41::i;:::-;3627:38;3655:4;3662:2;3627:19;:38::i;:::-;3422:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3422:265:0;;;;;;;;;;-1:-1:-1;;;3370:349:0;;;;;;;:::i;2053:117:2:-;1111:7;;;;1612:41;;;;-1:-1:-1;;;1612:41:2;;5582:2:13;1612:41:2;;;5564:21:13;5621:2;5601:18;;;5594:30;-1:-1:-1;;;5640:18:13;;;5633:50;5700:18;;1612:41:2;5380:344:13;1612:41:2;2111:7:::1;:15:::0;;-1:-1:-1;;2111:15:2::1;::::0;;2141:22:::1;666:10:5::0;2150:12:2::1;2141:22;::::0;-1:-1:-1;;;;;3100:32:13;;;3082:51;;3070:2;3055:18;2141:22:2::1;;;;;;;2053:117::o:0;8341:646:12:-;8390:17;8499:1;8482:14;;:18;8474:58;;;;-1:-1:-1;;;8474:58:12;;18995:2:13;8474:58:12;;;18977:21:13;19034:2;19014:18;;;19007:30;19073:29;19053:18;;;19046:57;19120:18;;8474:58:12;18793:351:13;8474:58:12;8604:8;;;;:16;;:8;:16;8596:74;;;;-1:-1:-1;;;8596:74:12;;;;;;;:::i;:::-;8762:21;;;;:30;8754:79;;;;-1:-1:-1;;;8754:79:12;;19351:2:13;8754:79:12;;;19333:21:13;19390:2;19370:18;;;19363:30;19429:34;19409:18;;;19402:62;-1:-1:-1;;;19480:18:13;;;19473:34;19524:19;;8754:79:12;19149:400:13;8754:79:12;8883:21;:28;;-1:-1:-1;;8883:28:12;8907:4;8883:28;;;8963:17;:15;:17::i;6572:224:0:-;6646:22;6654:4;6660:7;6646;:22::i;:::-;6641:149;;6684:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6684:29:0;;;;;;;;;:36;;-1:-1:-1;;6684:36:0;6716:4;6684:36;;;6766:12;666:10:5;;587:96;6766:12:0;-1:-1:-1;;;;;6739:40:0;6757:7;-1:-1:-1;;;;;6739:40:0;6751:4;6739:40;;;;;;;;;;6572:224;;:::o;1806:115:2:-;1111:7;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:2;;;;;;;:::i;:::-;1865:7:::1;:14:::0;;-1:-1:-1;;1865:14:2::1;1875:4;1865:14;::::0;;1894:20:::1;1901:12;666:10:5::0;;587:96;6802:225:0;6876:22;6884:4;6890:7;6876;:22::i;:::-;6872:149;;;6946:5;6914:12;;;;;;;;;;;-1:-1:-1;;;;;6914:29:0;;;;;;;;;;:37;;-1:-1:-1;;6914:37:0;;;6970:40;666:10:5;;6914:12:0;;6970:40;;6946:5;6970:40;6802:225;;:::o;7752:1055:9:-;7856:17;7888:4;-1:-1:-1;;;;;7888:20:9;;7909:14;7925:4;7942:8;6609:1;7931:43;;;;;;;;19728:25:13;;;19784:2;19769:18;;19762:34;19716:2;19701:18;;19554:248;7931:43:9;;;;;;;;;;;;;7888:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8206:15:9;8290:16;;;:6;:16;;;;;;;;;1005:51:10;;;;;21345:25:13;;;21386:18;;;21379:34;;;8283:4:9;21429:18:13;;;21422:60;21498:18;;;;21491:34;;;1005:51:10;;;;;;;;;;21317:19:13;;;;1005:51:10;;;995:62;;;;;;;;;8737:16:9;;;;;;;;:20;;;:::i;:::-;8718:16;;;;:6;:16;;;;;:39;8770:32;8725:8;8794:7;1600:41:10;;;;;;;21693:19:13;;;;21728:12;;;21721:28;;;;1600:41:10;;;;;;;;;21765:12:13;;;;1600:41:10;;1590:52;;;;;;1443:204;8770:32:9;8763:39;7752:1055;-1:-1:-1;;;;7752:1055:9:o;1535:441:6:-;1610:13;1635:19;1667:10;1671:6;1667:1;:10;:::i;:::-;:14;;1680:1;1667:14;:::i;:::-;1657:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:25:6;;1635:47;;-1:-1:-1;;;1692:6:6;1699:1;1692:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1692:15:6;;;;;;;;;-1:-1:-1;;;1717:6:6;1724:1;1717:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1717:15:6;;;;;;;;-1:-1:-1;1747:9:6;1759:10;1763:6;1759:1;:10;:::i;:::-;:14;;1772:1;1759:14;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;-1:-1:-1;;;1826:5:6;1834:3;1826:11;1813:25;;;;;;;:::i;:::-;;;;1801:6;1808:1;1801:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1801:37:6;;;;;;;;-1:-1:-1;1862:1:6;1852:11;;;;;1782:3;;;:::i;:::-;;;1742:132;;;-1:-1:-1;1891:10:6;;1883:55;;;;-1:-1:-1;;;1883:55:6;;20955:2:13;1883:55:6;;;20937:21:13;;;20974:18;;;20967:30;21033:34;21013:18;;;21006:62;21085:18;;1883:55:6;20753:356:13;1883:55:6;1962:6;1535:441;-1:-1:-1;;;1535:441:6:o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;1041:248;1109:6;1117;1170:2;1158:9;1149:7;1145:23;1141:32;1138:52;;;1186:1;1183;1176:12;1138:52;-1:-1:-1;;1209:23:13;;;1279:2;1264:18;;;1251:32;;-1:-1:-1;1041:248:13:o;1294:173::-;1362:20;;-1:-1:-1;;;;;1411:31:13;;1401:42;;1391:70;;1457:1;1454;1447:12;1391:70;1294:173;;;:::o;1472:808::-;1569:6;1577;1585;1593;1601;1654:3;1642:9;1633:7;1629:23;1625:33;1622:53;;;1671:1;1668;1661:12;1622:53;1694:29;1713:9;1694:29;:::i;:::-;1684:39;;1742:38;1776:2;1765:9;1761:18;1742:38;:::i;:::-;1732:48;;1827:2;1816:9;1812:18;1799:32;1789:42;;1882:2;1871:9;1867:18;1854:32;1905:18;1946:2;1938:6;1935:14;1932:34;;;1962:1;1959;1952:12;1932:34;2000:6;1989:9;1985:22;1975:32;;2045:7;2038:4;2034:2;2030:13;2026:27;2016:55;;2067:1;2064;2057:12;2016:55;2107:2;2094:16;2133:2;2125:6;2122:14;2119:34;;;2149:1;2146;2139:12;2119:34;2194:7;2189:2;2180:6;2176:2;2172:15;2168:24;2165:37;2162:57;;;2215:1;2212;2205:12;2162:57;1472:808;;;;-1:-1:-1;1472:808:13;;-1:-1:-1;2246:2:13;2238:11;;2268:6;1472:808;-1:-1:-1;;;1472:808:13:o;2492:180::-;2551:6;2604:2;2592:9;2583:7;2579:23;2575:32;2572:52;;;2620:1;2617;2610:12;2572:52;-1:-1:-1;2643:23:13;;2492:180;-1:-1:-1;2492:180:13:o;2677:254::-;2745:6;2753;2806:2;2794:9;2785:7;2781:23;2777:32;2774:52;;;2822:1;2819;2812:12;2774:52;2858:9;2845:23;2835:33;;2887:38;2921:2;2910:9;2906:18;2887:38;:::i;:::-;2877:48;;2677:254;;;;;:::o;3144:186::-;3203:6;3256:2;3244:9;3235:7;3231:23;3227:32;3224:52;;;3272:1;3269;3262:12;3224:52;3295:29;3314:9;3295:29;:::i;3659:658::-;3830:2;3882:21;;;3952:13;;3855:18;;;3974:22;;;3801:4;;3830:2;4053:15;;;;4027:2;4012:18;;;3801:4;4096:195;4110:6;4107:1;4104:13;4096:195;;;4175:13;;-1:-1:-1;;;;;4171:39:13;4159:52;;4266:15;;;;4231:12;;;;4207:1;4125:9;4096:195;;;-1:-1:-1;4308:3:13;;3659:658;-1:-1:-1;;;;;;3659:658:13:o;4575:615::-;4661:6;4669;4722:2;4710:9;4701:7;4697:23;4693:32;4690:52;;;4738:1;4735;4728:12;4690:52;4778:9;4765:23;4807:18;4848:2;4840:6;4837:14;4834:34;;;4864:1;4861;4854:12;4834:34;4902:6;4891:9;4887:22;4877:32;;4947:7;4940:4;4936:2;4932:13;4928:27;4918:55;;4969:1;4966;4959:12;4918:55;5009:2;4996:16;5035:2;5027:6;5024:14;5021:34;;;5051:1;5048;5041:12;5021:34;5104:7;5099:2;5089:6;5086:1;5082:14;5078:2;5074:23;5070:32;5067:45;5064:65;;;5125:1;5122;5115:12;5064:65;5156:2;5148:11;;;;;5178:6;;-1:-1:-1;4575:615:13;;-1:-1:-1;;;;4575:615:13:o;6495:340::-;6697:2;6679:21;;;6736:2;6716:18;;;6709:30;-1:-1:-1;;;6770:2:13;6755:18;;6748:46;6826:2;6811:18;;6495:340::o;7558:409::-;7760:2;7742:21;;;7799:2;7779:18;;;7772:30;7838:34;7833:2;7818:18;;7811:62;-1:-1:-1;;;7904:2:13;7889:18;;7882:43;7957:3;7942:19;;7558:409::o;8804:127::-;8865:10;8860:3;8856:20;8853:1;8846:31;8896:4;8893:1;8886:15;8920:4;8917:1;8910:15;8936:168;8976:7;9042:1;9038;9034:6;9030:14;9027:1;9024:21;9019:1;9012:9;9005:17;9001:45;8998:71;;;9049:18;;:::i;:::-;-1:-1:-1;9089:9:13;;8936:168::o;9530:127::-;9591:10;9586:3;9582:20;9579:1;9572:31;9622:4;9619:1;9612:15;9646:4;9643:1;9636:15;9662:120;9702:1;9728;9718:35;;9733:18;;:::i;:::-;-1:-1:-1;9767:9:13;;9662:120::o;9787:128::-;9827:3;9858:1;9854:6;9851:1;9848:13;9845:39;;;9864:18;;:::i;:::-;-1:-1:-1;9900:9:13;;9787:128::o;10333:125::-;10373:4;10401:1;10398;10395:8;10392:34;;;10406:18;;:::i;:::-;-1:-1:-1;10443:9:13;;10333:125::o;10878:127::-;10939:10;10934:3;10930:20;10927:1;10920:31;10970:4;10967:1;10960:15;10994:4;10991:1;10984:15;11010:127;11071:10;11066:3;11062:20;11059:1;11052:31;11102:4;11099:1;11092:15;11126:4;11123:1;11116:15;11142:135;11181:3;-1:-1:-1;;11202:17:13;;11199:43;;;11222:18;;:::i;:::-;-1:-1:-1;11269:1:13;11258:13;;11142:135::o;13397:112::-;13429:1;13455;13445:35;;13460:18;;:::i;:::-;-1:-1:-1;13494:9:13;;13397:112::o;16650:184::-;16720:6;16773:2;16761:9;16752:7;16748:23;16744:32;16741:52;;;16789:1;16786;16779:12;16741:52;-1:-1:-1;16812:16:13;;16650:184;-1:-1:-1;16650:184:13:o;17251:258::-;17323:1;17333:113;17347:6;17344:1;17341:13;17333:113;;;17423:11;;;17417:18;17404:11;;;17397:39;17369:2;17362:10;17333:113;;;17464:6;17461:1;17458:13;17455:48;;;17499:1;17490:6;17485:3;17481:16;17474:27;17455:48;;17251:258;;;:::o;17514:786::-;17925:25;17920:3;17913:38;17895:3;17980:6;17974:13;17996:62;18051:6;18046:2;18041:3;18037:12;18030:4;18022:6;18018:17;17996:62;:::i;:::-;-1:-1:-1;;;18117:2:13;18077:16;;;18109:11;;;18102:40;18167:13;;18189:63;18167:13;18238:2;18230:11;;18223:4;18211:17;;18189:63;:::i;:::-;18272:17;18291:2;18268:26;;17514:786;-1:-1:-1;;;;17514:786:13:o;18305:258::-;18347:3;18385:5;18379:12;18412:6;18407:3;18400:19;18428:63;18484:6;18477:4;18472:3;18468:14;18461:4;18454:5;18450:16;18428:63;:::i;:::-;18545:2;18524:15;-1:-1:-1;;18520:29:13;18511:39;;;;18552:4;18507:50;;18305:258;-1:-1:-1;;18305:258:13:o;18568:220::-;18717:2;18706:9;18699:21;18680:4;18737:45;18778:2;18767:9;18763:18;18755:6;18737:45;:::i;19807:386::-;20039:1;20035;20030:3;20026:11;20022:19;20014:6;20010:32;19999:9;19992:51;20079:6;20074:2;20063:9;20059:18;20052:34;20122:2;20117;20106:9;20102:18;20095:30;19973:4;20142:45;20183:2;20172:9;20168:18;20160:6;20142:45;:::i;:::-;20134:53;19807:386;-1:-1:-1;;;;;19807:386:13:o;20198:277::-;20265:6;20318:2;20306:9;20297:7;20293:23;20289:32;20286:52;;;20334:1;20331;20324:12;20286:52;20366:9;20360:16;20419:5;20412:13;20405:21;20398:5;20395:32;20385:60;;20441:1;20438;20431:12;20480:127;20541:10;20536:3;20532:20;20529:1;20522:31;20572:4;20569:1;20562:15;20596:4;20593:1;20586:15;20612:136;20651:3;20679:5;20669:39;;20688:18;;:::i;:::-;-1:-1:-1;;;20724:18:13;;20612:136::o",
  "language": "Solidity",
  "natspec": {
    "author": "merkle-groot",
    "details": "Raffle Contract",
    "kind": "dev",
    "methods": {
      "changeTreasuryAddress(address)": {
        "details": "Function that allows changing the treasury address",
        "notice": "Can only be called by the owner of the contract",
        "params": {
          "newTreasuryAddress": "The new address to which the collected fees will be spent"
        }
      },
      "disburseWinner()": {
        "notice": "Disburses NFT to winner and raised raffle pool to owner"
      },
      "enterLockPeriod()": {
        "details": "Function to lock the funds and enter phase 1",
        "notice": "Can only be called by admin role"
      },
      "exitLockPeriod()": {
        "details": "Function to return -1 phase and call the chainlink oracle",
        "notice": "Can only be called by the admin role   "
      },
      "getRandomNumber()": {
        "notice": "Requests randomness "
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Called by the NFT contract"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "purchaseSlot(uint256,uint256)": {
        "details": "Function used to buy slots or get free slots",
        "notice": "For getting free slots, the number must be calculated at front-end",
        "params": {
          "_method": "0 if buying, 1 if getting it for free",
          "_numSlots": "No of slots"
        }
      },
      "refundSlot(uint256[])": {
        "details": "Function to get refund from the raffle",
        "notice": "Only bought slots can be refunded",
        "params": {
          "deleteIndices": "Pass the array of indices to be deleted"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "offset": [
    541,
    13302
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CF7EA GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x9CC1F301 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCE16097E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCE16097E EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xD11A57EC EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CC1F301 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xA6F353F0 EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xC3994752 EQ PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x796FC402 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x796FC402 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x9451B981 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x9A23EC19 EQ PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D1CF7EA EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x5FCBD5B6 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x7489CE48 EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EFCD76F GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x3912D466 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x3912D466 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x3F683B6A EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x42619F66 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x47984F2C EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EFCD76F EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x31F94D19 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14D287A4 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x14D287A4 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x15CC7B2A EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x1A8CEF9A EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x4E04656 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x55AD42E EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xCA098B2 EQ PUSH2 0x283 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x206C JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x20D4 JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x234 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0xE5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x216F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x1126 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0x1151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x1236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0x12B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x234 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x234 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x46F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D9 PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x240 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x50F CALLDATASIZE PUSH1 0x4 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x529 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x21CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0x551 CALLDATASIZE PUSH1 0x4 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x13CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0x571 CALLDATASIZE PUSH1 0x4 PUSH2 0x221C JUMP JUMPDEST PUSH2 0x1449 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x591 CALLDATASIZE PUSH1 0x4 PUSH2 0x216F JUMP JUMPDEST PUSH2 0x177B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x179C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x216F JUMP JUMPDEST PUSH2 0x1872 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH32 0xE1DCBDB91DF27212A29BC27177C840CF2F819ECF2187432E1FAC86C2DD5DFCA9 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0x650 CALLDATASIZE PUSH1 0x4 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x189C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x46F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6BB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6CE DUP2 CALLER PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 EQ PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792063616C6C2074686973206166746572206C6F636B207065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C9A5BD9 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD GT PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206973207374696C6C20696E206C6F636B20706572696F64 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x713 JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x8 SSTORE PUSH2 0x7E1 PUSH2 0x1B17 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x2291 JUMP JUMPDEST PUSH1 0x8 SLOAD ISZERO PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742062757920647572696E67207468697320726F756E6400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A2043616E6E6F74207075726368617365203020736C6F74732E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xE SLOAD LT PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526166666C653A20416C6C20726166666C6520736C6F7473206172652066696C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3632B217 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A2043616E6E6F7420707572636861736520736C6F7420616674 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65722077696E6E657220686173206265656E2063686F73656E2E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x9B6 SWAP1 DUP4 PUSH2 0x231E JUMP JUMPDEST CALLVALUE LT ISZERO DUP1 PUSH2 0x9C4 JUMPI POP DUP1 PUSH1 0x1 EQ JUMPDEST PUSH2 0xA2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A20496E73756666696369656E74204554482070726F76696465 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x32103A3790383AB931B430B9B29039B637BA3997 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x7 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD LT DUP1 ISZERO PUSH2 0xA79 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA6A SWAP1 PUSH1 0xA SWAP1 PUSH2 0x2353 JUMP JUMPDEST PUSH2 0xA75 SWAP1 PUSH1 0x1 PUSH2 0x2367 JUMP JUMPDEST DUP3 GT ISZERO JUMPDEST DUP1 PUSH2 0xA82 JUMPI POP DUP1 ISZERO JUMPDEST PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A2043616E6E6F7420696E6372656D656E7420736C6F74732069 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1B881D1A1A5CC81C9BDD5B99 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x4 SLOAD PUSH2 0xAF3 SWAP2 SWAP1 PUSH2 0x237F JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A2052657175657374696E6720746F2070757263686173652074 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x37B79036B0B73C9039B637BA3997 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x10 SLOAD ISZERO PUSH2 0xC0C JUMPI PUSH1 0x10 DUP1 SLOAD CALLER SWAP2 PUSH1 0xF SWAP2 PUSH2 0xB79 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x237F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB89 JUMPI PUSH2 0xB89 PUSH2 0x2396 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xBA4 JUMPI PUSH2 0xBA4 PUSH2 0x2396 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP1 SLOAD DUP1 PUSH2 0xBE3 JUMPI PUSH2 0xBE3 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP1 DUP1 PUSH2 0xC04 SWAP1 PUSH2 0x23C2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB5C JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC7E JUMPI PUSH1 0x0 JUMPDEST PUSH2 0xC21 DUP3 DUP6 PUSH2 0x237F JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC7C JUMPI PUSH1 0xF DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 PUSH2 0xC74 DUP2 PUSH2 0x23C2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC17 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH1 0xE SLOAD PUSH2 0xC8C SWAP2 SWAP1 PUSH2 0x2367 JUMP JUMPDEST PUSH1 0xE SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xCAE SWAP1 DUP5 SWAP1 PUSH2 0x2367 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE DUP2 PUSH2 0xCF6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xCF0 SWAP1 DUP5 SWAP1 PUSH2 0x2367 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x86E01953521E8CA90CF9568CE180D715096931EF1C18C1343B19C53E5C6E6361 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A20526166666C65206E6F7420696E6974696174656420776974 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x34103A3434B99027232A1031B7B73A3930B1BA17 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 NOT EQ DUP1 ISZERO PUSH2 0xDC3 JUMPI POP PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742072656365697665204E46542061742074686973207068617365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0xB DUP5 SWAP1 SSTORE PUSH1 0x0 PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 PUSH2 0xE29 DUP4 PUSH2 0x23C2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE3C SWAP1 POP TIMESTAMP PUSH3 0x93A80 PUSH2 0x2367 JUMP JUMPDEST PUSH1 0x9 SSTORE POP PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A2043616E6E6F74206469737572627365204E465420746F2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E6E657220776974686F757420686F6C64696E67204E46542E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xF58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A2043616E6E6F7420646973627572736520746F2077696E6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7220776974686F757420686176696E6720636F6C6C6563746564206F6E652E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xFD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A20506C65617365207761697420666F7220436861696E6C696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B2056524620746F20757064617465207468652077696E6E6572206669727374 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0xFEF SWAP1 DUP6 PUSH2 0x23DD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xFFF JUMPI PUSH2 0xFFF PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1053 JUMPI PUSH1 0xF DUP1 SLOAD PUSH2 0x1027 SWAP1 DUP5 PUSH2 0x23DD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1037 JUMPI PUSH2 0x1037 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x105E PUSH1 0x1 DUP4 PUSH2 0x2367 JUMP JUMPDEST SWAP2 POP PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH32 0xA2564FBE9F8E6077ADCF46DFE7C571EAE3B5A67375D138E992F66E4DB4F97526 SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1142 DUP2 CALLER PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x114C DUP4 DUP4 PUSH2 0x1C05 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115D DUP2 CALLER PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x8 SLOAD ISZERO PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792063616C6C207468697320616674657220726166666C6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1C9BDD5B99 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD GT PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206973207374696C6C20696E20726166666C6520726F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 SSTORE PUSH2 0x1228 TIMESTAMP PUSH3 0x278D00 PUSH2 0x2367 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x1233 PUSH2 0x1C89 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x12A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH2 0x12B0 DUP3 DUP3 PUSH2 0x1CE1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C0 DUP2 CALLER PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA SSTORE PUSH1 0x5 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x131B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x132F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13A3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1443 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x146C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x2291 JUMP JUMPDEST PUSH1 0x8 SLOAD ISZERO DUP1 PUSH2 0x147D JUMPI POP PUSH1 0xA SLOAD PUSH1 0x1 EQ JUMPDEST PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A2043616E6E6F7420726566756E6420647572696E6720746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x39903937BAB73217 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 PUSH2 0x14F2 JUMPI POP PUSH1 0xA SLOAD PUSH1 0x1 EQ JUMPDEST PUSH2 0x150E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x22BB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x1581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A204164647265737320646964206E6F74206275792074686573 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x329039B637BA3997 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x16A8 JUMPI PUSH1 0xF SLOAD DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x15A2 JUMPI PUSH2 0x15A2 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT ISZERO PUSH2 0x1696 JUMPI CALLER PUSH1 0xF DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x15C4 JUMPI PUSH2 0x15C4 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 SLOAD DUP2 LT PUSH2 0x15DB JUMPI PUSH2 0x15DB PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 PUSH1 0xF DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x160C JUMPI PUSH2 0x160C PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 SLOAD DUP2 LT PUSH2 0x1623 JUMPI PUSH2 0x1623 PUSH2 0x2396 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x10 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x1665 JUMPI PUSH2 0x1665 PUSH2 0x2396 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP6 MUL SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP PUSH2 0x1693 SWAP1 DUP3 PUSH2 0x2367 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH2 0x16A0 DUP2 PUSH2 0x23C2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLER SWAP1 PUSH2 0x8FC SWAP1 PUSH2 0x16BB SWAP1 DUP5 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x16E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0xE SLOAD PUSH2 0x16F2 SWAP2 SWAP1 PUSH2 0x237F JUMP JUMPDEST PUSH1 0xE SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1714 SWAP1 DUP5 SWAP1 PUSH2 0x237F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x173B SWAP1 DUP5 SWAP1 PUSH2 0x237F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE8E3157B474707A4AD53AA38CA233AC428BB08F705EB304F0859D2A884C88002 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x178B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH32 0xE1DCBDB91DF27212A29BC27177C840CF2F819ECF2187432E1FAC86C2DD5DFCA9 PUSH2 0x17C7 DUP2 CALLER PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x181D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E207A65726F206164647265737320726571756972656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x9073DFAC663173E64AA95665FAEDAE52E2246F9BCDD3890FBFAF6733B46BBA13 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x18B8 DUP2 CALLER PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x114C DUP4 DUP4 PUSH2 0x1CE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x194B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196F SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST LT ISZERO PUSH2 0x19D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768204C494E4B202D2066696C6C20636F6E747261637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1DDA5D1A0819985D58D95D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH2 0x1A1B PUSH32 0x0 PUSH32 0x0 PUSH2 0x1D46 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A2A DUP3 DUP3 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x12B0 JUMPI PUSH2 0x1A42 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1EC9 JUMP JUMPDEST PUSH2 0x1A4D DUP4 PUSH1 0x20 PUSH2 0x1EC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A5E SWAP3 SWAP2 SWAP1 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x713 SWAP2 PUSH1 0x4 ADD PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x1ACD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD GT PUSH2 0x1B6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526166666C653A204E6F20736C6F7473206172652066696C6C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1B91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526166666C653A2043616E6E6F7420636F6C6C6563742077696E6E6572207477 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x34B1B297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x713 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1A1B PUSH2 0x18C2 JUMP JUMPDEST PUSH2 0x1C0F DUP3 DUP3 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1C45 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x2291 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1AFA CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1CEB DUP3 DUP3 PUSH2 0x1340 JUMP JUMPDEST ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DB6 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E26 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP10 SWAP1 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 DUP8 SWAP1 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1E81 SWAP2 PUSH2 0x2367 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1EC1 DUP5 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1ED8 DUP4 PUSH1 0x2 PUSH2 0x231E JUMP JUMPDEST PUSH2 0x1EE3 SWAP1 PUSH1 0x2 PUSH2 0x2367 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EFB JUMPI PUSH2 0x1EFB PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F25 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1F40 JUMPI PUSH2 0x1F40 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F6F JUMPI PUSH2 0x1F6F PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1F93 DUP5 PUSH1 0x2 PUSH2 0x231E JUMP JUMPDEST PUSH2 0x1F9E SWAP1 PUSH1 0x1 PUSH2 0x2367 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2016 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1FD2 JUMPI PUSH2 0x1FD2 PUSH2 0x2396 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FE8 JUMPI PUSH2 0x1FE8 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x200F DUP2 PUSH2 0x2556 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FA1 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x2065 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x713 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20F5 DUP7 PUSH2 0x20B8 JUMP JUMPDEST SWAP5 POP PUSH2 0x2103 PUSH1 0x20 DUP8 ADD PUSH2 0x20B8 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x213B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x214A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x215C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x219B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x21AB PUSH1 0x20 DUP5 ADD PUSH2 0x20B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2065 DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2210 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x21EB JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x222F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x225B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x226A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x227F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x526166666C653A20436F6E747261637420646F6573206E6F74206F776E207261 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x33333632B0B136329027232A17 PUSH1 0x99 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2338 JUMPI PUSH2 0x2338 PUSH2 0x2308 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2362 JUMPI PUSH2 0x2362 PUSH2 0x233D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x237A JUMPI PUSH2 0x237A PUSH2 0x2308 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2391 JUMPI PUSH2 0x2391 PUSH2 0x2308 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x23D6 JUMPI PUSH2 0x23D6 PUSH2 0x2308 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23EC JUMPI PUSH2 0x23EC PUSH2 0x233D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2425 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x240D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2434 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2472 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x240A JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x24A3 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x240A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x24C7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x240A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2065 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2515 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x24AF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2565 JUMPI PUSH2 0x2565 PUSH2 0x2308 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x589DB1FA7BE09BF0D8E3F25E86DD23F00E80B22FB8DD71BC4A928C PUSH12 0xFA736F64736F6C634300080A STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "LT",
      "path": "12"
    },
    "9": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20F"
    },
    "12": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "SHR",
      "path": "12"
    },
    "19": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x5D1CF7EA"
    },
    "25": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "GT",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x118"
    },
    "29": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "30": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "31": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9CC1F301"
    },
    "36": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "GT",
      "path": "12"
    },
    "37": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA0"
    },
    "40": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "41": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "42": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCE16097E"
    },
    "47": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "GT",
      "path": "12"
    },
    "48": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "52": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "53": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCE16097E"
    },
    "58": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "59": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5E1"
    },
    "62": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "63": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "64": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD11A57EC"
    },
    "69": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "70": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x601"
    },
    "73": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "74": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "75": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD547741F"
    },
    "80": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "81": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x635"
    },
    "84": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "85": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "86": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD56D229D"
    },
    "91": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "92": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x655"
    },
    "95": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "96": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "97": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xDBDFF2C1"
    },
    "102": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x675"
    },
    "106": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "107": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "REVERT",
      "path": "12"
    },
    "111": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "112": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "113": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9CC1F301"
    },
    "118": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "119": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x576"
    },
    "122": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "123": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "124": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA217FDDF"
    },
    "129": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "130": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x596"
    },
    "133": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "134": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "135": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA6F353F0"
    },
    "140": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "141": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5AB"
    },
    "144": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "145": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "146": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xC3994752"
    },
    "151": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "152": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5CB"
    },
    "155": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "156": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "159": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "REVERT",
      "path": "12"
    },
    "160": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "161": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "162": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x796FC402"
    },
    "167": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "GT",
      "path": "12"
    },
    "168": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "172": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "173": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x796FC402"
    },
    "178": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "179": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x49D"
    },
    "182": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "183": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "184": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x91D14854"
    },
    "189": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "190": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4F4"
    },
    "193": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "194": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "195": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9451B981"
    },
    "200": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "201": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x514"
    },
    "204": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "205": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "206": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x94985DDD"
    },
    "211": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "212": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x536"
    },
    "215": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "216": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "217": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x9A23EC19"
    },
    "222": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "223": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x556"
    },
    "226": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "227": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "230": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "REVERT",
      "path": "12"
    },
    "231": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "232": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "233": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x5D1CF7EA"
    },
    "238": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "239": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x423"
    },
    "242": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "243": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "244": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x5FCBD5B6"
    },
    "249": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "250": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x439"
    },
    "253": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "254": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "255": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x61D027B3"
    },
    "260": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "261": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x44F"
    },
    "264": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "265": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "266": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x7489CE48"
    },
    "271": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "272": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x487"
    },
    "275": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "276": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "278": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "279": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "REVERT",
      "path": "12"
    },
    "280": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "281": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "282": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2EFCD76F"
    },
    "287": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "GT",
      "path": "12"
    },
    "288": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19B"
    },
    "291": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "292": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "293": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3912D466"
    },
    "298": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "GT",
      "path": "12"
    },
    "299": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A"
    },
    "302": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "303": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "304": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3912D466"
    },
    "309": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "310": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B0"
    },
    "313": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "314": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "315": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3F683B6A"
    },
    "320": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "321": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3C5"
    },
    "324": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "325": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "326": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x42619F66"
    },
    "331": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "332": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3DB"
    },
    "335": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "336": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "337": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x47984F2C"
    },
    "342": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "343": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F1"
    },
    "346": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "347": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "348": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x5C975ABB"
    },
    "353": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "354": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x40B"
    },
    "357": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "358": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "360": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "361": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "REVERT",
      "path": "12"
    },
    "362": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "363": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "364": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2EFCD76F"
    },
    "369": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "370": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x345"
    },
    "373": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "374": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "375": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2F2FF15D"
    },
    "380": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "381": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35B"
    },
    "384": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "385": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "386": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x31F94D19"
    },
    "391": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "392": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37B"
    },
    "395": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "396": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "397": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x36568ABE"
    },
    "402": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "403": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x390"
    },
    "406": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "407": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "409": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "410": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "REVERT",
      "path": "12"
    },
    "411": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "412": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "413": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x14D287A4"
    },
    "418": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "GT",
      "path": "12"
    },
    "419": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E2"
    },
    "422": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "423": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "424": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x14D287A4"
    },
    "429": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "430": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x298"
    },
    "433": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "434": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "435": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x150B7A02"
    },
    "440": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "441": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AD"
    },
    "444": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "445": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "446": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x15CC7B2A"
    },
    "451": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "452": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E6"
    },
    "455": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "456": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "457": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1A8CEF9A"
    },
    "462": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "463": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x300"
    },
    "466": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "467": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "468": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x248A9CA3"
    },
    "473": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "474": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x315"
    },
    "477": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "478": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "480": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "481": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "REVERT",
      "path": "12"
    },
    "482": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "483": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "484": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1FFC9A7"
    },
    "489": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "490": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x214"
    },
    "493": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "494": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "495": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4E04656"
    },
    "500": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "501": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x249"
    },
    "504": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "505": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "506": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x55AD42E"
    },
    "511": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "512": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26D"
    },
    "515": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "516": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "517": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCA098B2"
    },
    "522": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "EQ",
      "path": "12"
    },
    "523": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x283"
    },
    "526": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "527": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "528": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "530": {
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "DUP1",
      "path": "12"
    },
    "531": {
      "first_revert": true,
      "fn": null,
      "offset": [
        541,
        13302
      ],
      "op": "REVERT",
      "path": "12"
    },
    "532": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "533": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "534": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "535": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "536": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220"
    },
    "539": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "540": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "542": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "543": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "REVERT",
      "path": "0"
    },
    "544": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "545": {
      "op": "POP"
    },
    "546": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x234"
    },
    "549": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22F"
    },
    "552": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "553": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "555": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x206C"
    },
    "558": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "559": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "560": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68A"
    },
    "563": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "564": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "565": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "567": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "568": {
      "op": "SWAP1"
    },
    "569": {
      "op": "ISZERO"
    },
    "570": {
      "op": "ISZERO"
    },
    "571": {
      "op": "DUP2"
    },
    "572": {
      "op": "MSTORE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "575": {
      "op": "ADD"
    },
    "576": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "577": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "579": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "580": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "581": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "582": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "SUB",
      "path": "0"
    },
    "583": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "584": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "RETURN",
      "path": "0"
    },
    "585": {
      "offset": [
        837,
        861
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "586": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "587": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "DUP1",
      "path": "12"
    },
    "588": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "589": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x255"
    },
    "592": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "593": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "595": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "DUP1",
      "path": "12"
    },
    "596": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "REVERT",
      "path": "12"
    },
    "597": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "598": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "POP",
      "path": "12"
    },
    "599": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "602": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "604": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "605": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "DUP2",
      "path": "12"
    },
    "606": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "JUMP",
      "path": "12"
    },
    "607": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "608": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "610": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        837,
        861
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "611": {
      "op": "SWAP1"
    },
    "612": {
      "op": "DUP2"
    },
    "613": {
      "op": "MSTORE"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "616": {
      "op": "ADD"
    },
    "617": {
      "offset": [
        837,
        861
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x240"
    },
    "620": {
      "op": "JUMP"
    },
    "621": {
      "offset": [
        1286,
        1317
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "622": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "623": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "DUP1",
      "path": "12"
    },
    "624": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "625": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x279"
    },
    "628": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "629": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "631": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "DUP1",
      "path": "12"
    },
    "632": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "REVERT",
      "path": "12"
    },
    "633": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "634": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "POP",
      "path": "12"
    },
    "635": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "638": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "640": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "641": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "DUP2",
      "path": "12"
    },
    "642": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        1286,
        1317
      ],
      "op": "JUMP",
      "path": "12"
    },
    "643": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "644": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "645": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "DUP1",
      "path": "12"
    },
    "646": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "647": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28F"
    },
    "650": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "651": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "653": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "DUP1",
      "path": "12"
    },
    "654": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "REVERT",
      "path": "12"
    },
    "655": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "656": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "POP",
      "path": "12"
    },
    "657": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "660": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6C1"
    },
    "663": {
      "fn": "Raffle.exitLockPeriod",
      "jump": "i",
      "offset": [
        11091,
        11447
      ],
      "op": "JUMP",
      "path": "12"
    },
    "664": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "665": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AB"
    },
    "668": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A6"
    },
    "671": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "672": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "674": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2096"
    },
    "677": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        3832,
        6459
      ],
      "op": "JUMP",
      "path": "12"
    },
    "678": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "679": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E7"
    },
    "682": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        3832,
        6459
      ],
      "op": "JUMP",
      "path": "12"
    },
    "683": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "684": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "STOP",
      "path": "12"
    },
    "685": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "686": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "687": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "DUP1",
      "path": "12"
    },
    "688": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "689": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B9"
    },
    "692": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "693": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "695": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "DUP1",
      "path": "12"
    },
    "696": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "REVERT",
      "path": "12"
    },
    "697": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "698": {
      "op": "POP"
    },
    "699": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CD"
    },
    "702": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C8"
    },
    "705": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "706": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "708": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20D4"
    },
    "711": {
      "fn": "Raffle.onERC721Received",
      "jump": "i",
      "offset": [
        11507,
        12222
      ],
      "op": "JUMP",
      "path": "12"
    },
    "712": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "713": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD30"
    },
    "716": {
      "fn": "Raffle.onERC721Received",
      "jump": "i",
      "offset": [
        11507,
        12222
      ],
      "op": "JUMP",
      "path": "12"
    },
    "717": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "718": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "720": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "op": "SUB"
    },
    "729": {
      "op": "NOT"
    },
    "730": {
      "op": "SWAP1"
    },
    "731": {
      "op": "SWAP2"
    },
    "732": {
      "op": "AND"
    },
    "733": {
      "op": "DUP2"
    },
    "734": {
      "op": "MSTORE"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "737": {
      "op": "ADD"
    },
    "738": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x240"
    },
    "741": {
      "op": "JUMP"
    },
    "742": {
      "offset": [
        2330,
        2358
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "743": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "744": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "DUP1",
      "path": "12"
    },
    "745": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "746": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F2"
    },
    "749": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "750": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "752": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "DUP1",
      "path": "12"
    },
    "753": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "REVERT",
      "path": "12"
    },
    "754": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "755": {
      "op": "POP"
    },
    "756": {
      "offset": [
        2330,
        2358
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "758": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "759": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x234"
    },
    "762": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "763": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "765": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "AND",
      "path": "12"
    },
    "766": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "DUP2",
      "path": "12"
    },
    "767": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        2330,
        2358
      ],
      "op": "JUMP",
      "path": "12"
    },
    "768": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "769": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "770": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "771": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "772": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30C"
    },
    "775": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "776": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "778": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "779": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "REVERT",
      "path": "12"
    },
    "780": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "781": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "POP",
      "path": "12"
    },
    "782": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AB"
    },
    "785": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE5E"
    },
    "788": {
      "fn": "Raffle.disburseWinner",
      "jump": "i",
      "offset": [
        9276,
        10491
      ],
      "op": "JUMP",
      "path": "12"
    },
    "789": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "790": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "791": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "792": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "793": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x321"
    },
    "796": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "797": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "799": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "800": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "REVERT",
      "path": "0"
    },
    "801": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25F"
    },
    "806": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "809": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "810": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "812": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216F"
    },
    "815": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "816": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "817": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "819": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 0
    },
    "820": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "821": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "822": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "824": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "825": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "826": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "827": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "829": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "830": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "831": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "833": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "ADD",
      "path": "0"
    },
    "834": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "835": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "836": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3917,
        4038
      ],
      "op": "JUMP",
      "path": "0"
    },
    "837": {
      "offset": [
        1219,
        1248
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "838": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "839": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "DUP1",
      "path": "12"
    },
    "840": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "841": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x351"
    },
    "844": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "845": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "847": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "DUP1",
      "path": "12"
    },
    "848": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "REVERT",
      "path": "12"
    },
    "849": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "850": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "POP",
      "path": "12"
    },
    "851": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "854": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "856": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "857": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "DUP2",
      "path": "12"
    },
    "858": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        1219,
        1248
      ],
      "op": "JUMP",
      "path": "12"
    },
    "859": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "860": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "861": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "862": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "863": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x367"
    },
    "866": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "867": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "869": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "870": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "REVERT",
      "path": "0"
    },
    "871": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "872": {
      "op": "POP"
    },
    "873": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AB"
    },
    "876": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x376"
    },
    "879": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "880": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "882": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2188"
    },
    "885": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "886": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "887": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1126"
    },
    "890": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "891": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "892": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "893": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "DUP1",
      "path": "12"
    },
    "894": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "895": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x387"
    },
    "898": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "899": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "901": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "DUP1",
      "path": "12"
    },
    "902": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "REVERT",
      "path": "12"
    },
    "903": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "904": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "POP",
      "path": "12"
    },
    "905": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AB"
    },
    "908": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1151"
    },
    "911": {
      "fn": "Raffle.enterLockPeriod",
      "jump": "i",
      "offset": [
        10615,
        10947
      ],
      "op": "JUMP",
      "path": "12"
    },
    "912": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "913": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "914": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "915": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "916": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39C"
    },
    "919": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "920": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "922": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "923": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "924": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "925": {
      "op": "POP"
    },
    "926": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AB"
    },
    "929": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AB"
    },
    "932": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "933": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "935": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2188"
    },
    "938": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "939": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "940": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1236"
    },
    "943": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "944": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "945": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "946": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "DUP1",
      "path": "12"
    },
    "947": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "948": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3BC"
    },
    "951": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "952": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "954": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "DUP1",
      "path": "12"
    },
    "955": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "REVERT",
      "path": "12"
    },
    "956": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "957": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "POP",
      "path": "12"
    },
    "958": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AB"
    },
    "961": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12B4"
    },
    "964": {
      "fn": "Raffle.stopTheRaffle",
      "jump": "i",
      "offset": [
        8993,
        9193
      ],
      "op": "JUMP",
      "path": "12"
    },
    "965": {
      "offset": [
        1431,
        1459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "966": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "967": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "968": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "969": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D1"
    },
    "972": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "973": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "975": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "976": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "REVERT",
      "path": "12"
    },
    "977": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "978": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "POP",
      "path": "12"
    },
    "979": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "982": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "984": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "985": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "DUP2",
      "path": "12"
    },
    "986": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1431,
        1459
      ],
      "op": "JUMP",
      "path": "12"
    },
    "987": {
      "offset": [
        1782,
        1813
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "988": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "989": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "DUP1",
      "path": "12"
    },
    "990": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "991": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E7"
    },
    "994": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "995": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "997": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "DUP1",
      "path": "12"
    },
    "998": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "REVERT",
      "path": "12"
    },
    "999": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1000": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "POP",
      "path": "12"
    },
    "1001": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "1004": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "1006": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1007": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1008": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1782,
        1813
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1009": {
      "offset": [
        1883,
        1924
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1010": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1011": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1012": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1013": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3FD"
    },
    "1016": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1017": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1019": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1020": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1021": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1022": {
      "op": "POP"
    },
    "1023": {
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xD"
    },
    "1025": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1026": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x234"
    },
    "1029": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1030": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "1032": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "AND",
      "path": "12"
    },
    "1033": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1034": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        1883,
        1924
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1035": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1036": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1037": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1038": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1039": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x417"
    },
    "1042": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1043": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1045": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1046": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1047": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1048": {
      "op": "POP"
    },
    "1049": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x2"
    },
    "1051": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1052": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1054": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "2"
    },
    "1055": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234"
    },
    "1058": {
      "fn": "Pausable.paused",
      "offset": [
        1041,
        1125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1059": {
      "offset": [
        1967,
        2000
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1060": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1061": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1062": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1063": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x42F"
    },
    "1066": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1067": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1069": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1070": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1071": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1072": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "POP",
      "path": "12"
    },
    "1073": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "1076": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "1078": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1079": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1080": {
      "fn": "Pausable.paused",
      "offset": [
        1967,
        2000
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1081": {
      "offset": [
        1350,
        1374
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1082": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1083": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1084": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1085": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x445"
    },
    "1088": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1089": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1091": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1092": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1093": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1094": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "POP",
      "path": "12"
    },
    "1095": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "1098": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "1100": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1101": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1102": {
      "fn": "Pausable.paused",
      "offset": [
        1350,
        1374
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1103": {
      "offset": [
        1163,
        1186
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1104": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1105": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1106": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1107": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x45B"
    },
    "1110": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1111": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1113": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1114": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1115": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "offset": [
        1163,
        1186
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "1119": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1120": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x46F"
    },
    "1123": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "offset": [
        1163,
        1186
      ],
      "op": "AND",
      "path": "12"
    },
    "1133": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1134": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1135": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1136": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1138": {
      "fn": "Pausable.paused",
      "offset": [
        1163,
        1186
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1145": {
      "op": "SHL"
    },
    "1146": {
      "op": "SUB"
    },
    "1147": {
      "op": "SWAP1"
    },
    "1148": {
      "op": "SWAP2"
    },
    "1149": {
      "op": "AND"
    },
    "1150": {
      "op": "DUP2"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1154": {
      "op": "ADD"
    },
    "1155": {
      "offset": [
        1163,
        1186
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x240"
    },
    "1158": {
      "op": "JUMP"
    },
    "1159": {
      "offset": [
        913,
        945
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1160": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1161": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1162": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1163": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x493"
    },
    "1166": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1167": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1169": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1170": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1171": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1172": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "POP",
      "path": "12"
    },
    "1173": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "1176": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1178": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1179": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1180": {
      "fn": "Pausable.paused",
      "offset": [
        913,
        945
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1181": {
      "offset": [
        2219,
        2275
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1182": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1183": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1184": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1185": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4A9"
    },
    "1188": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1189": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1191": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1192": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1193": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D9"
    },
    "1198": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B8"
    },
    "1201": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1202": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1204": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21B4"
    },
    "1207": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        2219,
        2275
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1208": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1209": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "1211": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1213": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1214": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1216": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1217": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1218": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1219": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1221": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1222": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1223": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1224": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1225": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1227": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1228": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "ADD",
      "path": "12"
    },
    "1229": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1230": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1232": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1233": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1234": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "ADD",
      "path": "12"
    },
    "1235": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1236": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1237": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1238": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1239": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1240": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1241": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1242": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1244": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1245": {
      "fn": "Pausable.paused",
      "offset": [
        2219,
        2275
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1246": {
      "op": "SWAP4"
    },
    "1247": {
      "op": "DUP5"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1251": {
      "op": "DUP5"
    },
    "1252": {
      "op": "ADD"
    },
    "1253": {
      "op": "SWAP3"
    },
    "1254": {
      "op": "SWAP1"
    },
    "1255": {
      "op": "SWAP3"
    },
    "1256": {
      "op": "MSTORE"
    },
    "1257": {
      "op": "SWAP1"
    },
    "1258": {
      "op": "DUP3"
    },
    "1259": {
      "op": "ADD"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1263": {
      "op": "ADD"
    },
    "1264": {
      "offset": [
        2219,
        2275
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x240"
    },
    "1267": {
      "op": "JUMP"
    },
    "1268": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1269": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1270": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1271": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1272": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x500"
    },
    "1275": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1276": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1278": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1279": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1280": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1281": {
      "op": "POP"
    },
    "1282": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x234"
    },
    "1285": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50F"
    },
    "1288": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1289": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1291": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2188"
    },
    "1294": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1295": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1296": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1340"
    },
    "1299": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1300": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1301": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1302": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1303": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1304": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x520"
    },
    "1307": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1308": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1310": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1311": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1312": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1313": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "POP",
      "path": "12"
    },
    "1314": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x529"
    },
    "1317": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1369"
    },
    "1320": {
      "fn": "Raffle.getSlotOwners",
      "jump": "i",
      "offset": [
        13204,
        13300
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1321": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1322": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1324": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1325": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x240"
    },
    "1328": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1329": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1330": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21CF"
    },
    "1333": {
      "fn": "Raffle.getSlotOwners",
      "jump": "i",
      "offset": [
        13204,
        13300
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1334": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1335": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1336": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1337": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1338": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x542"
    },
    "1341": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1342": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1344": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1345": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1346": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1347": {
      "op": "POP"
    },
    "1348": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2AB"
    },
    "1351": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x551"
    },
    "1354": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1355": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1357": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2096"
    },
    "1360": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1361": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1362": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13CB"
    },
    "1365": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1366": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1367": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1368": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1369": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1370": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x562"
    },
    "1373": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1374": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1376": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1377": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1378": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1379": {
      "op": "POP"
    },
    "1380": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AB"
    },
    "1383": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x571"
    },
    "1386": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1387": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1389": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x221C"
    },
    "1392": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        6645,
        8225
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1393": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1394": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1449"
    },
    "1397": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        6645,
        8225
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1398": {
      "offset": [
        2129,
        2158
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1399": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1400": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1401": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1402": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x582"
    },
    "1405": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1406": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1408": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1409": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1410": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1411": {
      "op": "POP"
    },
    "1412": {
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "1415": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x591"
    },
    "1418": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1419": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1421": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x216F"
    },
    "1424": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        2129,
        2158
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1425": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1426": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x177B"
    },
    "1429": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        2129,
        2158
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1430": {
      "offset": [
        1952,
        2001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1431": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1432": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1433": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1434": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A2"
    },
    "1437": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1438": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1440": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1441": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1442": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1443": {
      "op": "POP"
    },
    "1444": {
      "offset": [
        1952,
        2001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25F"
    },
    "1447": {
      "offset": [
        1997,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1449": {
      "offset": [
        1952,
        2001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1450": {
      "fn": "Raffle.refundSlot",
      "offset": [
        1952,
        2001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1451": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1452": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1453": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1454": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1455": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5B7"
    },
    "1458": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1459": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1461": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1462": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1463": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1464": {
      "op": "POP"
    },
    "1465": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AB"
    },
    "1468": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5C6"
    },
    "1471": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1472": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1474": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21B4"
    },
    "1477": {
      "fn": "Raffle.changeTreasuryAddress",
      "jump": "i",
      "offset": [
        12926,
        13198
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1478": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1479": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x179C"
    },
    "1482": {
      "fn": "Raffle.changeTreasuryAddress",
      "jump": "i",
      "offset": [
        12926,
        13198
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1483": {
      "offset": [
        1480,
        1500
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1484": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1485": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1486": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1487": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5D7"
    },
    "1490": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1491": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1493": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1494": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1495": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1496": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "POP",
      "path": "12"
    },
    "1497": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "1500": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "1502": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1503": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1504": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1480,
        1500
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1505": {
      "offset": [
        2034,
        2061
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1506": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1507": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1508": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1509": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5ED"
    },
    "1512": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1513": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1515": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1516": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1517": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1518": {
      "op": "POP"
    },
    "1519": {
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x46F"
    },
    "1522": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5FC"
    },
    "1525": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1526": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1528": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x216F"
    },
    "1531": {
      "fn": "Raffle.changeTreasuryAddress",
      "jump": "i",
      "offset": [
        2034,
        2061
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1532": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1533": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1872"
    },
    "1536": {
      "fn": "Raffle.changeTreasuryAddress",
      "jump": "i",
      "offset": [
        2034,
        2061
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1537": {
      "offset": [
        1036,
        1102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1538": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1539": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1540": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1541": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x60D"
    },
    "1544": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1545": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1547": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1548": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1549": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1550": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "POP",
      "path": "12"
    },
    "1551": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "1554": {
      "offset": [
        1076,
        1102
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xE1DCBDB91DF27212A29BC27177C840CF2F819ECF2187432E1FAC86C2DD5DFCA9"
    },
    "1587": {
      "offset": [
        1036,
        1102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1588": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        1036,
        1102
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1589": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1590": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1591": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1592": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1593": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x641"
    },
    "1596": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1597": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1599": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1600": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1601": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1602": {
      "op": "POP"
    },
    "1603": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AB"
    },
    "1606": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x650"
    },
    "1609": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1610": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1612": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2188"
    },
    "1615": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1616": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1617": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x189C"
    },
    "1620": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1621": {
      "offset": [
        982,
        1008
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1622": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1623": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1624": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1625": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x661"
    },
    "1628": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1629": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1631": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1632": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1633": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "offset": [
        982,
        1008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "1637": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1638": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x46F"
    },
    "1641": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1648": {
      "op": "SHL"
    },
    "1649": {
      "op": "SUB"
    },
    "1650": {
      "offset": [
        982,
        1008
      ],
      "op": "AND",
      "path": "12"
    },
    "1651": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1652": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        982,
        1008
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1653": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1654": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1655": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1656": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1657": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x681"
    },
    "1660": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1661": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1663": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1664": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1665": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1666": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "POP",
      "path": "12"
    },
    "1667": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25F"
    },
    "1670": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18C2"
    },
    "1673": {
      "fn": "Raffle.getRandomNumber",
      "jump": "i",
      "offset": [
        12273,
        12492
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1674": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1675": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2630,
        2634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1683": {
      "op": "SHL"
    },
    "1684": {
      "op": "SUB"
    },
    "1685": {
      "op": "NOT"
    },
    "1686": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 2
    },
    "1687": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "AND",
      "path": "0"
    },
    "1688": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1695": {
      "op": "SHL"
    },
    "1696": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "EQ",
      "path": "0"
    },
    "1697": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2700
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1698": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BB"
    },
    "1701": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2653,
        2740
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1710": {
      "op": "SHL"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "SUB"
    },
    "1719": {
      "op": "NOT"
    },
    "1720": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 3
    },
    "1721": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "7"
    },
    "1722": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "7"
    },
    "1723": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2704,
        2740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1724": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2646,
        2740
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1725": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2545,
        2747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1726": {
      "op": "POP"
    },
    "1727": {
      "op": "POP"
    },
    "1728": {
      "fn": "AccessControl.supportsInterface",
      "jump": "o",
      "offset": [
        2545,
        2747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1729": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1730": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11177,
        11194
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1732": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11177,
        11194
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1733": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CE"
    },
    "1736": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11177,
        11194
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1737": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 4
    },
    "1738": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A20"
    },
    "1741": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1742": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1743": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1745": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1746": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1748": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "2"
    },
    "1749": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71C"
    },
    "1752": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1753": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1755": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1756": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1762": {
      "op": "SHL"
    },
    "1763": {
      "offset": [
        1612,
        1653
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1764": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1767": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1769": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1770": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "ADD",
      "path": "2"
    },
    "1771": {
      "op": "MSTORE"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1776": {
      "op": "DUP3"
    },
    "1777": {
      "op": "ADD"
    },
    "1778": {
      "op": "MSTORE"
    },
    "1779": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1802": {
      "op": "SHL"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1805": {
      "op": "DUP3"
    },
    "1806": {
      "op": "ADD"
    },
    "1807": {
      "op": "MSTORE"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1810": {
      "op": "ADD"
    },
    "1811": {
      "offset": [
        1612,
        1653
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1812": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1814": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1815": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1816": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1817": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "SUB",
      "path": "2"
    },
    "1818": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1819": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "1820": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1821": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11213,
        11225
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 5,
      "value": "0x8"
    },
    "1823": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11213,
        11225
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1824": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11229,
        11230
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1826": {
      "branch": 98,
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11213,
        11230
      ],
      "op": "EQ",
      "path": "12"
    },
    "1827": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x77A"
    },
    "1830": {
      "branch": 98,
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1831": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1833": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1840": {
      "op": "SHL"
    },
    "1841": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1842": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1845": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1847": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1848": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "ADD",
      "path": "12"
    },
    "1849": {
      "op": "MSTORE"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1852": {
      "op": "DUP1"
    },
    "1853": {
      "op": "DUP3"
    },
    "1854": {
      "op": "ADD"
    },
    "1855": {
      "op": "MSTORE"
    },
    "1856": {
      "op": "PUSH32",
      "value": "0x43616E206F6E6C792063616C6C2074686973206166746572206C6F636B207065"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1891": {
      "op": "DUP3"
    },
    "1892": {
      "op": "ADD"
    },
    "1893": {
      "op": "MSTORE"
    },
    "1894": {
      "op": "PUSH4",
      "value": "0x1C9A5BD9"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1901": {
      "op": "SHL"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1904": {
      "op": "DUP3"
    },
    "1905": {
      "op": "ADD"
    },
    "1906": {
      "op": "MSTORE"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1909": {
      "op": "ADD"
    },
    "1910": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "1913": {
      "op": "JUMP"
    },
    "1914": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11205,
        11271
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1915": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11301,
        11316
      ],
      "op": "TIMESTAMP",
      "path": "12",
      "statement": 6
    },
    "1916": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11289,
        11298
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "1918": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11289,
        11298
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1919": {
      "branch": 99,
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11289,
        11316
      ],
      "op": "GT",
      "path": "12"
    },
    "1920": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7CB"
    },
    "1923": {
      "branch": 99,
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1924": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1926": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1927": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1933": {
      "op": "SHL"
    },
    "1934": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1935": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1938": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1940": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1941": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "ADD",
      "path": "12"
    },
    "1942": {
      "op": "DUP2"
    },
    "1943": {
      "op": "SWAP1"
    },
    "1944": {
      "op": "MSTORE"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1947": {
      "op": "DUP3"
    },
    "1948": {
      "op": "ADD"
    },
    "1949": {
      "op": "MSTORE"
    },
    "1950": {
      "op": "PUSH32",
      "value": "0x436F6E7472616374206973207374696C6C20696E206C6F636B20706572696F64"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1985": {
      "op": "DUP3"
    },
    "1986": {
      "op": "ADD"
    },
    "1987": {
      "op": "MSTORE"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1990": {
      "op": "ADD"
    },
    "1991": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "1994": {
      "op": "JUMP"
    },
    "1995": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11281,
        11353
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1996": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11365,
        11375
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 7,
      "value": "0x7D3"
    },
    "1999": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11365,
        11373
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A84"
    },
    "2002": {
      "fn": "Raffle.exitLockPeriod",
      "jump": "i",
      "offset": [
        11365,
        11375
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2003": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11365,
        11375
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2006": {
      "op": "NOT"
    },
    "2007": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11385,
        11397
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 8,
      "value": "0x8"
    },
    "2009": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11385,
        11402
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2010": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11419,
        11440
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 9,
      "value": "0x7E1"
    },
    "2013": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11419,
        11438
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B17"
    },
    "2016": {
      "fn": "Raffle.exitLockPeriod",
      "jump": "i",
      "offset": [
        11419,
        11440
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2017": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11419,
        11440
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2018": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11412,
        11440
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2019": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11412,
        11440
      ],
      "op": "POP",
      "path": "12"
    },
    "2020": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "POP",
      "path": "12"
    },
    "2021": {
      "fn": "Raffle.exitLockPeriod",
      "offset": [
        11091,
        11447
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2022": {
      "fn": "Raffle.exitLockPeriod",
      "jump": "o",
      "offset": [
        11091,
        11447
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2023": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2024": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2026": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2027": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2029": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "2"
    },
    "2030": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2031": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80A"
    },
    "2034": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2035": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2037": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2044": {
      "op": "SHL"
    },
    "2045": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2046": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2047": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2049": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "2"
    },
    "2050": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x713"
    },
    "2053": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2054": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2291"
    },
    "2057": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2058": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2059": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4071,
        4083
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 10,
      "value": "0x8"
    },
    "2061": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4071,
        4083
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2062": {
      "branch": 100,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4071,
        4088
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2063": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x85A"
    },
    "2066": {
      "branch": 100,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2067": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2069": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2078": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2081": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2083": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2084": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "ADD",
      "path": "12"
    },
    "2085": {
      "op": "MSTORE"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH32",
      "value": "0x43616E6E6F742062757920647572696E67207468697320726F756E6400000000"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2128": {
      "op": "DUP3"
    },
    "2129": {
      "op": "ADD"
    },
    "2130": {
      "op": "MSTORE"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "2137": {
      "op": "JUMP"
    },
    "2138": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4063,
        4121
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2139": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4197,
        4198
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 11,
      "value": "0x0"
    },
    "2141": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4185,
        4194
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2142": {
      "branch": 101,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4185,
        4198
      ],
      "op": "GT",
      "path": "12"
    },
    "2143": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AA"
    },
    "2146": {
      "branch": 101,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2147": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2149": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2150": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2156": {
      "op": "SHL"
    },
    "2157": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2158": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2161": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2163": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2164": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "ADD",
      "path": "12"
    },
    "2165": {
      "op": "DUP2"
    },
    "2166": {
      "op": "SWAP1"
    },
    "2167": {
      "op": "MSTORE"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2170": {
      "op": "DUP3"
    },
    "2171": {
      "op": "ADD"
    },
    "2172": {
      "op": "MSTORE"
    },
    "2173": {
      "op": "PUSH32",
      "value": "0x526166666C653A2043616E6E6F74207075726368617365203020736C6F74732E"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2208": {
      "op": "DUP3"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "MSTORE"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2213": {
      "op": "ADD"
    },
    "2214": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "2217": {
      "op": "JUMP"
    },
    "2218": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4177,
        4235
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2219": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4317,
        4325
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 12,
      "value": "0x12"
    },
    "2221": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4317,
        4325
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2222": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4317,
        4325
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "2224": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4317,
        4325
      ],
      "op": "AND",
      "path": "12"
    },
    "2225": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4317,
        4333
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2226": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4317,
        4333
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2227": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4317,
        4325
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2229": {
      "branch": 102,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4317,
        4333
      ],
      "op": "EQ",
      "path": "12"
    },
    "2230": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8D1"
    },
    "2233": {
      "branch": 102,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2234": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2236": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2237": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2243": {
      "op": "SHL"
    },
    "2244": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2245": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2246": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2248": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "ADD",
      "path": "12"
    },
    "2249": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "2252": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2253": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22BB"
    },
    "2256": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        4309,
        4383
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2257": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4309,
        4383
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2258": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4472,
        4489
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 13,
      "value": "0x4"
    },
    "2260": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4472,
        4489
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2261": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4455,
        4469
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "2263": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4455,
        4469
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2264": {
      "branch": 103,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4455,
        4489
      ],
      "op": "LT",
      "path": "12"
    },
    "2265": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x930"
    },
    "2268": {
      "branch": 103,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2269": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2271": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2272": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2278": {
      "op": "SHL"
    },
    "2279": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2280": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2283": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2285": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2286": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "ADD",
      "path": "12"
    },
    "2287": {
      "op": "MSTORE"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2290": {
      "op": "DUP1"
    },
    "2291": {
      "op": "DUP3"
    },
    "2292": {
      "op": "ADD"
    },
    "2293": {
      "op": "MSTORE"
    },
    "2294": {
      "op": "PUSH32",
      "value": "0x526166666C653A20416C6C20726166666C6520736C6F7473206172652066696C"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2329": {
      "op": "DUP3"
    },
    "2330": {
      "op": "ADD"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH4",
      "value": "0x3632B217"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2342": {
      "op": "DUP3"
    },
    "2343": {
      "op": "ADD"
    },
    "2344": {
      "op": "MSTORE"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "2351": {
      "op": "JUMP"
    },
    "2352": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4447,
        4530
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2353": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4599,
        4620
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 14,
      "value": "0xD"
    },
    "2355": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4599,
        4620
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2356": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4599,
        4620
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "2358": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4599,
        4620
      ],
      "op": "AND",
      "path": "12"
    },
    "2359": {
      "branch": 104,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4599,
        4629
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2360": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9A9"
    },
    "2363": {
      "branch": 104,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2364": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2366": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2375": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2378": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2380": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2381": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "ADD",
      "path": "12"
    },
    "2382": {
      "op": "MSTORE"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2387": {
      "op": "DUP3"
    },
    "2388": {
      "op": "ADD"
    },
    "2389": {
      "op": "MSTORE"
    },
    "2390": {
      "op": "PUSH32",
      "value": "0x526166666C653A2043616E6E6F7420707572636861736520736C6F7420616674"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2425": {
      "op": "DUP3"
    },
    "2426": {
      "op": "ADD"
    },
    "2427": {
      "op": "MSTORE"
    },
    "2428": {
      "op": "PUSH32",
      "value": "0x65722077696E6E657220686173206265656E2063686F73656E2E000000000000"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2463": {
      "op": "DUP3"
    },
    "2464": {
      "op": "ADD"
    },
    "2465": {
      "op": "MSTORE"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2468": {
      "op": "ADD"
    },
    "2469": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "2472": {
      "op": "JUMP"
    },
    "2473": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4591,
        4692
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2474": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4825,
        4834
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 15,
      "value": "0x3"
    },
    "2476": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4825,
        4834
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2477": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4813,
        4834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9B6"
    },
    "2480": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4813,
        4834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2481": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4813,
        4822
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2482": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4813,
        4834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x231E"
    },
    "2485": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        4813,
        4834
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2486": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4813,
        4834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2487": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4800,
        4809
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2488": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4800,
        4834
      ],
      "op": "LT",
      "path": "12"
    },
    "2489": {
      "branch": 105,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4800,
        4834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2490": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4800,
        4850
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2491": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4800,
        4850
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9C4"
    },
    "2494": {
      "branch": 105,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4800,
        4850
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2495": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4800,
        4850
      ],
      "op": "POP",
      "path": "12"
    },
    "2496": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4838,
        4845
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2497": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4849,
        4850
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2499": {
      "branch": 106,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4838,
        4850
      ],
      "op": "EQ",
      "path": "12"
    },
    "2500": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4800,
        4850
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2501": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA2D"
    },
    "2504": {
      "branch": 106,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2505": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2507": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2514": {
      "op": "SHL"
    },
    "2515": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2516": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2519": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2521": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2522": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "ADD",
      "path": "12"
    },
    "2523": {
      "op": "MSTORE"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2528": {
      "op": "DUP3"
    },
    "2529": {
      "op": "ADD"
    },
    "2530": {
      "op": "MSTORE"
    },
    "2531": {
      "op": "PUSH32",
      "value": "0x526166666C653A20496E73756666696369656E74204554482070726F76696465"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2566": {
      "op": "DUP3"
    },
    "2567": {
      "op": "ADD"
    },
    "2568": {
      "op": "MSTORE"
    },
    "2569": {
      "op": "PUSH20",
      "value": "0x32103A3790383AB931B430B9B29039B637BA3997"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2592": {
      "op": "SHL"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2595": {
      "op": "DUP3"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "MSTORE"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2600": {
      "op": "ADD"
    },
    "2601": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "2604": {
      "op": "JUMP"
    },
    "2605": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        4792,
        4907
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2606": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5061,
        5071
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 16,
      "value": "0x7"
    },
    "2608": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5061,
        5071
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2609": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5034,
        5044
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2610": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2612": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2613": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5045
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2614": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5045
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2615": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5033
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "2617": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2619": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5045
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2620": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2622": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5045
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2623": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5045
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2624": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5058
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "2626": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5058
      ],
      "op": "ADD",
      "path": "12"
    },
    "2627": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5058
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2628": {
      "branch": 107,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5071
      ],
      "op": "LT",
      "path": "12"
    },
    "2629": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5144
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2630": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5144
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2631": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5144
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA79"
    },
    "2634": {
      "branch": 107,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5144
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2635": {
      "op": "POP"
    },
    "2636": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5109,
        5119
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2637": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5120
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2639": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5120
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2640": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5120
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2641": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5120
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2642": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5108
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "2644": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5120
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2646": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5120
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2647": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5120
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2649": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5120
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2650": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5120
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2651": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5136
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2653": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5136
      ],
      "op": "ADD",
      "path": "12"
    },
    "2654": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5136
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2655": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA6A"
    },
    "2658": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5139
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2659": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5137,
        5139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "2661": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5137,
        5139
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2662": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2353"
    },
    "2665": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5089,
        5139
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2666": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5139
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2667": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5143
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA75"
    },
    "2670": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5143
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2671": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5142,
        5143
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2673": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5143
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2367"
    },
    "2676": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5089,
        5143
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2677": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5089,
        5143
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2678": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5075,
        5084
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2679": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5075,
        5144
      ],
      "op": "GT",
      "path": "12"
    },
    "2680": {
      "branch": 108,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5075,
        5144
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2681": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5014,
        5144
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2682": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5013,
        5161
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2683": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5013,
        5161
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA82"
    },
    "2686": {
      "branch": 108,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5013,
        5161
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2687": {
      "op": "POP"
    },
    "2688": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5149,
        5161
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2689": {
      "branch": 109,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5149,
        5161
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2690": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5013,
        5161
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2691": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAE3"
    },
    "2694": {
      "branch": 109,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2695": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2697": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2704": {
      "op": "SHL"
    },
    "2705": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2706": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2709": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2711": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2712": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "ADD",
      "path": "12"
    },
    "2713": {
      "op": "MSTORE"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2718": {
      "op": "DUP3"
    },
    "2719": {
      "op": "ADD"
    },
    "2720": {
      "op": "MSTORE"
    },
    "2721": {
      "op": "PUSH32",
      "value": "0x526166666C653A2043616E6E6F7420696E6372656D656E7420736C6F74732069"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2756": {
      "op": "DUP3"
    },
    "2757": {
      "op": "ADD"
    },
    "2758": {
      "op": "MSTORE"
    },
    "2759": {
      "op": "PUSH12",
      "value": "0x1B881D1A1A5CC81C9BDD5B99"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "2774": {
      "op": "SHL"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2777": {
      "op": "DUP3"
    },
    "2778": {
      "op": "ADD"
    },
    "2779": {
      "op": "MSTORE"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2782": {
      "op": "ADD"
    },
    "2783": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "2786": {
      "op": "JUMP"
    },
    "2787": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5005,
        5210
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2788": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5343,
        5357
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 17,
      "value": "0xE"
    },
    "2790": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5343,
        5357
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2791": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5323,
        5340
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2793": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5323,
        5340
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2794": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5323,
        5357
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAF3"
    },
    "2797": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5323,
        5357
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2798": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5323,
        5357
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2799": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5323,
        5357
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237F"
    },
    "2802": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5323,
        5357
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2803": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5323,
        5357
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2804": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5310,
        5319
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2805": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5310,
        5357
      ],
      "op": "GT",
      "path": "12"
    },
    "2806": {
      "branch": 110,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5310,
        5357
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2807": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB59"
    },
    "2810": {
      "branch": 110,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2811": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2813": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2820": {
      "op": "SHL"
    },
    "2821": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2822": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2825": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2827": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2828": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "ADD",
      "path": "12"
    },
    "2829": {
      "op": "MSTORE"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2834": {
      "op": "DUP3"
    },
    "2835": {
      "op": "ADD"
    },
    "2836": {
      "op": "MSTORE"
    },
    "2837": {
      "op": "PUSH32",
      "value": "0x526166666C653A2052657175657374696E6720746F2070757263686173652074"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2872": {
      "op": "DUP3"
    },
    "2873": {
      "op": "ADD"
    },
    "2874": {
      "op": "MSTORE"
    },
    "2875": {
      "op": "PUSH14",
      "value": "0x37B79036B0B73C9039B637BA3997"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2895": {
      "op": "DUP3"
    },
    "2896": {
      "op": "ADD"
    },
    "2897": {
      "op": "MSTORE"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2900": {
      "op": "ADD"
    },
    "2901": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "2904": {
      "op": "JUMP"
    },
    "2905": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5302,
        5408
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2906": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5419,
        5430
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2908": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5500,
        5670
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2909": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5507,
        5519
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "2911": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5507,
        5526
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2912": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5507,
        5531
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2913": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5500,
        5670
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC0C"
    },
    "2916": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5500,
        5670
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2917": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5569
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 18,
      "value": "0x10"
    },
    "2919": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5570,
        5589
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2920": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5570,
        5589
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2921": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5598,
        5608
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2922": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5598,
        5608
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2923": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5556
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "2925": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5556
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2926": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5570,
        5593
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB79"
    },
    "2929": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5570,
        5593
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2930": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5592,
        5593
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2932": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5592,
        5593
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2933": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5570,
        5593
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237F"
    },
    "2936": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5570,
        5593
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2937": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5570,
        5593
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2938": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2939": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2940": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2941": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "LT",
      "path": "12"
    },
    "2942": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB89"
    },
    "2945": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2946": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB89"
    },
    "2949": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "2952": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5557,
        5594
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2953": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2954": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2955": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2957": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2958": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2960": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2962": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2963": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "ADD",
      "path": "12"
    },
    "2964": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5557,
        5594
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2965": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2966": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2967": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2968": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "LT",
      "path": "12"
    },
    "2969": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBA4"
    },
    "2972": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2973": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBA4"
    },
    "2976": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "2979": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5546,
        5595
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2980": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2981": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2982": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2984": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2985": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2987": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2989": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2990": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "ADD",
      "path": "12"
    },
    "2991": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5595
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2993": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "2996": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "EXP",
      "path": "12"
    },
    "2997": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2998": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2999": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3006": {
      "op": "SHL"
    },
    "3007": {
      "op": "SUB"
    },
    "3008": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "MUL",
      "path": "12"
    },
    "3009": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "NOT",
      "path": "12"
    },
    "3010": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "AND",
      "path": "12"
    },
    "3011": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3012": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3019": {
      "op": "SHL"
    },
    "3020": {
      "op": "SUB"
    },
    "3021": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "AND",
      "path": "12"
    },
    "3022": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "MUL",
      "path": "12"
    },
    "3023": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "OR",
      "path": "12"
    },
    "3024": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3025": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3026": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5546,
        5608
      ],
      "op": "POP",
      "path": "12"
    },
    "3027": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5634
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 19,
      "value": "0x10"
    },
    "3029": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3030": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3031": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3032": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBE3"
    },
    "3035": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3036": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBE3"
    },
    "3039": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23AC"
    },
    "3042": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5622,
        5640
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3043": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3044": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3046": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3047": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "SUB",
      "path": "12"
    },
    "3048": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3049": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3050": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3051": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3053": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3054": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3056": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3058": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3059": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "ADD",
      "path": "12"
    },
    "3060": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3062": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3063": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3064": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3065": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5622,
        5640
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3066": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5654,
        5659
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 20
    },
    "3067": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5654,
        5659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3068": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5654,
        5659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC04"
    },
    "3071": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5654,
        5659
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3072": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5654,
        5659
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23C2"
    },
    "3075": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5654,
        5659
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3076": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5654,
        5659
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3077": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5654,
        5659
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3078": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5654,
        5659
      ],
      "op": "POP",
      "path": "12"
    },
    "3079": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5654,
        5659
      ],
      "op": "POP",
      "path": "12"
    },
    "3080": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5500,
        5670
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB5C"
    },
    "3083": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5500,
        5670
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3084": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5500,
        5670
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3085": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5716,
        5725
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3086": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5710,
        5713
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3087": {
      "branch": 111,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5710,
        5725
      ],
      "op": "LT",
      "path": "12"
    },
    "3088": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5707,
        5942
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3089": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5707,
        5942
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC7E"
    },
    "3092": {
      "branch": 111,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5707,
        5942
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3093": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5779,
        5788
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3095": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5774,
        5932
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3096": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5798,
        5813
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC21"
    },
    "3099": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5810,
        5813
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3100": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5798,
        5807
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3101": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5798,
        5813
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237F"
    },
    "3104": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5798,
        5813
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3105": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5798,
        5813
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3106": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5794,
        5795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3107": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5794,
        5813
      ],
      "op": "LT",
      "path": "12"
    },
    "3108": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5774,
        5932
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3109": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5774,
        5932
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC7C"
    },
    "3112": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5774,
        5932
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3113": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5900
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 21,
      "value": "0xF"
    },
    "3115": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3116": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3117": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3119": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3120": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "ADD",
      "path": "12"
    },
    "3121": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3122": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3125": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3126": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3127": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3128": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3129": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802"
    },
    "3162": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "ADD",
      "path": "12"
    },
    "3163": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3164": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3171": {
      "op": "SHL"
    },
    "3172": {
      "op": "SUB"
    },
    "3173": {
      "op": "NOT"
    },
    "3174": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "AND",
      "path": "12"
    },
    "3175": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5906,
        5916
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3176": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "OR",
      "path": "12"
    },
    "3177": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3178": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5890,
        5917
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3179": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5815,
        5818
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 22
    },
    "3180": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5815,
        5818
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC74"
    },
    "3183": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5815,
        5818
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3184": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5815,
        5818
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23C2"
    },
    "3187": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        5815,
        5818
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3188": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5815,
        5818
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3189": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5815,
        5818
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3190": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5815,
        5818
      ],
      "op": "POP",
      "path": "12"
    },
    "3191": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5815,
        5818
      ],
      "op": "POP",
      "path": "12"
    },
    "3192": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5774,
        5932
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC17"
    },
    "3195": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5774,
        5932
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3196": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5774,
        5932
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3197": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5774,
        5932
      ],
      "op": "POP",
      "path": "12"
    },
    "3198": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5707,
        5942
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3199": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6020,
        6029
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 23
    },
    "3200": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6003,
        6017
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "3202": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6003,
        6017
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3203": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6003,
        6029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC8C"
    },
    "3206": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6003,
        6029
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3207": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6003,
        6029
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3208": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6003,
        6029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2367"
    },
    "3211": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        6003,
        6029
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3212": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6003,
        6029
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3213": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5986,
        6000
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "3215": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        5986,
        6029
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3216": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6103,
        6113
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 24
    },
    "3217": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3219": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3220": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3221": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3222": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "3224": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3226": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3227": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3229": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3230": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3231": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6137
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3232": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6137
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3233": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6128,
        6137
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3234": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6128,
        6137
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3235": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6114
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3236": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6137
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCAE"
    },
    "3239": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6137
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3240": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6128,
        6137
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3241": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6128,
        6137
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3242": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6137
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2367"
    },
    "3245": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        6083,
        6137
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3246": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6137
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3247": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6137
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3248": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6137
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3249": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6083,
        6137
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3250": {
      "op": "POP"
    },
    "3251": {
      "op": "POP"
    },
    "3252": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6194,
        6204
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 25,
      "value": "0x7"
    },
    "3254": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6194,
        6204
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3255": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6167,
        6177
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3256": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6178
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3258": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6178
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3259": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6178
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3260": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6178
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3261": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6166
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "3263": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6178
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3265": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6178
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3266": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6178
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3268": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6178
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3269": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6178
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3270": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6191
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "3272": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6191
      ],
      "op": "ADD",
      "path": "12"
    },
    "3273": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6147,
        6204
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3274": {
      "branch": 112,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6277,
        6289
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3275": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6274,
        6375
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCF6"
    },
    "3278": {
      "branch": 112,
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6274,
        6375
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3279": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6324,
        6334
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 26
    },
    "3280": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3282": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3283": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3284": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3285": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6323
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "3287": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3289": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3290": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3292": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3293": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "3294": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6351
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3296": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6351
      ],
      "op": "ADD",
      "path": "12"
    },
    "3297": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6364
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3298": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6364
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3299": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6355,
        6364
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3300": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6355,
        6364
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3301": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6335
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3302": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6364
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCF0"
    },
    "3305": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6364
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3306": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6355,
        6364
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3307": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6355,
        6364
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3308": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6364
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2367"
    },
    "3311": {
      "fn": "Raffle.purchaseSlot",
      "jump": "i",
      "offset": [
        6304,
        6364
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3312": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6364
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3313": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6364
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3314": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6364
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3315": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6304,
        6364
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3316": {
      "op": "POP"
    },
    "3317": {
      "op": "POP"
    },
    "3318": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6274,
        6375
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3319": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 27,
      "value": "0x40"
    },
    "3321": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3322": {
      "op": "DUP4"
    },
    "3323": {
      "op": "DUP2"
    },
    "3324": {
      "op": "MSTORE"
    },
    "3325": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6430,
        6440
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3326": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6430,
        6440
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3327": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x86E01953521E8CA90CF9568CE180D715096931EF1C18C1343B19C53E5C6E6361"
    },
    "3360": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3363": {
      "op": "ADD"
    },
    "3364": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3366": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3367": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3368": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3369": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "SUB",
      "path": "12"
    },
    "3370": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3371": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        6417,
        6452
      ],
      "op": "LOG2",
      "path": "12"
    },
    "3372": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3922,
        6459
      ],
      "op": "POP",
      "path": "12"
    },
    "3373": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "POP",
      "path": "12"
    },
    "3374": {
      "fn": "Raffle.purchaseSlot",
      "offset": [
        3832,
        6459
      ],
      "op": "POP",
      "path": "12"
    },
    "3375": {
      "fn": "Raffle.purchaseSlot",
      "jump": "o",
      "offset": [
        3832,
        6459
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3376": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3377": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11756,
        11767
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 28,
      "value": "0x5"
    },
    "3379": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11756,
        11767
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3380": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11677,
        11683
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3382": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11677,
        11683
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "op": "SUB"
    },
    "3391": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11748,
        11767
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3392": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11748,
        11767
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3393": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11748,
        11767
      ],
      "op": "AND",
      "path": "12"
    },
    "3394": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11756,
        11767
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3395": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11756,
        11767
      ],
      "op": "AND",
      "path": "12"
    },
    "3396": {
      "branch": 113,
      "fn": "Raffle.onERC721Received",
      "offset": [
        11748,
        11767
      ],
      "op": "EQ",
      "path": "12"
    },
    "3397": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDAD"
    },
    "3400": {
      "branch": 113,
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3401": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3403": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3410": {
      "op": "SHL"
    },
    "3411": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3412": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3415": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3417": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3418": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "ADD",
      "path": "12"
    },
    "3419": {
      "op": "MSTORE"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3424": {
      "op": "DUP3"
    },
    "3425": {
      "op": "ADD"
    },
    "3426": {
      "op": "MSTORE"
    },
    "3427": {
      "op": "PUSH32",
      "value": "0x526166666C653A20526166666C65206E6F7420696E6974696174656420776974"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3462": {
      "op": "DUP3"
    },
    "3463": {
      "op": "ADD"
    },
    "3464": {
      "op": "MSTORE"
    },
    "3465": {
      "op": "PUSH20",
      "value": "0x34103A3434B99027232A1031B7B73A3930B1BA17"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3488": {
      "op": "SHL"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3491": {
      "op": "DUP3"
    },
    "3492": {
      "op": "ADD"
    },
    "3493": {
      "op": "MSTORE"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3496": {
      "op": "ADD"
    },
    "3497": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "3500": {
      "op": "JUMP"
    },
    "3501": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11740,
        11824
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3502": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11842,
        11854
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 29,
      "value": "0x8"
    },
    "3504": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11842,
        11854
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3507": {
      "op": "NOT"
    },
    "3508": {
      "branch": 114,
      "fn": "Raffle.onERC721Received",
      "offset": [
        11842,
        11860
      ],
      "op": "EQ",
      "path": "12"
    },
    "3509": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11842,
        11881
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3510": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11842,
        11881
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3511": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11842,
        11881
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC3"
    },
    "3514": {
      "branch": 114,
      "fn": "Raffle.onERC721Received",
      "offset": [
        11842,
        11881
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3515": {
      "op": "POP"
    },
    "3516": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11864,
        11872
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x12"
    },
    "3518": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11864,
        11872
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3519": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11864,
        11872
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "3521": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11864,
        11872
      ],
      "op": "AND",
      "path": "12"
    },
    "3522": {
      "branch": 115,
      "fn": "Raffle.onERC721Received",
      "offset": [
        11864,
        11881
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3523": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11842,
        11881
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3524": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE0F"
    },
    "3527": {
      "branch": 115,
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3528": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3530": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3537": {
      "op": "SHL"
    },
    "3538": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3539": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3542": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3544": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3545": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "ADD",
      "path": "12"
    },
    "3546": {
      "op": "DUP2"
    },
    "3547": {
      "op": "SWAP1"
    },
    "3548": {
      "op": "MSTORE"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3551": {
      "op": "DUP3"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "MSTORE"
    },
    "3554": {
      "op": "PUSH32",
      "value": "0x43616E6E6F742072656365697665204E46542061742074686973207068617365"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3589": {
      "op": "DUP3"
    },
    "3590": {
      "op": "ADD"
    },
    "3591": {
      "op": "MSTORE"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3594": {
      "op": "ADD"
    },
    "3595": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "3598": {
      "op": "JUMP"
    },
    "3599": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11834,
        11918
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3600": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11937,
        11942
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 30,
      "value": "0xB"
    },
    "3602": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11937,
        11952
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3603": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11937,
        11952
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3604": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11937,
        11952
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3605": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11978,
        11979
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 31,
      "value": "0x0"
    },
    "3607": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11963,
        11975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "3609": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11963,
        11979
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3610": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11963,
        11979
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3611": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11963,
        11979
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3612": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        11999
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 32,
      "value": "0x7"
    },
    "3614": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3615": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3616": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3617": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE29"
    },
    "3620": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3621": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23C2"
    },
    "3624": {
      "fn": "Raffle.onERC721Received",
      "jump": "i",
      "offset": [
        11989,
        12001
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3625": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3626": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3627": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3628": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11989,
        12001
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3629": {
      "op": "POP"
    },
    "3630": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12023,
        12047
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 33,
      "value": "0xE3C"
    },
    "3633": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12023,
        12047
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3634": {
      "op": "POP"
    },
    "3635": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12023,
        12038
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "3636": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12041,
        12047
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0x93A80"
    },
    "3640": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12023,
        12047
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2367"
    },
    "3643": {
      "fn": "Raffle.onERC721Received",
      "jump": "i",
      "offset": [
        12023,
        12047
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3644": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12023,
        12047
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3645": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12011,
        12020
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "3647": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12011,
        12047
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12098,
        12106
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 34,
      "value": "0x12"
    },
    "3651": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12098,
        12113
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3652": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12098,
        12113
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3655": {
      "op": "NOT"
    },
    "3656": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12098,
        12113
      ],
      "op": "AND",
      "path": "12"
    },
    "3657": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12109,
        12113
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3659": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12098,
        12113
      ],
      "op": "OR",
      "path": "12"
    },
    "3660": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12098,
        12113
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3661": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        12098,
        12113
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "3662": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "3671": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "3672": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "POP",
      "path": "12"
    },
    "3673": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "POP",
      "path": "12"
    },
    "3674": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "POP",
      "path": "12"
    },
    "3675": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "POP",
      "path": "12"
    },
    "3676": {
      "fn": "Raffle.onERC721Received",
      "offset": [
        11507,
        12222
      ],
      "op": "POP",
      "path": "12"
    },
    "3677": {
      "fn": "Raffle.onERC721Received",
      "jump": "o",
      "offset": [
        11507,
        12222
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3678": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9276,
        10491
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3679": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9380,
        9388
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 35,
      "value": "0x12"
    },
    "3681": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9380,
        9388
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3682": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9380,
        9388
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "3684": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9380,
        9388
      ],
      "op": "AND",
      "path": "12"
    },
    "3685": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9380,
        9396
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3686": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9380,
        9396
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3687": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9380,
        9388
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3689": {
      "branch": 116,
      "fn": "Raffle.disburseWinner",
      "offset": [
        9380,
        9396
      ],
      "op": "EQ",
      "path": "12"
    },
    "3690": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEDB"
    },
    "3693": {
      "branch": 116,
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3694": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3696": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3697": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3703": {
      "op": "SHL"
    },
    "3704": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3705": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3708": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3710": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3711": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "ADD",
      "path": "12"
    },
    "3712": {
      "op": "MSTORE"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3717": {
      "op": "DUP3"
    },
    "3718": {
      "op": "ADD"
    },
    "3719": {
      "op": "MSTORE"
    },
    "3720": {
      "op": "PUSH32",
      "value": "0x526166666C653A2043616E6E6F74206469737572627365204E465420746F2077"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3755": {
      "op": "DUP3"
    },
    "3756": {
      "op": "ADD"
    },
    "3757": {
      "op": "MSTORE"
    },
    "3758": {
      "op": "PUSH32",
      "value": "0x696E6E657220776974686F757420686F6C64696E67204E46542E000000000000"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3793": {
      "op": "DUP3"
    },
    "3794": {
      "op": "ADD"
    },
    "3795": {
      "op": "MSTORE"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3798": {
      "op": "ADD"
    },
    "3799": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "3802": {
      "op": "JUMP"
    },
    "3803": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9372,
        9459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3804": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9537,
        9558
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 36,
      "value": "0xD"
    },
    "3806": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9537,
        9558
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3807": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9537,
        9558
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "3809": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9537,
        9558
      ],
      "op": "AND",
      "path": "12"
    },
    "3810": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9537,
        9566
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3811": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9537,
        9566
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3812": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9537,
        9558
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3814": {
      "branch": 117,
      "fn": "Raffle.disburseWinner",
      "offset": [
        9537,
        9566
      ],
      "op": "EQ",
      "path": "12"
    },
    "3815": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF58"
    },
    "3818": {
      "branch": 117,
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3819": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3821": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3828": {
      "op": "SHL"
    },
    "3829": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3830": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3833": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3835": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3836": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "ADD",
      "path": "12"
    },
    "3837": {
      "op": "MSTORE"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3842": {
      "op": "DUP3"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "MSTORE"
    },
    "3845": {
      "op": "PUSH32",
      "value": "0x526166666C653A2043616E6E6F7420646973627572736520746F2077696E6E65"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3880": {
      "op": "DUP3"
    },
    "3881": {
      "op": "ADD"
    },
    "3882": {
      "op": "MSTORE"
    },
    "3883": {
      "op": "PUSH32",
      "value": "0x7220776974686F757420686176696E6720636F6C6C6563746564206F6E652E00"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3918": {
      "op": "DUP3"
    },
    "3919": {
      "op": "ADD"
    },
    "3920": {
      "op": "MSTORE"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3923": {
      "op": "ADD"
    },
    "3924": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "3927": {
      "op": "JUMP"
    },
    "3928": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9529,
        9634
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3929": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9703,
        9715
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 37,
      "value": "0xC"
    },
    "3931": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9703,
        9715
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3932": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFD7"
    },
    "3935": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3936": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3938": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3945": {
      "op": "SHL"
    },
    "3946": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3947": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3950": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3952": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3953": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "ADD",
      "path": "12"
    },
    "3954": {
      "op": "MSTORE"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3959": {
      "op": "DUP3"
    },
    "3960": {
      "op": "ADD"
    },
    "3961": {
      "op": "MSTORE"
    },
    "3962": {
      "op": "PUSH32",
      "value": "0x526166666C653A20506C65617365207761697420666F7220436861696E6C696E"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3997": {
      "op": "DUP3"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "MSTORE"
    },
    "4000": {
      "op": "PUSH32",
      "value": "0x6B2056524620746F20757064617465207468652077696E6E6572206669727374"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4035": {
      "op": "DUP3"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "op": "MSTORE"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4045": {
      "op": "DUP3"
    },
    "4046": {
      "op": "ADD"
    },
    "4047": {
      "op": "MSTORE"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "4054": {
      "op": "JUMP"
    },
    "4055": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9695,
        9790
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4056": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9824,
        9836
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xC"
    },
    "4058": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9824,
        9836
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4059": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9801,
        9821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4061": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9871,
        10117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4062": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9909
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "4064": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9925,
        9942
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4065": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9925,
        9942
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4066": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9955,
        9956
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4068": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9955,
        9956
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4069": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9909
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4070": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9910,
        9942
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFEF"
    },
    "4073": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9910,
        9942
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4074": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9910,
        9922
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4075": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9910,
        9942
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23DD"
    },
    "4078": {
      "fn": "Raffle.disburseWinner",
      "jump": "i",
      "offset": [
        9910,
        9942
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4079": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9910,
        9942
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4080": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4081": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4082": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4083": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "LT",
      "path": "12"
    },
    "4084": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFF"
    },
    "4087": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4088": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFFF"
    },
    "4091": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "4094": {
      "fn": "Raffle.disburseWinner",
      "jump": "i",
      "offset": [
        9899,
        9943
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4095": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4096": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4098": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4099": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4100": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4101": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4103": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4104": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4105": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4106": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "ADD",
      "path": "12"
    },
    "4107": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4114": {
      "op": "SHL"
    },
    "4115": {
      "op": "SUB"
    },
    "4116": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9943
      ],
      "op": "AND",
      "path": "12"
    },
    "4117": {
      "branch": 118,
      "fn": "Raffle.disburseWinner",
      "offset": [
        9899,
        9957
      ],
      "op": "EQ",
      "path": "12"
    },
    "4118": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9896,
        10067
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1053"
    },
    "4121": {
      "branch": 118,
      "fn": "Raffle.disburseWinner",
      "offset": [
        9896,
        10067
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4122": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        9995
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 38,
      "value": "0xF"
    },
    "4124": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10011,
        10028
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4125": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10011,
        10028
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4126": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9996,
        10028
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1027"
    },
    "4129": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9996,
        10028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4130": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9996,
        10008
      ],
      "op": "DUP5",
      "path": "12"
    },
    "4131": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9996,
        10028
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23DD"
    },
    "4134": {
      "fn": "Raffle.disburseWinner",
      "jump": "i",
      "offset": [
        9996,
        10028
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4135": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9996,
        10028
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4136": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4137": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4138": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4139": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "LT",
      "path": "12"
    },
    "4140": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1037"
    },
    "4143": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4144": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1037"
    },
    "4147": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "4150": {
      "fn": "Raffle.disburseWinner",
      "jump": "i",
      "offset": [
        9985,
        10029
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4151": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4152": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4154": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4155": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4156": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4157": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4159": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4160": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4161": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4162": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "ADD",
      "path": "12"
    },
    "4163": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4170": {
      "op": "SHL"
    },
    "4171": {
      "op": "SUB"
    },
    "4172": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "AND",
      "path": "12"
    },
    "4173": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9985,
        10029
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4174": {
      "op": "POP"
    },
    "4175": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10047,
        10052
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 39,
      "value": "0x1065"
    },
    "4178": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10047,
        10052
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4179": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9896,
        10067
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4180": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10081,
        10098
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 40,
      "value": "0x105E"
    },
    "4183": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10097,
        10098
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "4185": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10081,
        10098
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4186": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10081,
        10098
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2367"
    },
    "4189": {
      "fn": "Raffle.disburseWinner",
      "jump": "i",
      "offset": [
        10081,
        10098
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4190": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10081,
        10098
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4191": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10081,
        10098
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4192": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10081,
        10098
      ],
      "op": "POP",
      "path": "12"
    },
    "4193": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9871,
        10117
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFDD"
    },
    "4196": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9871,
        10117
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4197": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9871,
        10117
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4198": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10169,
        10180
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 41,
      "value": "0x5"
    },
    "4200": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10169,
        10180
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4201": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10222,
        10227
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "4203": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10222,
        10227
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4204": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4206": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4207": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4214": {
      "op": "SHL"
    },
    "4215": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4216": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4217": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10207,
        10211
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "4218": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4220": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4221": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "ADD",
      "path": "12"
    },
    "4222": {
      "op": "MSTORE"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4229": {
      "op": "SHL"
    },
    "4230": {
      "op": "SUB"
    },
    "4231": {
      "op": "DUP5"
    },
    "4232": {
      "op": "DUP2"
    },
    "4233": {
      "op": "AND"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4236": {
      "op": "DUP4"
    },
    "4237": {
      "op": "ADD"
    },
    "4238": {
      "op": "MSTORE"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4241": {
      "op": "DUP3"
    },
    "4242": {
      "op": "ADD"
    },
    "4243": {
      "op": "SWAP3"
    },
    "4244": {
      "op": "SWAP1"
    },
    "4245": {
      "op": "SWAP3"
    },
    "4246": {
      "op": "MSTORE"
    },
    "4247": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10169,
        10180
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4248": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10169,
        10180
      ],
      "op": "AND",
      "path": "12"
    },
    "4249": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10169,
        10180
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4250": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10198
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x42842E0E"
    },
    "4255": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10198
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4258": {
      "op": "ADD"
    },
    "4259": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4261": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4263": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4264": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4265": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4266": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "SUB",
      "path": "12"
    },
    "4267": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4268": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4270": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4271": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4272": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4273": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4274": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4275": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4276": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10BC"
    },
    "4279": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4280": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4282": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4283": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4284": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4285": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "POP",
      "path": "12"
    },
    "4286": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "GAS",
      "path": "12"
    },
    "4287": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "CALL",
      "path": "12"
    },
    "4288": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4289": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4290": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4291": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10D0"
    },
    "4294": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4295": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4296": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4298": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4299": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4300": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4301": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4303": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4304": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10161,
        10228
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4305": {
      "op": "POP"
    },
    "4306": {
      "op": "POP"
    },
    "4307": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10266,
        10274
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 42,
      "value": "0x12"
    },
    "4309": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10266,
        10282
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4310": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10266,
        10282
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4313": {
      "op": "NOT"
    },
    "4314": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10266,
        10282
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4315": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10266,
        10282
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4316": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10266,
        10282
      ],
      "op": "AND",
      "path": "12"
    },
    "4317": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10266,
        10282
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4318": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10266,
        10282
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4319": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10266,
        10282
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4320": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10341,
        10362
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 43,
      "value": "0xD"
    },
    "4322": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10341,
        10370
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4323": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10341,
        10370
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4324": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10341,
        10370
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4325": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10341,
        10370
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4326": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10341,
        10370
      ],
      "op": "AND",
      "path": "12"
    },
    "4327": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10341,
        10370
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4328": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10341,
        10370
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4329": {
      "op": "POP"
    },
    "4330": {
      "op": "POP"
    },
    "4331": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10277,
        10282
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4333": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10405,
        10417
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 44,
      "value": "0xC"
    },
    "4335": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10405,
        10421
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4336": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10405,
        10421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4337": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10405,
        10421
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4338": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10467,
        10484
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 45,
      "value": "0x40"
    },
    "4340": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10467,
        10484
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4347": {
      "op": "SHL"
    },
    "4348": {
      "op": "SUB"
    },
    "4349": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10467,
        10484
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4350": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10467,
        10484
      ],
      "op": "AND",
      "path": "12"
    },
    "4351": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10467,
        10484
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4352": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10467,
        10484
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xA2564FBE9F8E6077ADCF46DFE7C571EAE3B5A67375D138E992F66E4DB4F97526"
    },
    "4385": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10467,
        10484
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4386": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        10467,
        10484
      ],
      "op": "LOG2",
      "path": "12"
    },
    "4387": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9311,
        10491
      ],
      "op": "POP",
      "path": "12"
    },
    "4388": {
      "fn": "Raffle.disburseWinner",
      "offset": [
        9311,
        10491
      ],
      "op": "POP",
      "path": "12"
    },
    "4389": {
      "fn": "Raffle.disburseWinner",
      "jump": "o",
      "offset": [
        9276,
        10491
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4390": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4391": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4393": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4394": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4395": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4396": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4398": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4399": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4400": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4401": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4403": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4404": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4405": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4407": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "ADD",
      "path": "0"
    },
    "4408": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4409": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1142"
    },
    "4412": {
      "offset": [
        2441,
        2445
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4413": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4414": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A20"
    },
    "4417": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4418": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4419": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4401,
        4426
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 46,
      "value": "0x114C"
    },
    "4422": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4412,
        4416
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4423": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4418,
        4425
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4424": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4401,
        4411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C05"
    },
    "4427": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4401,
        4426
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4428": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4401,
        4426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4429": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "4430": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "4431": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4288,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "4432": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4288,
        4433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4433": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4434": {
      "offset": [
        1997,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4436": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115D"
    },
    "4439": {
      "offset": [
        1997,
        2001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4440": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4441": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A20"
    },
    "4444": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4445": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4446": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10698,
        10710
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 47,
      "value": "0x8"
    },
    "4448": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10698,
        10710
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4449": {
      "branch": 119,
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10698,
        10715
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4450": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11BB"
    },
    "4453": {
      "branch": 119,
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4454": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4456": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4457": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4463": {
      "op": "SHL"
    },
    "4464": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4465": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4468": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4470": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4471": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "ADD",
      "path": "12"
    },
    "4472": {
      "op": "MSTORE"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4477": {
      "op": "DUP3"
    },
    "4478": {
      "op": "ADD"
    },
    "4479": {
      "op": "MSTORE"
    },
    "4480": {
      "op": "PUSH32",
      "value": "0x43616E206F6E6C792063616C6C207468697320616674657220726166666C6520"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "MSTORE"
    },
    "4518": {
      "op": "PUSH5",
      "value": "0x1C9BDD5B99"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "4526": {
      "op": "SHL"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4529": {
      "op": "DUP3"
    },
    "4530": {
      "op": "ADD"
    },
    "4531": {
      "op": "MSTORE"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4534": {
      "op": "ADD"
    },
    "4535": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "4538": {
      "op": "JUMP"
    },
    "4539": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10690,
        10757
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4540": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10787,
        10802
      ],
      "op": "TIMESTAMP",
      "path": "12",
      "statement": 48
    },
    "4541": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10775,
        10784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "4543": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10775,
        10784
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4544": {
      "branch": 120,
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10775,
        10802
      ],
      "op": "GT",
      "path": "12"
    },
    "4545": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1216"
    },
    "4548": {
      "branch": 120,
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4549": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4551": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4558": {
      "op": "SHL"
    },
    "4559": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4560": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4563": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4565": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4566": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "ADD",
      "path": "12"
    },
    "4567": {
      "op": "MSTORE"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4572": {
      "op": "DUP3"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "MSTORE"
    },
    "4575": {
      "op": "PUSH32",
      "value": "0x436F6E7472616374206973207374696C6C20696E20726166666C6520726F756E"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "ADD"
    },
    "4612": {
      "op": "MSTORE"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "4617": {
      "op": "SHL"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4620": {
      "op": "DUP3"
    },
    "4621": {
      "op": "ADD"
    },
    "4622": {
      "op": "MSTORE"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4625": {
      "op": "ADD"
    },
    "4626": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "4629": {
      "op": "JUMP"
    },
    "4630": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10767,
        10840
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4631": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10874,
        10875
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 49,
      "value": "0x1"
    },
    "4633": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10859,
        10871
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "4635": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10859,
        10875
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4636": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10897,
        10922
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 50,
      "value": "0x1228"
    },
    "4639": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10897,
        10912
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "4640": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10915,
        10922
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0x278D00"
    },
    "4644": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10897,
        10922
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2367"
    },
    "4647": {
      "fn": "Raffle.enterLockPeriod",
      "jump": "i",
      "offset": [
        10897,
        10922
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4648": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10897,
        10922
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4649": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10885,
        10894
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "4651": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10885,
        10922
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4652": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10932,
        10940
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 51,
      "value": "0x1233"
    },
    "4655": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10932,
        10938
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C89"
    },
    "4658": {
      "fn": "Raffle.enterLockPeriod",
      "jump": "i",
      "offset": [
        10932,
        10940
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4659": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10932,
        10940
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4660": {
      "fn": "Raffle.enterLockPeriod",
      "offset": [
        10615,
        10947
      ],
      "op": "POP",
      "path": "12"
    },
    "4661": {
      "fn": "Raffle.enterLockPeriod",
      "jump": "o",
      "offset": [
        10615,
        10947
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4662": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4669": {
      "op": "SHL"
    },
    "4670": {
      "op": "SUB"
    },
    "4671": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5400,
        5423
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 52
    },
    "4672": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5400,
        5423
      ],
      "op": "AND",
      "path": "0"
    },
    "4673": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4674": {
      "branch": 133,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5400,
        5423
      ],
      "op": "EQ",
      "path": "0"
    },
    "4675": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A6"
    },
    "4678": {
      "branch": 133,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4679": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4681": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4688": {
      "op": "SHL"
    },
    "4689": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4690": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4693": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4695": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4696": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "ADD",
      "path": "0"
    },
    "4697": {
      "op": "MSTORE"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4702": {
      "op": "DUP3"
    },
    "4703": {
      "op": "ADD"
    },
    "4704": {
      "op": "MSTORE"
    },
    "4705": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4740": {
      "op": "DUP3"
    },
    "4741": {
      "op": "ADD"
    },
    "4742": {
      "op": "MSTORE"
    },
    "4743": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4761": {
      "op": "SHL"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4764": {
      "op": "DUP3"
    },
    "4765": {
      "op": "ADD"
    },
    "4766": {
      "op": "MSTORE"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4769": {
      "op": "ADD"
    },
    "4770": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x713"
    },
    "4773": {
      "op": "JUMP"
    },
    "4774": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5392,
        5475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4775": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5486,
        5512
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 53,
      "value": "0x12B0"
    },
    "4778": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5498,
        5502
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4779": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5504,
        5511
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4780": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5486,
        5497
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE1"
    },
    "4783": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5486,
        5512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4784": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5486,
        5512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4785": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "POP",
      "path": "0"
    },
    "4786": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5305,
        5519
      ],
      "op": "POP",
      "path": "0"
    },
    "4787": {
      "fn": "AccessControl.renounceRole",
      "jump": "o",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4788": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        8993,
        9193
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4789": {
      "offset": [
        1997,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4791": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C0"
    },
    "4794": {
      "offset": [
        1997,
        2001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4795": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4796": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A20"
    },
    "4799": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4800": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4801": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9077,
        9078
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 54,
      "value": "0x1"
    },
    "4803": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9065,
        9074
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "4805": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9065,
        9078
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4806": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9097,
        9108
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 55,
      "value": "0x5"
    },
    "4808": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9097,
        9108
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4809": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9154,
        9159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "4811": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9154,
        9159
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4812": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4814": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4815": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4822": {
      "op": "SHL"
    },
    "4823": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4824": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4825": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9135,
        9139
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "4826": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4828": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4829": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "ADD",
      "path": "12"
    },
    "4830": {
      "op": "MSTORE"
    },
    "4831": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9142,
        9152
      ],
      "op": "CALLER",
      "path": "12"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4834": {
      "op": "DUP3"
    },
    "4835": {
      "op": "ADD"
    },
    "4836": {
      "op": "MSTORE"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4839": {
      "op": "DUP2"
    },
    "4840": {
      "op": "ADD"
    },
    "4841": {
      "op": "SWAP2"
    },
    "4842": {
      "op": "SWAP1"
    },
    "4843": {
      "op": "SWAP2"
    },
    "4844": {
      "op": "MSTORE"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4851": {
      "op": "SHL"
    },
    "4852": {
      "op": "SUB"
    },
    "4853": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9097,
        9108
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4854": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9097,
        9108
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4855": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9097,
        9108
      ],
      "op": "AND",
      "path": "12"
    },
    "4856": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9097,
        9108
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4857": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9126
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x42842E0E"
    },
    "4862": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9126
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4865": {
      "op": "ADD"
    },
    "4866": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4868": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4870": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4871": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4872": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4873": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "SUB",
      "path": "12"
    },
    "4874": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4875": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4877": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4878": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4879": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4880": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4881": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4882": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4883": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x131B"
    },
    "4886": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4887": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4889": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4890": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4891": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4892": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "POP",
      "path": "12"
    },
    "4893": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "GAS",
      "path": "12"
    },
    "4894": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "CALL",
      "path": "12"
    },
    "4895": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4896": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4897": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4898": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x132F"
    },
    "4901": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4902": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4903": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4905": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4906": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "4907": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4908": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4910": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "REVERT",
      "path": "12"
    },
    "4911": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9089,
        9160
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4912": {
      "op": "POP"
    },
    "4913": {
      "op": "POP"
    },
    "4914": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9170,
        9178
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 56,
      "value": "0x12"
    },
    "4916": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9170,
        9186
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4917": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9170,
        9186
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4920": {
      "op": "NOT"
    },
    "4921": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9170,
        9186
      ],
      "op": "AND",
      "path": "12"
    },
    "4922": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9170,
        9186
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4923": {
      "fn": "Raffle.stopTheRaffle",
      "offset": [
        9170,
        9186
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "4924": {
      "op": "POP"
    },
    "4925": {
      "op": "POP"
    },
    "4926": {
      "op": "POP"
    },
    "4927": {
      "fn": "Raffle.stopTheRaffle",
      "jump": "o",
      "offset": [
        8993,
        9193
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4928": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4929": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2912,
        2916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4931": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 57
    },
    "4932": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4933": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4934": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4936": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4937": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4938": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4939": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4941": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4942": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4943": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2947
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4950": {
      "op": "SHL"
    },
    "4951": {
      "op": "SUB"
    },
    "4952": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4953": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4954": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4955": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "AND",
      "path": "0"
    },
    "4956": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4957": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4958": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4959": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4960": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4961": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4962": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4963": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4964": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4966": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "AND",
      "path": "0"
    },
    "4967": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2935,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4968": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        2834,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4969": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4970": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13248,
        13265
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "4972": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13283,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 58,
      "value": "0xF"
    },
    "4974": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4975": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4976": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4977": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4979": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "MUL",
      "path": "12"
    },
    "4980": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4982": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "ADD",
      "path": "12"
    },
    "4983": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4985": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4986": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4987": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4988": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "ADD",
      "path": "12"
    },
    "4989": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4991": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4992": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4993": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4994": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4995": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4996": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4997": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4998": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4999": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5001": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "ADD",
      "path": "12"
    },
    "5002": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5003": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5004": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5005": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5006": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5007": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13C1"
    },
    "5010": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5011": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5013": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "MUL",
      "path": "12"
    },
    "5014": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5015": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "ADD",
      "path": "12"
    },
    "5016": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5017": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5018": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5020": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5021": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5023": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5025": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5026": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5027": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5028": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5029": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5036": {
      "op": "SHL"
    },
    "5037": {
      "op": "SUB"
    },
    "5038": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "AND",
      "path": "12"
    },
    "5039": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5040": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5041": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5043": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5044": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5045": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "ADD",
      "path": "12"
    },
    "5046": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5047": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5049": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "ADD",
      "path": "12"
    },
    "5050": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5051": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5052": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "GT",
      "path": "12"
    },
    "5053": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13A3"
    },
    "5056": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5057": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5058": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "POP",
      "path": "12"
    },
    "5059": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "POP",
      "path": "12"
    },
    "5060": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "POP",
      "path": "12"
    },
    "5061": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "POP",
      "path": "12"
    },
    "5062": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "POP",
      "path": "12"
    },
    "5063": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5064": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13276,
        13293
      ],
      "op": "POP",
      "path": "12"
    },
    "5065": {
      "fn": "Raffle.getSlotOwners",
      "offset": [
        13204,
        13300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5066": {
      "fn": "Raffle.getSlotOwners",
      "jump": "o",
      "offset": [
        13204,
        13300
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5067": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5068": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9759
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 59
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5075": {
      "op": "SHL"
    },
    "5076": {
      "op": "SUB"
    },
    "5077": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9763,
        9777
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x0"
    },
    "5110": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "AND",
      "path": "9"
    },
    "5111": {
      "branch": 137,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "EQ",
      "path": "9"
    },
    "5112": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1443"
    },
    "5115": {
      "branch": 137,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5116": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5118": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5125": {
      "op": "SHL"
    },
    "5126": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5127": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5130": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5132": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5133": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "ADD",
      "path": "9"
    },
    "5134": {
      "op": "MSTORE"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5139": {
      "op": "DUP3"
    },
    "5140": {
      "op": "ADD"
    },
    "5141": {
      "op": "MSTORE"
    },
    "5142": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5177": {
      "op": "DUP3"
    },
    "5178": {
      "op": "ADD"
    },
    "5179": {
      "op": "MSTORE"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5182": {
      "op": "ADD"
    },
    "5183": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x713"
    },
    "5186": {
      "op": "JUMP"
    },
    "5187": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5188": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        12657,
        12669
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 60,
      "value": "0xC"
    },
    "5190": {
      "fn": "Raffle.fulfillRandomness",
      "offset": [
        12657,
        12682
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5191": {
      "op": "POP"
    },
    "5192": {
      "fn": "AccessControl.renounceRole",
      "jump": "o",
      "offset": [
        5305,
        5519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5193": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5194": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5196": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5197": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5199": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "2"
    },
    "5200": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5201": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x146C"
    },
    "5204": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5205": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5207": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5214": {
      "op": "SHL"
    },
    "5215": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5216": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5217": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5219": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "2"
    },
    "5220": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x713"
    },
    "5223": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5224": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2291"
    },
    "5227": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5228": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5229": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6796,
        6808
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 61,
      "value": "0x8"
    },
    "5231": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6796,
        6808
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5232": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6796,
        6813
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5233": {
      "branch": 121,
      "fn": "Raffle.refundSlot",
      "offset": [
        6796,
        6813
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5234": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6796,
        6831
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x147D"
    },
    "5237": {
      "branch": 121,
      "fn": "Raffle.refundSlot",
      "offset": [
        6796,
        6831
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5238": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6796,
        6831
      ],
      "op": "POP",
      "path": "12"
    },
    "5239": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6817,
        6826
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "5241": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6817,
        6826
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5242": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6830,
        6831
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5244": {
      "branch": 122,
      "fn": "Raffle.refundSlot",
      "offset": [
        6817,
        6831
      ],
      "op": "EQ",
      "path": "12"
    },
    "5245": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6796,
        6831
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5246": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14DA"
    },
    "5249": {
      "branch": 122,
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5250": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5252": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5259": {
      "op": "SHL"
    },
    "5260": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5261": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5264": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5266": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5267": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "ADD",
      "path": "12"
    },
    "5268": {
      "op": "MSTORE"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5273": {
      "op": "DUP3"
    },
    "5274": {
      "op": "ADD"
    },
    "5275": {
      "op": "MSTORE"
    },
    "5276": {
      "op": "PUSH32",
      "value": "0x526166666C653A2043616E6E6F7420726566756E6420647572696E6720746869"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5311": {
      "op": "DUP3"
    },
    "5312": {
      "op": "ADD"
    },
    "5313": {
      "op": "MSTORE"
    },
    "5314": {
      "op": "PUSH8",
      "value": "0x39903937BAB73217"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "5325": {
      "op": "SHL"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5328": {
      "op": "DUP3"
    },
    "5329": {
      "op": "ADD"
    },
    "5330": {
      "op": "MSTORE"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5333": {
      "op": "ADD"
    },
    "5334": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "5337": {
      "op": "JUMP"
    },
    "5338": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6788,
        6876
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5339": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6966
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 62,
      "value": "0x12"
    },
    "5341": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6966
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5342": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "5344": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6966
      ],
      "op": "AND",
      "path": "12"
    },
    "5345": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6974
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5346": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6974
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5347": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6966
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5349": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6974
      ],
      "op": "EQ",
      "path": "12"
    },
    "5350": {
      "branch": 123,
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6974
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5351": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6992
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14F2"
    },
    "5354": {
      "branch": 123,
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6992
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5355": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6992
      ],
      "op": "POP",
      "path": "12"
    },
    "5356": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6978,
        6987
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "5358": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6978,
        6987
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5359": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6991,
        6992
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5361": {
      "branch": 124,
      "fn": "Raffle.refundSlot",
      "offset": [
        6978,
        6992
      ],
      "op": "EQ",
      "path": "12"
    },
    "5362": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6958,
        6992
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5363": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x150E"
    },
    "5366": {
      "branch": 124,
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5367": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5369": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5370": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5376": {
      "op": "SHL"
    },
    "5377": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5378": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5379": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5381": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "ADD",
      "path": "12"
    },
    "5382": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "5385": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5386": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22BB"
    },
    "5389": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        6950,
        7042
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5390": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6950,
        7042
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5391": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7172,
        7182
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 63
    },
    "5392": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7183
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5394": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7183
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5395": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7183
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5396": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7183
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5397": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7171
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "5399": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7183
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5401": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7183
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5402": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7183
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5404": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7183
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5405": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7183
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5406": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7199
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5408": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7199
      ],
      "op": "ADD",
      "path": "12"
    },
    "5409": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7199
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5410": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7223
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5411": {
      "op": "GT"
    },
    "5412": {
      "branch": 125,
      "fn": "Raffle.refundSlot",
      "offset": [
        7152,
        7223
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5413": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1581"
    },
    "5416": {
      "branch": 125,
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5417": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5419": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5420": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5426": {
      "op": "SHL"
    },
    "5427": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5428": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5431": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5433": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5434": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "ADD",
      "path": "12"
    },
    "5435": {
      "op": "MSTORE"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5440": {
      "op": "DUP3"
    },
    "5441": {
      "op": "ADD"
    },
    "5442": {
      "op": "MSTORE"
    },
    "5443": {
      "op": "PUSH32",
      "value": "0x526166666C653A204164647265737320646964206E6F74206275792074686573"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5478": {
      "op": "DUP3"
    },
    "5479": {
      "op": "ADD"
    },
    "5480": {
      "op": "MSTORE"
    },
    "5481": {
      "op": "PUSH8",
      "value": "0x329039B637BA3997"
    },
    "5490": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "5492": {
      "op": "SHL"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5495": {
      "op": "DUP3"
    },
    "5496": {
      "op": "ADD"
    },
    "5497": {
      "op": "MSTORE"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5500": {
      "op": "ADD"
    },
    "5501": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "5504": {
      "op": "JUMP"
    },
    "5505": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7144,
        7268
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5506": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7279,
        7290
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5508": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7304,
        7324
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5509": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7376,
        7760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5510": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7383,
        7409
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5511": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7383,
        7409
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5512": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7383,
        7409
      ],
      "op": "LT",
      "path": "12"
    },
    "5513": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7376,
        7760
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5514": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7376,
        7760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A8"
    },
    "5517": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7376,
        7760
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5518": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7449,
        7459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "5520": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7449,
        7466
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5521": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7441
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5522": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7441
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5523": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7442,
        7445
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5524": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5525": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5526": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "LT",
      "path": "12"
    },
    "5527": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15A2"
    },
    "5530": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5531": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15A2"
    },
    "5534": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "5537": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7428,
        7446
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5538": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5539": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5540": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "POP",
      "path": "12"
    },
    "5541": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5543": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "MUL",
      "path": "12"
    },
    "5544": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "ADD",
      "path": "12"
    },
    "5545": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7446
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "5546": {
      "branch": 126,
      "fn": "Raffle.refundSlot",
      "offset": [
        7428,
        7466
      ],
      "op": "LT",
      "path": "12"
    },
    "5547": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7425,
        7731
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5548": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7425,
        7731
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1696"
    },
    "5551": {
      "branch": 126,
      "fn": "Raffle.refundSlot",
      "offset": [
        7425,
        7731
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5552": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7523,
        7533
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5553": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7499
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "5555": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7513
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5556": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7513
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5557": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7514,
        7517
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5558": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5559": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5560": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "LT",
      "path": "12"
    },
    "5561": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15C4"
    },
    "5564": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5565": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15C4"
    },
    "5568": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "5571": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7500,
        7518
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5572": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5573": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5574": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "POP",
      "path": "12"
    },
    "5575": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5577": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "MUL",
      "path": "12"
    },
    "5578": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "ADD",
      "path": "12"
    },
    "5579": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7500,
        7518
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "5580": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5581": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5582": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5583": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "LT",
      "path": "12"
    },
    "5584": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15DB"
    },
    "5587": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5588": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15DB"
    },
    "5591": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "5594": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7489,
        7519
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5595": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5596": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5598": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5599": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5600": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5601": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5603": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5604": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5605": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5606": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "ADD",
      "path": "12"
    },
    "5607": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5614": {
      "op": "SHL"
    },
    "5615": {
      "op": "SUB"
    },
    "5616": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7519
      ],
      "op": "AND",
      "path": "12"
    },
    "5617": {
      "branch": 127,
      "fn": "Raffle.refundSlot",
      "offset": [
        7489,
        7533
      ],
      "op": "EQ",
      "path": "12"
    },
    "5618": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7485,
        7717
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5619": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7485,
        7717
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1696"
    },
    "5622": {
      "branch": 127,
      "fn": "Raffle.refundSlot",
      "offset": [
        7485,
        7717
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5623": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7598,
        7599
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 64,
      "value": "0x0"
    },
    "5625": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7567
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "5627": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7581
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5628": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7581
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5629": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7582,
        7585
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5630": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5631": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5632": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "LT",
      "path": "12"
    },
    "5633": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x160C"
    },
    "5636": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5637": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x160C"
    },
    "5640": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "5643": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7568,
        7586
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5644": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5645": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5646": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "POP",
      "path": "12"
    },
    "5647": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5649": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "MUL",
      "path": "12"
    },
    "5650": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "ADD",
      "path": "12"
    },
    "5651": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7568,
        7586
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "5652": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5653": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5654": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5655": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "LT",
      "path": "12"
    },
    "5656": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1623"
    },
    "5659": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5660": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1623"
    },
    "5663": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "5666": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7557,
        7587
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5667": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5668": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5669": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5671": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5672": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5674": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5676": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5677": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "ADD",
      "path": "12"
    },
    "5678": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7587
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5680": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "5683": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "EXP",
      "path": "12"
    },
    "5684": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5685": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5686": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5693": {
      "op": "SHL"
    },
    "5694": {
      "op": "SUB"
    },
    "5695": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "MUL",
      "path": "12"
    },
    "5696": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "NOT",
      "path": "12"
    },
    "5697": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "AND",
      "path": "12"
    },
    "5698": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5699": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5706": {
      "op": "SHL"
    },
    "5707": {
      "op": "SUB"
    },
    "5708": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "AND",
      "path": "12"
    },
    "5709": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "MUL",
      "path": "12"
    },
    "5710": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "OR",
      "path": "12"
    },
    "5711": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5712": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5713": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7557,
        7600
      ],
      "op": "POP",
      "path": "12"
    },
    "5714": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7634
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 65,
      "value": "0x10"
    },
    "5716": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7653
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5717": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7653
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5718": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7654,
        7657
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5719": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5720": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5721": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "LT",
      "path": "12"
    },
    "5722": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1665"
    },
    "5725": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5726": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1665"
    },
    "5729": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2396"
    },
    "5732": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7640,
        7658
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5733": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5734": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5735": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5736": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5738": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5739": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5740": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "ADD",
      "path": "12"
    },
    "5741": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5742": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5745": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5746": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5747": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5748": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5750": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5751": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5752": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5753": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5754": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5755": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5756": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "5757": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "MUL",
      "path": "12"
    },
    "5758": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5759": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5760": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5761": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "ADD",
      "path": "12"
    },
    "5762": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7640,
        7658
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "5763": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5764": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "ADD",
      "path": "12"
    },
    "5765": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5766": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5767": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5768": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7622,
        7659
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5769": {
      "op": "POP"
    },
    "5770": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7681,
        7698
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 66,
      "value": "0x1693"
    },
    "5773": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7681,
        7698
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5774": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7681,
        7698
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5775": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7681,
        7698
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2367"
    },
    "5778": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7681,
        7698
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5779": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7681,
        7698
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5780": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7681,
        7698
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5781": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7681,
        7698
      ],
      "op": "POP",
      "path": "12"
    },
    "5782": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7485,
        7717
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5783": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7744,
        7749
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 67
    },
    "5784": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7744,
        7749
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16A0"
    },
    "5787": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7744,
        7749
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5788": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7744,
        7749
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23C2"
    },
    "5791": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7744,
        7749
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5792": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7744,
        7749
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5793": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7744,
        7749
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5794": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7744,
        7749
      ],
      "op": "POP",
      "path": "12"
    },
    "5795": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7744,
        7749
      ],
      "op": "POP",
      "path": "12"
    },
    "5796": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7376,
        7760
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1585"
    },
    "5799": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7376,
        7760
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5800": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7376,
        7760
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5801": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7850,
        7859
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 68,
      "value": "0x3"
    },
    "5803": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7850,
        7859
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5804": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7814,
        7824
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5805": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7814,
        7824
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5806": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8FC"
    },
    "5809": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5810": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7835,
        7859
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16BB"
    },
    "5813": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7835,
        7859
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5814": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7835,
        7847
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5815": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7835,
        7859
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x231E"
    },
    "5818": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7835,
        7859
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5819": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7835,
        7859
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5820": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5822": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5823": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5824": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5825": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5826": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5827": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "MUL",
      "path": "12"
    },
    "5828": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5829": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5831": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5832": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5833": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5834": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "DUP6",
      "path": "12"
    },
    "5835": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "DUP9",
      "path": "12"
    },
    "5836": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "DUP9",
      "path": "12"
    },
    "5837": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "CALL",
      "path": "12"
    },
    "5838": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5839": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "POP",
      "path": "12"
    },
    "5840": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "POP",
      "path": "12"
    },
    "5841": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "POP",
      "path": "12"
    },
    "5842": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "POP",
      "path": "12"
    },
    "5843": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5844": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5845": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5846": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16E3"
    },
    "5849": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5850": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5851": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5853": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5854": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "5855": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5856": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5858": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5859": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5860": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7806,
        7860
      ],
      "op": "POP",
      "path": "12"
    },
    "5861": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7938,
        7950
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 69
    },
    "5862": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7921,
        7935
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "5864": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7921,
        7935
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5865": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7921,
        7950
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16F2"
    },
    "5868": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7921,
        7950
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5869": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7921,
        7950
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5870": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7921,
        7950
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237F"
    },
    "5873": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        7921,
        7950
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5874": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7921,
        7950
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5875": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7904,
        7918
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "5877": {
      "fn": "Raffle.refundSlot",
      "offset": [
        7904,
        7950
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5878": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8024,
        8034
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 70
    },
    "5879": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5881": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5882": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5883": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5884": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8023
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "5886": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5888": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5889": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5891": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5892": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5893": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8061
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5894": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8061
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5895": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8049,
        8061
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5896": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8049,
        8061
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5897": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8035
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5898": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8061
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1714"
    },
    "5901": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8061
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5902": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8049,
        8061
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5903": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8049,
        8061
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5904": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8061
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237F"
    },
    "5907": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        8004,
        8061
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5908": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8061
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5909": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8061
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5910": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8061
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5911": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8004,
        8061
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5912": {
      "op": "POP"
    },
    "5913": {
      "op": "POP"
    },
    "5914": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8091,
        8101
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 71
    },
    "5915": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5917": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5918": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5919": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5920": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8090
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x11"
    },
    "5922": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5924": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5925": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5927": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5928": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5929": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8118
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "5931": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8118
      ],
      "op": "ADD",
      "path": "12"
    },
    "5932": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8134
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5933": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8134
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5934": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8122,
        8134
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5935": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8122,
        8134
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5936": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8102
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5937": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x173B"
    },
    "5940": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5941": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8122,
        8134
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5942": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8122,
        8134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5943": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x237F"
    },
    "5946": {
      "fn": "Raffle.refundSlot",
      "jump": "i",
      "offset": [
        8071,
        8134
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5947": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8134
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5948": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5949": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8134
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5950": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8071,
        8134
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "5951": {
      "op": "POP"
    },
    "5952": {
      "op": "POP"
    },
    "5953": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 72,
      "value": "0x40"
    },
    "5955": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5956": {
      "op": "DUP2"
    },
    "5957": {
      "op": "DUP2"
    },
    "5958": {
      "op": "MSTORE"
    },
    "5959": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8193,
        8203
      ],
      "op": "CALLER",
      "path": "12"
    },
    "5960": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8193,
        8203
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5961": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xE8E3157B474707A4AD53AA38CA233AC428BB08F705EB304F0859D2A884C88002"
    },
    "5994": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5997": {
      "op": "ADD"
    },
    "5998": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6000": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6001": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6002": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6003": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "SUB",
      "path": "12"
    },
    "6004": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6005": {
      "fn": "Raffle.refundSlot",
      "offset": [
        8179,
        8218
      ],
      "op": "LOG2",
      "path": "12"
    },
    "6006": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6720,
        8225
      ],
      "op": "POP",
      "path": "12"
    },
    "6007": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6720,
        8225
      ],
      "op": "POP",
      "path": "12"
    },
    "6008": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "POP",
      "path": "12"
    },
    "6009": {
      "fn": "Raffle.refundSlot",
      "offset": [
        6645,
        8225
      ],
      "op": "POP",
      "path": "12"
    },
    "6010": {
      "fn": "Raffle.refundSlot",
      "jump": "o",
      "offset": [
        6645,
        8225
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6011": {
      "offset": [
        2129,
        2158
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6012": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x10"
    },
    "6014": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6015": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6016": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6017": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6018": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "LT",
      "path": "12"
    },
    "6019": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x178B"
    },
    "6022": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6023": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6025": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6026": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6027": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6028": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6030": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6031": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6032": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6033": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6035": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6036": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6037": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6038": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "ADD",
      "path": "12"
    },
    "6039": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6040": {
      "fn": "Raffle.refundSlot",
      "offset": [
        2129,
        2158
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6041": {
      "op": "POP"
    },
    "6042": {
      "offset": [
        2129,
        2158
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6043": {
      "fn": "Raffle.refundSlot",
      "jump": "o",
      "offset": [
        2129,
        2158
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6044": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6045": {
      "offset": [
        1076,
        1102
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xE1DCBDB91DF27212A29BC27177C840CF2F819ECF2187432E1FAC86C2DD5DFCA9"
    },
    "6078": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C7"
    },
    "6081": {
      "offset": [
        1076,
        1102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6082": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6083": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A20"
    },
    "6086": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6087": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6094": {
      "op": "SHL"
    },
    "6095": {
      "op": "SUB"
    },
    "6096": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13033,
        13065
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 73
    },
    "6097": {
      "branch": 128,
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13033,
        13065
      ],
      "op": "AND",
      "path": "12"
    },
    "6098": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x181D"
    },
    "6101": {
      "branch": 128,
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6102": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6104": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6111": {
      "op": "SHL"
    },
    "6112": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6113": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6116": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6118": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6119": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "ADD",
      "path": "12"
    },
    "6120": {
      "op": "MSTORE"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6125": {
      "op": "DUP3"
    },
    "6126": {
      "op": "ADD"
    },
    "6127": {
      "op": "MSTORE"
    },
    "6128": {
      "op": "PUSH32",
      "value": "0x4E6F6E207A65726F206164647265737320726571756972656400000000000000"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6163": {
      "op": "DUP3"
    },
    "6164": {
      "op": "ADD"
    },
    "6165": {
      "op": "MSTORE"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6168": {
      "op": "ADD"
    },
    "6169": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "6172": {
      "op": "JUMP"
    },
    "6173": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13025,
        13095
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6174": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13113
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 74,
      "value": "0x6"
    },
    "6176": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6177": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6184": {
      "op": "SHL"
    },
    "6185": {
      "op": "SUB"
    },
    "6186": {
      "op": "NOT"
    },
    "6187": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "AND",
      "path": "12"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6194": {
      "op": "SHL"
    },
    "6195": {
      "op": "SUB"
    },
    "6196": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6197": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "AND",
      "path": "12"
    },
    "6198": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6199": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6200": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "OR",
      "path": "12"
    },
    "6201": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6202": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6203": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13105,
        13134
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6204": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 75,
      "value": "0x40"
    },
    "6206": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6207": {
      "op": "SWAP1"
    },
    "6208": {
      "op": "DUP2"
    },
    "6209": {
      "op": "MSTORE"
    },
    "6210": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x9073DFAC663173E64AA95665FAEDAE52E2246F9BCDD3890FBFAF6733B46BBA13"
    },
    "6243": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6246": {
      "op": "ADD"
    },
    "6247": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6249": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6250": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6251": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6252": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "SUB",
      "path": "12"
    },
    "6253": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6254": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        13149,
        13191
      ],
      "op": "LOG1",
      "path": "12"
    },
    "6255": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "POP",
      "path": "12"
    },
    "6256": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        12926,
        13198
      ],
      "op": "POP",
      "path": "12"
    },
    "6257": {
      "fn": "Raffle.changeTreasuryAddress",
      "jump": "o",
      "offset": [
        12926,
        13198
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6258": {
      "offset": [
        2034,
        2061
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6259": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF"
    },
    "6261": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6262": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6263": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6264": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6265": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "LT",
      "path": "12"
    },
    "6266": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1882"
    },
    "6269": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6270": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6272": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6273": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6274": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6275": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6277": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6278": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6279": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6280": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6282": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6283": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6284": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6285": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "ADD",
      "path": "12"
    },
    "6286": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6293": {
      "op": "SHL"
    },
    "6294": {
      "op": "SUB"
    },
    "6295": {
      "offset": [
        2034,
        2061
      ],
      "op": "AND",
      "path": "12"
    },
    "6296": {
      "fn": "Raffle.changeTreasuryAddress",
      "offset": [
        2034,
        2061
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6297": {
      "op": "POP"
    },
    "6298": {
      "offset": [
        2034,
        2061
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6299": {
      "fn": "Raffle.changeTreasuryAddress",
      "jump": "o",
      "offset": [
        2034,
        2061
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6300": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4667,
        4814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6301": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        3983,
        3990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6303": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6304": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6305": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6306": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6308": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6309": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6310": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6311": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6313": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6314": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4021
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6315": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6317": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "ADD",
      "path": "0"
    },
    "6318": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4009,
        4031
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6319": {
      "offset": [
        2430,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18B8"
    },
    "6322": {
      "offset": [
        2441,
        2445
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6323": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6324": {
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A20"
    },
    "6327": {
      "jump": "i",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6328": {
      "fn": "Context._msgSender",
      "offset": [
        2430,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6329": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4781,
        4807
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 76,
      "value": "0x114C"
    },
    "6332": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4793,
        4797
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6333": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4799,
        4806
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6334": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4781,
        4792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE1"
    },
    "6337": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4781,
        4807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6338": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6339": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 77,
      "value": "0x40"
    },
    "6341": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6342": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6349": {
      "op": "SHL"
    },
    "6350": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6351": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6352": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12376,
        12380
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "6353": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6355": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6356": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "ADD",
      "path": "12"
    },
    "6357": {
      "op": "MSTORE"
    },
    "6358": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12316,
        12333
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6360": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12316,
        12333
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6361": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12386,
        12389
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "6394": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12386,
        12389
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6401": {
      "op": "SHL"
    },
    "6402": {
      "op": "SUB"
    },
    "6403": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12357
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "6436": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12367
      ],
      "op": "AND",
      "path": "12"
    },
    "6437": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12367
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6438": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12367
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "6443": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12367
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6446": {
      "op": "ADD"
    },
    "6447": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6449": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6451": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6452": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6453": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP4",
      "path": "12"
    },
    "6454": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "SUB",
      "path": "12"
    },
    "6455": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6456": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP7",
      "path": "12"
    },
    "6457": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "GAS",
      "path": "12"
    },
    "6458": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "6459": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6460": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6461": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6462": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x194B"
    },
    "6465": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6466": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6467": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6469": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6470": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "6471": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6472": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6474": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "REVERT",
      "path": "12"
    },
    "6475": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6476": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "POP",
      "path": "12"
    },
    "6477": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "POP",
      "path": "12"
    },
    "6478": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "POP",
      "path": "12"
    },
    "6479": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "POP",
      "path": "12"
    },
    "6480": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6482": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6483": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "6484": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "6486": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "NOT",
      "path": "12"
    },
    "6487": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "6489": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6490": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "ADD",
      "path": "12"
    },
    "6491": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "AND",
      "path": "12"
    },
    "6492": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6493": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "ADD",
      "path": "12"
    },
    "6494": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP1",
      "path": "12"
    },
    "6495": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6497": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6498": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "POP",
      "path": "12"
    },
    "6499": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6500": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "ADD",
      "path": "12"
    },
    "6501": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6502": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x196F"
    },
    "6505": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6506": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6507": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23F1"
    },
    "6510": {
      "fn": "Raffle.getRandomNumber",
      "jump": "i",
      "offset": [
        12353,
        12382
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6511": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12382
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6512": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12389
      ],
      "op": "LT",
      "path": "12"
    },
    "6513": {
      "branch": 129,
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12353,
        12389
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "6514": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19D1"
    },
    "6517": {
      "branch": 129,
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6518": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6520": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6527": {
      "op": "SHL"
    },
    "6528": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6529": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6532": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6534": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6535": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "ADD",
      "path": "12"
    },
    "6536": {
      "op": "MSTORE"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6541": {
      "op": "DUP3"
    },
    "6542": {
      "op": "ADD"
    },
    "6543": {
      "op": "MSTORE"
    },
    "6544": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768204C494E4B202D2066696C6C20636F6E747261637420"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6579": {
      "op": "DUP3"
    },
    "6580": {
      "op": "ADD"
    },
    "6581": {
      "op": "MSTORE"
    },
    "6582": {
      "op": "PUSH11",
      "value": "0x1DDA5D1A0819985D58D95D"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6596": {
      "op": "SHL"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6599": {
      "op": "DUP3"
    },
    "6600": {
      "op": "ADD"
    },
    "6601": {
      "op": "MSTORE"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6604": {
      "op": "ADD"
    },
    "6605": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "6608": {
      "op": "JUMP"
    },
    "6609": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12345,
        12437
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6610": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12454,
        12485
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 78,
      "value": "0x1A1B"
    },
    "6613": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12472,
        12479
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "6646": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12481,
        12484
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "6679": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12454,
        12471
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D46"
    },
    "6682": {
      "fn": "Raffle.getRandomNumber",
      "jump": "i",
      "offset": [
        12454,
        12485
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6683": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12454,
        12485
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6684": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12447,
        12485
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6685": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12447,
        12485
      ],
      "op": "POP",
      "path": "12"
    },
    "6686": {
      "fn": "Raffle.getRandomNumber",
      "offset": [
        12273,
        12492
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6687": {
      "fn": "Raffle.getRandomNumber",
      "jump": "o",
      "offset": [
        12273,
        12492
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6688": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3252,
        3736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6689": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3332,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2A"
    },
    "6692": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3340,
        3344
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6693": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3346,
        3353
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6694": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3332,
        3339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1340"
    },
    "6697": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3332,
        3354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6698": {
      "branch": 134,
      "fn": "AccessControl._checkRole",
      "offset": [
        3332,
        3354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6699": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3327,
        3730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B0"
    },
    "6702": {
      "branch": 134,
      "fn": "AccessControl._checkRole",
      "offset": [
        3327,
        3730
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6703": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3556
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 79,
      "value": "0x1A42"
    },
    "6706": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3543,
        3550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6713": {
      "op": "SHL"
    },
    "6714": {
      "op": "SUB"
    },
    "6715": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3556
      ],
      "op": "AND",
      "path": "0"
    },
    "6716": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3553,
        3555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "6718": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC9"
    },
    "6721": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3515,
        3556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6722": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3515,
        3556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6723": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3627,
        3665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4D"
    },
    "6726": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6727": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3662,
        3664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6729": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3627,
        3646
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC9"
    },
    "6732": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3627,
        3665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6733": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3627,
        3665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6734": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6736": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6737": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6739": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "ADD",
      "path": "0"
    },
    "6740": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A5E"
    },
    "6743": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6744": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6745": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6746": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243A"
    },
    "6749": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3422,
        3687
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6750": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6751": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6753": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6754": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6757": {
      "op": "NOT"
    },
    "6758": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6759": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6760": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SUB",
      "path": "0"
    },
    "6761": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "ADD",
      "path": "0"
    },
    "6762": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6763": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6764": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6765": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6766": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6767": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3422,
        3687
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6768": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6774": {
      "op": "SHL"
    },
    "6775": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6776": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6777": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x713"
    },
    "6780": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6781": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6783": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "ADD",
      "path": "0"
    },
    "6784": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3370,
        3719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24DB"
    },
    "6787": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3370,
        3719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6788": {
      "fn": "Pausable._unpause",
      "offset": [
        2053,
        2170
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6789": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6791": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6792": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6794": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "2"
    },
    "6795": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ACD"
    },
    "6798": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6799": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6801": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6808": {
      "op": "SHL"
    },
    "6809": {
      "offset": [
        1612,
        1653
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6810": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6813": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6815": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6816": {
      "fn": "Pausable.paused",
      "offset": [
        1612,
        1653
      ],
      "op": "ADD",
      "path": "2"
    },
    "6817": {
      "op": "MSTORE"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "6820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6822": {
      "op": "DUP3"
    },
    "6823": {
      "op": "ADD"
    },
    "6824": {
      "op": "MSTORE"
    },
    "6825": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "6848": {
      "op": "SHL"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6851": {
      "op": "DUP3"
    },
    "6852": {
      "op": "ADD"
    },
    "6853": {
      "op": "MSTORE"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6856": {
      "op": "ADD"
    },
    "6857": {
      "offset": [
        1612,
        1653
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x713"
    },
    "6860": {
      "op": "JUMP"
    },
    "6861": {
      "offset": [
        1612,
        1653
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6862": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2118
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 80,
      "value": "0x2"
    },
    "6864": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6865": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6868": {
      "op": "NOT"
    },
    "6869": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "AND",
      "path": "2"
    },
    "6870": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6871": {
      "fn": "Pausable._unpause",
      "offset": [
        2111,
        2126
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6872": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 81,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "6905": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6906": {
      "fn": "Pausable._unpause",
      "offset": [
        2150,
        2162
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6907": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6909": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6916": {
      "op": "SHL"
    },
    "6917": {
      "op": "SUB"
    },
    "6918": {
      "op": "SWAP1"
    },
    "6919": {
      "op": "SWAP2"
    },
    "6920": {
      "op": "AND"
    },
    "6921": {
      "op": "DUP2"
    },
    "6922": {
      "op": "MSTORE"
    },
    "6923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6925": {
      "op": "ADD"
    },
    "6926": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6928": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6929": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6930": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6931": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "SUB",
      "path": "2"
    },
    "6932": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6933": {
      "fn": "Pausable._unpause",
      "offset": [
        2141,
        2163
      ],
      "op": "LOG1",
      "path": "2"
    },
    "6934": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2053,
        2170
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6935": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8341,
        8987
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6936": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8390,
        8407
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6938": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8499,
        8500
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 82
    },
    "6939": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8482,
        8496
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "6941": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8482,
        8496
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6942": {
      "branch": 130,
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8482,
        8500
      ],
      "op": "GT",
      "path": "12"
    },
    "6943": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B6A"
    },
    "6946": {
      "branch": 130,
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6947": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6949": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6950": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6956": {
      "op": "SHL"
    },
    "6957": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6958": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6961": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6963": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6964": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "ADD",
      "path": "12"
    },
    "6965": {
      "op": "MSTORE"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6970": {
      "op": "DUP3"
    },
    "6971": {
      "op": "ADD"
    },
    "6972": {
      "op": "MSTORE"
    },
    "6973": {
      "op": "PUSH32",
      "value": "0x526166666C653A204E6F20736C6F7473206172652066696C6C65640000000000"
    },
    "7006": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7008": {
      "op": "DUP3"
    },
    "7009": {
      "op": "ADD"
    },
    "7010": {
      "op": "MSTORE"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7013": {
      "op": "ADD"
    },
    "7014": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "7017": {
      "op": "JUMP"
    },
    "7018": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8474,
        8532
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7019": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8604,
        8612
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 83,
      "value": "0x12"
    },
    "7021": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8604,
        8612
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7022": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8604,
        8612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7024": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8604,
        8612
      ],
      "op": "AND",
      "path": "12"
    },
    "7025": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8604,
        8620
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7026": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8604,
        8620
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7027": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8604,
        8612
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7029": {
      "branch": 131,
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8604,
        8620
      ],
      "op": "EQ",
      "path": "12"
    },
    "7030": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B91"
    },
    "7033": {
      "branch": 131,
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7034": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7036": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7043": {
      "op": "SHL"
    },
    "7044": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7045": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7046": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7048": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "ADD",
      "path": "12"
    },
    "7049": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "7052": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7053": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22BB"
    },
    "7056": {
      "fn": "Raffle.collectRandomWinner",
      "jump": "i",
      "offset": [
        8596,
        8670
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7057": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8596,
        8670
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7058": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8762,
        8783
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 84,
      "value": "0xD"
    },
    "7060": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8762,
        8783
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7061": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8762,
        8783
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "7063": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8762,
        8783
      ],
      "op": "AND",
      "path": "12"
    },
    "7064": {
      "branch": 132,
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8762,
        8792
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "7065": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1BF0"
    },
    "7068": {
      "branch": 132,
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7069": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7071": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7078": {
      "op": "SHL"
    },
    "7079": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7080": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7083": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7085": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "DUP3",
      "path": "12"
    },
    "7086": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "ADD",
      "path": "12"
    },
    "7087": {
      "op": "MSTORE"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7090": {
      "op": "DUP1"
    },
    "7091": {
      "op": "DUP3"
    },
    "7092": {
      "op": "ADD"
    },
    "7093": {
      "op": "MSTORE"
    },
    "7094": {
      "op": "PUSH32",
      "value": "0x526166666C653A2043616E6E6F7420636F6C6C6563742077696E6E6572207477"
    },
    "7127": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7129": {
      "op": "DUP3"
    },
    "7130": {
      "op": "ADD"
    },
    "7131": {
      "op": "MSTORE"
    },
    "7132": {
      "op": "PUSH4",
      "value": "0x34B1B297"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7139": {
      "op": "SHL"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7142": {
      "op": "DUP3"
    },
    "7143": {
      "op": "ADD"
    },
    "7144": {
      "op": "MSTORE"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7147": {
      "op": "ADD"
    },
    "7148": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x713"
    },
    "7151": {
      "op": "JUMP"
    },
    "7152": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8754,
        8833
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7153": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8883,
        8904
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 85,
      "value": "0xD"
    },
    "7155": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8883,
        8911
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7156": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8883,
        8911
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7159": {
      "op": "NOT"
    },
    "7160": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8883,
        8911
      ],
      "op": "AND",
      "path": "12"
    },
    "7161": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8907,
        8911
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "7163": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8883,
        8911
      ],
      "op": "OR",
      "path": "12"
    },
    "7164": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8883,
        8911
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7165": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8883,
        8911
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "7166": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8963,
        8980
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 86,
      "value": "0x1A1B"
    },
    "7169": {
      "fn": "Raffle.collectRandomWinner",
      "offset": [
        8963,
        8978
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x18C2"
    },
    "7172": {
      "fn": "Raffle.collectRandomWinner",
      "jump": "i",
      "offset": [
        8963,
        8980
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7173": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6572,
        6796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7174": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6646,
        6668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0F"
    },
    "7177": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6654,
        6658
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7178": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6660,
        6667
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7179": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6646,
        6653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1340"
    },
    "7182": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        6646,
        6668
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7183": {
      "branch": 135,
      "fn": "AccessControl._grantRole",
      "offset": [
        6646,
        6668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7184": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6641,
        6790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B0"
    },
    "7187": {
      "branch": 135,
      "fn": "AccessControl._grantRole",
      "offset": [
        6641,
        6790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7188": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6690
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 87,
      "value": "0x0"
    },
    "7190": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7191": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7192": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7193": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7195": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7196": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7197": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7198": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7200": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7201": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7202": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7209": {
      "op": "SHL"
    },
    "7210": {
      "op": "SUB"
    },
    "7211": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7212": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "AND",
      "path": "0"
    },
    "7213": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7214": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7215": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7216": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7217": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7218": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7219": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6713
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7220": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7221": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7224": {
      "op": "NOT"
    },
    "7225": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "AND",
      "path": "0"
    },
    "7226": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6716,
        6720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "7228": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "OR",
      "path": "0"
    },
    "7229": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7230": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6684,
        6720
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7231": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6766,
        6778
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 88,
      "value": "0x1C45"
    },
    "7234": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7235": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7236": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7237": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6766,
        6778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7244": {
      "op": "SHL"
    },
    "7245": {
      "op": "SUB"
    },
    "7246": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "AND",
      "path": "0"
    },
    "7247": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6757,
        6764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7254": {
      "op": "SHL"
    },
    "7255": {
      "op": "SUB"
    },
    "7256": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "AND",
      "path": "0"
    },
    "7257": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6751,
        6755
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7258": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "7291": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7293": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7294": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7296": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7297": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7298": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7299": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "SUB",
      "path": "0"
    },
    "7300": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7301": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6739,
        6779
      ],
      "op": "LOG4",
      "path": "0"
    },
    "7302": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6572,
        6796
      ],
      "op": "POP",
      "path": "0"
    },
    "7303": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6572,
        6796
      ],
      "op": "POP",
      "path": "0"
    },
    "7304": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        6572,
        6796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7305": {
      "fn": "Pausable._pause",
      "offset": [
        1806,
        1921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7306": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7308": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7309": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7311": {
      "fn": "Pausable.paused",
      "offset": [
        1111,
        1118
      ],
      "op": "AND",
      "path": "2"
    },
    "7312": {
      "offset": [
        1354,
        1363
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7313": {
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CAC"
    },
    "7316": {
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7317": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7319": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7326": {
      "op": "SHL"
    },
    "7327": {
      "offset": [
        1346,
        1384
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7328": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7329": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7331": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "ADD",
      "path": "2"
    },
    "7332": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x713"
    },
    "7335": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7336": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2291"
    },
    "7339": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7340": {
      "fn": "Pausable.paused",
      "offset": [
        1346,
        1384
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7341": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1872
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0x2"
    },
    "7343": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7344": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7345": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7347": {
      "op": "NOT"
    },
    "7348": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "AND",
      "path": "2"
    },
    "7349": {
      "fn": "Pausable._pause",
      "offset": [
        1875,
        1879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7351": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "OR",
      "path": "2"
    },
    "7352": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7353": {
      "fn": "Pausable._pause",
      "offset": [
        1865,
        1879
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7354": {
      "fn": "Pausable._pause",
      "offset": [
        1894,
        1914
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 90,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "7387": {
      "fn": "Pausable._pause",
      "offset": [
        1901,
        1913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AFA"
    },
    "7390": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7391": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7392": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7393": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6802,
        7027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7394": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6876,
        6898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CEB"
    },
    "7397": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6884,
        6888
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7398": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6890,
        6897
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7399": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6876,
        6883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1340"
    },
    "7402": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        6876,
        6898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7403": {
      "branch": 136,
      "fn": "AccessControl._revokeRole",
      "offset": [
        6876,
        6898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7404": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6872,
        7021
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7405": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6872,
        7021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B0"
    },
    "7408": {
      "branch": 136,
      "fn": "AccessControl._revokeRole",
      "offset": [
        6872,
        7021
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7409": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6946,
        6951
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 91,
      "value": "0x0"
    },
    "7411": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7412": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7413": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7414": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7416": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7417": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7418": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7419": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7421": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7422": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7423": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7430": {
      "op": "SHL"
    },
    "7431": {
      "op": "SUB"
    },
    "7432": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7433": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "AND",
      "path": "0"
    },
    "7434": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7435": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7436": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7437": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7438": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7439": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7440": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7441": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6943
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7442": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7443": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7446": {
      "op": "NOT"
    },
    "7447": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "AND",
      "path": "0"
    },
    "7448": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7449": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6951
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7450": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 92
    },
    "7451": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7452": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7453": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7454": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6914,
        6926
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7455": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "7488": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7489": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6946,
        6951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7490": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6970,
        7010
      ],
      "op": "LOG4",
      "path": "0"
    },
    "7491": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6802,
        7027
      ],
      "op": "POP",
      "path": "0"
    },
    "7492": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        6802,
        7027
      ],
      "op": "POP",
      "path": "0"
    },
    "7493": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        6802,
        7027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7494": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7495": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7497": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7892
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 93,
      "value": "0x0"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7536": {
      "op": "SHL"
    },
    "7537": {
      "op": "SUB"
    },
    "7538": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "AND",
      "path": "9"
    },
    "7539": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x4000AEA0"
    },
    "7544": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7909,
        7923
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x0"
    },
    "7577": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7925,
        7929
      ],
      "op": "DUP5",
      "path": "9"
    },
    "7578": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7942,
        7950
      ],
      "op": "DUP7",
      "path": "9"
    },
    "7579": {
      "offset": [
        6609,
        6610
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7581": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7583": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7584": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7586": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "ADD",
      "path": "9"
    },
    "7587": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1DB6"
    },
    "7590": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "7591": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7592": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7593": {
      "op": "SWAP2"
    },
    "7594": {
      "op": "DUP3"
    },
    "7595": {
      "op": "MSTORE"
    },
    "7596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7598": {
      "op": "DUP3"
    },
    "7599": {
      "op": "ADD"
    },
    "7600": {
      "op": "MSTORE"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7603": {
      "op": "ADD"
    },
    "7604": {
      "op": "SWAP1"
    },
    "7605": {
      "op": "JUMP"
    },
    "7606": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7607": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7609": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7610": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7612": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7613": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP4",
      "path": "9"
    },
    "7614": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "9"
    },
    "7615": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "9"
    },
    "7616": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7617": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7618": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7619": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7621": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7622": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7624": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7625": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP5",
      "path": "9"
    },
    "7626": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "7631": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "9"
    },
    "7632": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "7634": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SHL",
      "path": "9"
    },
    "7635": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7636": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7637": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7639": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "9"
    },
    "7640": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1DE3"
    },
    "7643": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "7644": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "7645": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7646": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7647": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x24EE"
    },
    "7650": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7651": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7652": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7654": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7656": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7657": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7658": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP4",
      "path": "9"
    },
    "7659": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SUB",
      "path": "9"
    },
    "7660": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7661": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7663": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP8",
      "path": "9"
    },
    "7664": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "GAS",
      "path": "9"
    },
    "7665": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "CALL",
      "path": "9"
    },
    "7666": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "7667": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7668": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "7669": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E02"
    },
    "7672": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7673": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "7674": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7676": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7677": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "7678": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "7679": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7681": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "9"
    },
    "7682": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7683": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "9"
    },
    "7684": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "9"
    },
    "7685": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "9"
    },
    "7686": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "9"
    },
    "7687": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7689": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7690": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "7691": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "7693": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "NOT",
      "path": "9"
    },
    "7694": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "7696": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7697": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "9"
    },
    "7698": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "9"
    },
    "7699": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7700": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "9"
    },
    "7701": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7702": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7704": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7705": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "9"
    },
    "7706": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7707": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "9"
    },
    "7708": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7709": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E26"
    },
    "7712": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7713": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7714": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x251E"
    },
    "7717": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7718": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7719": {
      "op": "POP"
    },
    "7720": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8206,
        8221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7722": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "9"
    },
    "7723": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7724": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7725": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8296
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7727": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7729": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7730": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7731": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7732": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7734": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7735": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP5",
      "path": "9"
    },
    "7736": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "7737": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7738": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 94
    },
    "7739": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7740": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7741": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7742": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "10"
    },
    "7743": {
      "op": "DUP10"
    },
    "7744": {
      "op": "SWAP1"
    },
    "7745": {
      "op": "MSTORE"
    },
    "7746": {
      "op": "DUP1"
    },
    "7747": {
      "op": "DUP4"
    },
    "7748": {
      "op": "ADD"
    },
    "7749": {
      "op": "DUP7"
    },
    "7750": {
      "op": "SWAP1"
    },
    "7751": {
      "op": "MSTORE"
    },
    "7752": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8283,
        8287
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7755": {
      "op": "DUP3"
    },
    "7756": {
      "op": "ADD"
    },
    "7757": {
      "op": "MSTORE"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7760": {
      "op": "DUP1"
    },
    "7761": {
      "op": "DUP3"
    },
    "7762": {
      "op": "ADD"
    },
    "7763": {
      "op": "DUP4"
    },
    "7764": {
      "op": "SWAP1"
    },
    "7765": {
      "op": "MSTORE"
    },
    "7766": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7767": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7768": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7769": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7770": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "10"
    },
    "7771": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7772": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7773": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "10"
    },
    "7774": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7775": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7778": {
      "op": "SWAP1"
    },
    "7779": {
      "op": "SWAP2"
    },
    "7780": {
      "op": "ADD"
    },
    "7781": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7782": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7783": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7784": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7785": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7786": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7787": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7788": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "10"
    },
    "7789": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7790": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7791": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7792": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7793": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP4",
      "path": "9",
      "statement": 95
    },
    "7794": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP8",
      "path": "9"
    },
    "7795": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7796": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7797": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7798": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7799": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7800": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7801": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E81"
    },
    "7804": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7805": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2367"
    },
    "7808": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7809": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7810": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7812": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP6",
      "path": "9"
    },
    "7813": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7814": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7815": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8724
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7817": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7819": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7820": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7822": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7823": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "7824": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "7825": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8770,
        8802
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 96,
      "value": "0x1EC1"
    },
    "7828": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8725,
        8733
      ],
      "op": "DUP5",
      "path": "9"
    },
    "7829": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8794,
        8801
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7830": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 97,
      "value": "0x40"
    },
    "7832": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7833": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7834": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7836": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7837": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7838": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "10"
    },
    "7839": {
      "op": "SWAP5"
    },
    "7840": {
      "op": "SWAP1"
    },
    "7841": {
      "op": "SWAP5"
    },
    "7842": {
      "op": "MSTORE"
    },
    "7843": {
      "op": "DUP1"
    },
    "7844": {
      "op": "DUP3"
    },
    "7845": {
      "op": "ADD"
    },
    "7846": {
      "op": "SWAP3"
    },
    "7847": {
      "op": "SWAP1"
    },
    "7848": {
      "op": "SWAP3"
    },
    "7849": {
      "op": "MSTORE"
    },
    "7850": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7851": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7852": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7853": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7854": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "10"
    },
    "7855": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7856": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "10"
    },
    "7857": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7858": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7861": {
      "op": "SWAP1"
    },
    "7862": {
      "op": "SWAP3"
    },
    "7863": {
      "op": "ADD"
    },
    "7864": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7865": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7866": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7867": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7868": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7869": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "10"
    },
    "7870": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7871": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7872": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1443,
        1647
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7873": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8770,
        8802
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7874": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8763,
        8802
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "7875": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "7876": {
      "op": "POP"
    },
    "7877": {
      "op": "POP"
    },
    "7878": {
      "op": "POP"
    },
    "7879": {
      "op": "POP"
    },
    "7880": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7881": {
      "op": "JUMPDEST"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7886": {
      "op": "PUSH2",
      "value": "0x1ED8"
    },
    "7889": {
      "op": "DUP4"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7892": {
      "op": "PUSH2",
      "value": "0x231E"
    },
    "7895": {
      "jump": "i",
      "op": "JUMP"
    },
    "7896": {
      "op": "JUMPDEST"
    },
    "7897": {
      "op": "PUSH2",
      "value": "0x1EE3"
    },
    "7900": {
      "op": "SWAP1"
    },
    "7901": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7903": {
      "op": "PUSH2",
      "value": "0x2367"
    },
    "7906": {
      "jump": "i",
      "op": "JUMP"
    },
    "7907": {
      "op": "JUMPDEST"
    },
    "7908": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7917": {
      "op": "DUP2"
    },
    "7918": {
      "op": "GT"
    },
    "7919": {
      "op": "ISZERO"
    },
    "7920": {
      "op": "PUSH2",
      "value": "0x1EFB"
    },
    "7923": {
      "op": "JUMPI"
    },
    "7924": {
      "op": "PUSH2",
      "value": "0x1EFB"
    },
    "7927": {
      "op": "PUSH2",
      "value": "0x2540"
    },
    "7930": {
      "jump": "i",
      "op": "JUMP"
    },
    "7931": {
      "op": "JUMPDEST"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7934": {
      "op": "MLOAD"
    },
    "7935": {
      "op": "SWAP1"
    },
    "7936": {
      "op": "DUP1"
    },
    "7937": {
      "op": "DUP3"
    },
    "7938": {
      "op": "MSTORE"
    },
    "7939": {
      "op": "DUP1"
    },
    "7940": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7942": {
      "op": "ADD"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7945": {
      "op": "NOT"
    },
    "7946": {
      "op": "AND"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7949": {
      "op": "ADD"
    },
    "7950": {
      "op": "DUP3"
    },
    "7951": {
      "op": "ADD"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7954": {
      "op": "MSTORE"
    },
    "7955": {
      "op": "DUP1"
    },
    "7956": {
      "op": "ISZERO"
    },
    "7957": {
      "op": "PUSH2",
      "value": "0x1F25"
    },
    "7960": {
      "op": "JUMPI"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7963": {
      "op": "DUP3"
    },
    "7964": {
      "op": "ADD"
    },
    "7965": {
      "op": "DUP2"
    },
    "7966": {
      "op": "DUP1"
    },
    "7967": {
      "op": "CALLDATASIZE"
    },
    "7968": {
      "op": "DUP4"
    },
    "7969": {
      "op": "CALLDATACOPY"
    },
    "7970": {
      "op": "ADD"
    },
    "7971": {
      "op": "SWAP1"
    },
    "7972": {
      "op": "POP"
    },
    "7973": {
      "op": "JUMPDEST"
    },
    "7974": {
      "op": "POP"
    },
    "7975": {
      "op": "SWAP1"
    },
    "7976": {
      "op": "POP"
    },
    "7977": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "7981": {
      "op": "SHL"
    },
    "7982": {
      "op": "DUP2"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7985": {
      "op": "DUP2"
    },
    "7986": {
      "op": "MLOAD"
    },
    "7987": {
      "op": "DUP2"
    },
    "7988": {
      "op": "LT"
    },
    "7989": {
      "op": "PUSH2",
      "value": "0x1F40"
    },
    "7992": {
      "op": "JUMPI"
    },
    "7993": {
      "op": "PUSH2",
      "value": "0x1F40"
    },
    "7996": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "7999": {
      "jump": "i",
      "op": "JUMP"
    },
    "8000": {
      "op": "JUMPDEST"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8003": {
      "op": "ADD"
    },
    "8004": {
      "op": "ADD"
    },
    "8005": {
      "op": "SWAP1"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8012": {
      "op": "SHL"
    },
    "8013": {
      "op": "SUB"
    },
    "8014": {
      "op": "NOT"
    },
    "8015": {
      "op": "AND"
    },
    "8016": {
      "op": "SWAP1"
    },
    "8017": {
      "op": "DUP2"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8020": {
      "op": "BYTE"
    },
    "8021": {
      "op": "SWAP1"
    },
    "8022": {
      "op": "MSTORE8"
    },
    "8023": {
      "op": "POP"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "8028": {
      "op": "SHL"
    },
    "8029": {
      "op": "DUP2"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8032": {
      "op": "DUP2"
    },
    "8033": {
      "op": "MLOAD"
    },
    "8034": {
      "op": "DUP2"
    },
    "8035": {
      "op": "LT"
    },
    "8036": {
      "op": "PUSH2",
      "value": "0x1F6F"
    },
    "8039": {
      "op": "JUMPI"
    },
    "8040": {
      "op": "PUSH2",
      "value": "0x1F6F"
    },
    "8043": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "8046": {
      "jump": "i",
      "op": "JUMP"
    },
    "8047": {
      "op": "JUMPDEST"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8050": {
      "op": "ADD"
    },
    "8051": {
      "op": "ADD"
    },
    "8052": {
      "op": "SWAP1"
    },
    "8053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8057": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8059": {
      "op": "SHL"
    },
    "8060": {
      "op": "SUB"
    },
    "8061": {
      "op": "NOT"
    },
    "8062": {
      "op": "AND"
    },
    "8063": {
      "op": "SWAP1"
    },
    "8064": {
      "op": "DUP2"
    },
    "8065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8067": {
      "op": "BYTE"
    },
    "8068": {
      "op": "SWAP1"
    },
    "8069": {
      "op": "MSTORE8"
    },
    "8070": {
      "op": "POP"
    },
    "8071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8073": {
      "op": "PUSH2",
      "value": "0x1F93"
    },
    "8076": {
      "op": "DUP5"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8079": {
      "op": "PUSH2",
      "value": "0x231E"
    },
    "8082": {
      "jump": "i",
      "op": "JUMP"
    },
    "8083": {
      "op": "JUMPDEST"
    },
    "8084": {
      "op": "PUSH2",
      "value": "0x1F9E"
    },
    "8087": {
      "op": "SWAP1"
    },
    "8088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8090": {
      "op": "PUSH2",
      "value": "0x2367"
    },
    "8093": {
      "jump": "i",
      "op": "JUMP"
    },
    "8094": {
      "op": "JUMPDEST"
    },
    "8095": {
      "op": "SWAP1"
    },
    "8096": {
      "op": "POP"
    },
    "8097": {
      "op": "JUMPDEST"
    },
    "8098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8100": {
      "op": "DUP2"
    },
    "8101": {
      "op": "GT"
    },
    "8102": {
      "op": "ISZERO"
    },
    "8103": {
      "op": "PUSH2",
      "value": "0x2016"
    },
    "8106": {
      "op": "JUMPI"
    },
    "8107": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "8126": {
      "op": "SHL"
    },
    "8127": {
      "op": "DUP6"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "8130": {
      "op": "AND"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "8133": {
      "op": "DUP2"
    },
    "8134": {
      "op": "LT"
    },
    "8135": {
      "op": "PUSH2",
      "value": "0x1FD2"
    },
    "8138": {
      "op": "JUMPI"
    },
    "8139": {
      "op": "PUSH2",
      "value": "0x1FD2"
    },
    "8142": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "8145": {
      "jump": "i",
      "op": "JUMP"
    },
    "8146": {
      "op": "JUMPDEST"
    },
    "8147": {
      "op": "BYTE"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8150": {
      "op": "SHL"
    },
    "8151": {
      "op": "DUP3"
    },
    "8152": {
      "op": "DUP3"
    },
    "8153": {
      "op": "DUP2"
    },
    "8154": {
      "op": "MLOAD"
    },
    "8155": {
      "op": "DUP2"
    },
    "8156": {
      "op": "LT"
    },
    "8157": {
      "op": "PUSH2",
      "value": "0x1FE8"
    },
    "8160": {
      "op": "JUMPI"
    },
    "8161": {
      "op": "PUSH2",
      "value": "0x1FE8"
    },
    "8164": {
      "op": "PUSH2",
      "value": "0x2396"
    },
    "8167": {
      "jump": "i",
      "op": "JUMP"
    },
    "8168": {
      "op": "JUMPDEST"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8171": {
      "op": "ADD"
    },
    "8172": {
      "op": "ADD"
    },
    "8173": {
      "op": "SWAP1"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8180": {
      "op": "SHL"
    },
    "8181": {
      "op": "SUB"
    },
    "8182": {
      "op": "NOT"
    },
    "8183": {
      "op": "AND"
    },
    "8184": {
      "op": "SWAP1"
    },
    "8185": {
      "op": "DUP2"
    },
    "8186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8188": {
      "op": "BYTE"
    },
    "8189": {
      "op": "SWAP1"
    },
    "8190": {
      "op": "MSTORE8"
    },
    "8191": {
      "op": "POP"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8194": {
      "op": "SWAP5"
    },
    "8195": {
      "op": "SWAP1"
    },
    "8196": {
      "op": "SWAP5"
    },
    "8197": {
      "op": "SHR"
    },
    "8198": {
      "op": "SWAP4"
    },
    "8199": {
      "op": "PUSH2",
      "value": "0x200F"
    },
    "8202": {
      "op": "DUP2"
    },
    "8203": {
      "op": "PUSH2",
      "value": "0x2556"
    },
    "8206": {
      "jump": "i",
      "op": "JUMP"
    },
    "8207": {
      "op": "JUMPDEST"
    },
    "8208": {
      "op": "SWAP1"
    },
    "8209": {
      "op": "POP"
    },
    "8210": {
      "op": "PUSH2",
      "value": "0x1FA1"
    },
    "8213": {
      "op": "JUMP"
    },
    "8214": {
      "op": "JUMPDEST"
    },
    "8215": {
      "op": "POP"
    },
    "8216": {
      "op": "DUP4"
    },
    "8217": {
      "op": "ISZERO"
    },
    "8218": {
      "op": "PUSH2",
      "value": "0x2065"
    },
    "8221": {
      "op": "JUMPI"
    },
    "8222": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8224": {
      "op": "MLOAD"
    },
    "8225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8231": {
      "op": "SHL"
    },
    "8232": {
      "op": "DUP2"
    },
    "8233": {
      "op": "MSTORE"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8236": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8238": {
      "op": "DUP3"
    },
    "8239": {
      "op": "ADD"
    },
    "8240": {
      "op": "DUP2"
    },
    "8241": {
      "op": "SWAP1"
    },
    "8242": {
      "op": "MSTORE"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8245": {
      "op": "DUP3"
    },
    "8246": {
      "op": "ADD"
    },
    "8247": {
      "op": "MSTORE"
    },
    "8248": {
      "op": "PUSH32",
      "value": "0x537472696E67733A20686578206C656E67746820696E73756666696369656E74"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8283": {
      "op": "DUP3"
    },
    "8284": {
      "op": "ADD"
    },
    "8285": {
      "op": "MSTORE"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8288": {
      "op": "ADD"
    },
    "8289": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "8292": {
      "op": "JUMP"
    },
    "8293": {
      "op": "JUMPDEST"
    },
    "8294": {
      "op": "SWAP4"
    },
    "8295": {
      "op": "SWAP3"
    },
    "8296": {
      "op": "POP"
    },
    "8297": {
      "op": "POP"
    },
    "8298": {
      "op": "POP"
    },
    "8299": {
      "jump": "o",
      "op": "JUMP"
    },
    "8300": {
      "op": "JUMPDEST"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8305": {
      "op": "DUP3"
    },
    "8306": {
      "op": "DUP5"
    },
    "8307": {
      "op": "SUB"
    },
    "8308": {
      "op": "SLT"
    },
    "8309": {
      "op": "ISZERO"
    },
    "8310": {
      "op": "PUSH2",
      "value": "0x207E"
    },
    "8313": {
      "op": "JUMPI"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8316": {
      "op": "DUP1"
    },
    "8317": {
      "op": "REVERT"
    },
    "8318": {
      "op": "JUMPDEST"
    },
    "8319": {
      "op": "DUP2"
    },
    "8320": {
      "op": "CALLDATALOAD"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8325": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8327": {
      "op": "SHL"
    },
    "8328": {
      "op": "SUB"
    },
    "8329": {
      "op": "NOT"
    },
    "8330": {
      "op": "DUP2"
    },
    "8331": {
      "op": "AND"
    },
    "8332": {
      "op": "DUP2"
    },
    "8333": {
      "op": "EQ"
    },
    "8334": {
      "op": "PUSH2",
      "value": "0x2065"
    },
    "8337": {
      "op": "JUMPI"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8340": {
      "op": "DUP1"
    },
    "8341": {
      "op": "REVERT"
    },
    "8342": {
      "op": "JUMPDEST"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8345": {
      "op": "DUP1"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8348": {
      "op": "DUP4"
    },
    "8349": {
      "op": "DUP6"
    },
    "8350": {
      "op": "SUB"
    },
    "8351": {
      "op": "SLT"
    },
    "8352": {
      "op": "ISZERO"
    },
    "8353": {
      "op": "PUSH2",
      "value": "0x20A9"
    },
    "8356": {
      "op": "JUMPI"
    },
    "8357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8359": {
      "op": "DUP1"
    },
    "8360": {
      "op": "REVERT"
    },
    "8361": {
      "op": "JUMPDEST"
    },
    "8362": {
      "op": "POP"
    },
    "8363": {
      "op": "POP"
    },
    "8364": {
      "op": "DUP1"
    },
    "8365": {
      "op": "CALLDATALOAD"
    },
    "8366": {
      "op": "SWAP3"
    },
    "8367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8369": {
      "op": "SWAP1"
    },
    "8370": {
      "op": "SWAP2"
    },
    "8371": {
      "op": "ADD"
    },
    "8372": {
      "op": "CALLDATALOAD"
    },
    "8373": {
      "op": "SWAP2"
    },
    "8374": {
      "op": "POP"
    },
    "8375": {
      "jump": "o",
      "op": "JUMP"
    },
    "8376": {
      "op": "JUMPDEST"
    },
    "8377": {
      "op": "DUP1"
    },
    "8378": {
      "op": "CALLDATALOAD"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8385": {
      "op": "SHL"
    },
    "8386": {
      "op": "SUB"
    },
    "8387": {
      "op": "DUP2"
    },
    "8388": {
      "op": "AND"
    },
    "8389": {
      "op": "DUP2"
    },
    "8390": {
      "op": "EQ"
    },
    "8391": {
      "op": "PUSH2",
      "value": "0x20CF"
    },
    "8394": {
      "op": "JUMPI"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8397": {
      "op": "DUP1"
    },
    "8398": {
      "op": "REVERT"
    },
    "8399": {
      "op": "JUMPDEST"
    },
    "8400": {
      "op": "SWAP2"
    },
    "8401": {
      "op": "SWAP1"
    },
    "8402": {
      "op": "POP"
    },
    "8403": {
      "jump": "o",
      "op": "JUMP"
    },
    "8404": {
      "op": "JUMPDEST"
    },
    "8405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8407": {
      "op": "DUP1"
    },
    "8408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8410": {
      "op": "DUP1"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8415": {
      "op": "DUP7"
    },
    "8416": {
      "op": "DUP9"
    },
    "8417": {
      "op": "SUB"
    },
    "8418": {
      "op": "SLT"
    },
    "8419": {
      "op": "ISZERO"
    },
    "8420": {
      "op": "PUSH2",
      "value": "0x20EC"
    },
    "8423": {
      "op": "JUMPI"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8426": {
      "op": "DUP1"
    },
    "8427": {
      "op": "REVERT"
    },
    "8428": {
      "op": "JUMPDEST"
    },
    "8429": {
      "op": "PUSH2",
      "value": "0x20F5"
    },
    "8432": {
      "op": "DUP7"
    },
    "8433": {
      "op": "PUSH2",
      "value": "0x20B8"
    },
    "8436": {
      "jump": "i",
      "op": "JUMP"
    },
    "8437": {
      "op": "JUMPDEST"
    },
    "8438": {
      "op": "SWAP5"
    },
    "8439": {
      "op": "POP"
    },
    "8440": {
      "op": "PUSH2",
      "value": "0x2103"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8445": {
      "op": "DUP8"
    },
    "8446": {
      "op": "ADD"
    },
    "8447": {
      "op": "PUSH2",
      "value": "0x20B8"
    },
    "8450": {
      "jump": "i",
      "op": "JUMP"
    },
    "8451": {
      "op": "JUMPDEST"
    },
    "8452": {
      "op": "SWAP4"
    },
    "8453": {
      "op": "POP"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8456": {
      "op": "DUP7"
    },
    "8457": {
      "op": "ADD"
    },
    "8458": {
      "op": "CALLDATALOAD"
    },
    "8459": {
      "op": "SWAP3"
    },
    "8460": {
      "op": "POP"
    },
    "8461": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8463": {
      "op": "DUP7"
    },
    "8464": {
      "op": "ADD"
    },
    "8465": {
      "op": "CALLDATALOAD"
    },
    "8466": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8475": {
      "op": "DUP1"
    },
    "8476": {
      "op": "DUP3"
    },
    "8477": {
      "op": "GT"
    },
    "8478": {
      "op": "ISZERO"
    },
    "8479": {
      "op": "PUSH2",
      "value": "0x2127"
    },
    "8482": {
      "op": "JUMPI"
    },
    "8483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8485": {
      "op": "DUP1"
    },
    "8486": {
      "op": "REVERT"
    },
    "8487": {
      "op": "JUMPDEST"
    },
    "8488": {
      "op": "DUP2"
    },
    "8489": {
      "op": "DUP9"
    },
    "8490": {
      "op": "ADD"
    },
    "8491": {
      "op": "SWAP2"
    },
    "8492": {
      "op": "POP"
    },
    "8493": {
      "op": "DUP9"
    },
    "8494": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8496": {
      "op": "DUP4"
    },
    "8497": {
      "op": "ADD"
    },
    "8498": {
      "op": "SLT"
    },
    "8499": {
      "op": "PUSH2",
      "value": "0x213B"
    },
    "8502": {
      "op": "JUMPI"
    },
    "8503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8505": {
      "op": "DUP1"
    },
    "8506": {
      "op": "REVERT"
    },
    "8507": {
      "op": "JUMPDEST"
    },
    "8508": {
      "op": "DUP2"
    },
    "8509": {
      "op": "CALLDATALOAD"
    },
    "8510": {
      "op": "DUP2"
    },
    "8511": {
      "op": "DUP2"
    },
    "8512": {
      "op": "GT"
    },
    "8513": {
      "op": "ISZERO"
    },
    "8514": {
      "op": "PUSH2",
      "value": "0x214A"
    },
    "8517": {
      "op": "JUMPI"
    },
    "8518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8520": {
      "op": "DUP1"
    },
    "8521": {
      "op": "REVERT"
    },
    "8522": {
      "op": "JUMPDEST"
    },
    "8523": {
      "op": "DUP10"
    },
    "8524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8526": {
      "op": "DUP3"
    },
    "8527": {
      "op": "DUP6"
    },
    "8528": {
      "op": "ADD"
    },
    "8529": {
      "op": "ADD"
    },
    "8530": {
      "op": "GT"
    },
    "8531": {
      "op": "ISZERO"
    },
    "8532": {
      "op": "PUSH2",
      "value": "0x215C"
    },
    "8535": {
      "op": "JUMPI"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8538": {
      "op": "DUP1"
    },
    "8539": {
      "op": "REVERT"
    },
    "8540": {
      "op": "JUMPDEST"
    },
    "8541": {
      "op": "SWAP7"
    },
    "8542": {
      "op": "SWAP10"
    },
    "8543": {
      "op": "SWAP6"
    },
    "8544": {
      "op": "SWAP9"
    },
    "8545": {
      "op": "POP"
    },
    "8546": {
      "op": "SWAP4"
    },
    "8547": {
      "op": "SWAP7"
    },
    "8548": {
      "op": "POP"
    },
    "8549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8551": {
      "op": "ADD"
    },
    "8552": {
      "op": "SWAP5"
    },
    "8553": {
      "op": "SWAP4"
    },
    "8554": {
      "op": "SWAP3"
    },
    "8555": {
      "op": "POP"
    },
    "8556": {
      "op": "POP"
    },
    "8557": {
      "op": "POP"
    },
    "8558": {
      "jump": "o",
      "op": "JUMP"
    },
    "8559": {
      "op": "JUMPDEST"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8564": {
      "op": "DUP3"
    },
    "8565": {
      "op": "DUP5"
    },
    "8566": {
      "op": "SUB"
    },
    "8567": {
      "op": "SLT"
    },
    "8568": {
      "op": "ISZERO"
    },
    "8569": {
      "op": "PUSH2",
      "value": "0x2181"
    },
    "8572": {
      "op": "JUMPI"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8575": {
      "op": "DUP1"
    },
    "8576": {
      "op": "REVERT"
    },
    "8577": {
      "op": "JUMPDEST"
    },
    "8578": {
      "op": "POP"
    },
    "8579": {
      "op": "CALLDATALOAD"
    },
    "8580": {
      "op": "SWAP2"
    },
    "8581": {
      "op": "SWAP1"
    },
    "8582": {
      "op": "POP"
    },
    "8583": {
      "jump": "o",
      "op": "JUMP"
    },
    "8584": {
      "op": "JUMPDEST"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8587": {
      "op": "DUP1"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8590": {
      "op": "DUP4"
    },
    "8591": {
      "op": "DUP6"
    },
    "8592": {
      "op": "SUB"
    },
    "8593": {
      "op": "SLT"
    },
    "8594": {
      "op": "ISZERO"
    },
    "8595": {
      "op": "PUSH2",
      "value": "0x219B"
    },
    "8598": {
      "op": "JUMPI"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8601": {
      "op": "DUP1"
    },
    "8602": {
      "op": "REVERT"
    },
    "8603": {
      "op": "JUMPDEST"
    },
    "8604": {
      "op": "DUP3"
    },
    "8605": {
      "op": "CALLDATALOAD"
    },
    "8606": {
      "op": "SWAP2"
    },
    "8607": {
      "op": "POP"
    },
    "8608": {
      "op": "PUSH2",
      "value": "0x21AB"
    },
    "8611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8613": {
      "op": "DUP5"
    },
    "8614": {
      "op": "ADD"
    },
    "8615": {
      "op": "PUSH2",
      "value": "0x20B8"
    },
    "8618": {
      "jump": "i",
      "op": "JUMP"
    },
    "8619": {
      "op": "JUMPDEST"
    },
    "8620": {
      "op": "SWAP1"
    },
    "8621": {
      "op": "POP"
    },
    "8622": {
      "op": "SWAP3"
    },
    "8623": {
      "op": "POP"
    },
    "8624": {
      "op": "SWAP3"
    },
    "8625": {
      "op": "SWAP1"
    },
    "8626": {
      "op": "POP"
    },
    "8627": {
      "jump": "o",
      "op": "JUMP"
    },
    "8628": {
      "op": "JUMPDEST"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8633": {
      "op": "DUP3"
    },
    "8634": {
      "op": "DUP5"
    },
    "8635": {
      "op": "SUB"
    },
    "8636": {
      "op": "SLT"
    },
    "8637": {
      "op": "ISZERO"
    },
    "8638": {
      "op": "PUSH2",
      "value": "0x21C6"
    },
    "8641": {
      "op": "JUMPI"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8644": {
      "op": "DUP1"
    },
    "8645": {
      "op": "REVERT"
    },
    "8646": {
      "op": "JUMPDEST"
    },
    "8647": {
      "op": "PUSH2",
      "value": "0x2065"
    },
    "8650": {
      "op": "DUP3"
    },
    "8651": {
      "op": "PUSH2",
      "value": "0x20B8"
    },
    "8654": {
      "jump": "i",
      "op": "JUMP"
    },
    "8655": {
      "op": "JUMPDEST"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8658": {
      "op": "DUP1"
    },
    "8659": {
      "op": "DUP3"
    },
    "8660": {
      "op": "MSTORE"
    },
    "8661": {
      "op": "DUP3"
    },
    "8662": {
      "op": "MLOAD"
    },
    "8663": {
      "op": "DUP3"
    },
    "8664": {
      "op": "DUP3"
    },
    "8665": {
      "op": "ADD"
    },
    "8666": {
      "op": "DUP2"
    },
    "8667": {
      "op": "SWAP1"
    },
    "8668": {
      "op": "MSTORE"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8671": {
      "op": "SWAP2"
    },
    "8672": {
      "op": "SWAP1"
    },
    "8673": {
      "op": "DUP5"
    },
    "8674": {
      "op": "DUP3"
    },
    "8675": {
      "op": "ADD"
    },
    "8676": {
      "op": "SWAP1"
    },
    "8677": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8679": {
      "op": "DUP6"
    },
    "8680": {
      "op": "ADD"
    },
    "8681": {
      "op": "SWAP1"
    },
    "8682": {
      "op": "DUP5"
    },
    "8683": {
      "op": "JUMPDEST"
    },
    "8684": {
      "op": "DUP2"
    },
    "8685": {
      "op": "DUP2"
    },
    "8686": {
      "op": "LT"
    },
    "8687": {
      "op": "ISZERO"
    },
    "8688": {
      "op": "PUSH2",
      "value": "0x2210"
    },
    "8691": {
      "op": "JUMPI"
    },
    "8692": {
      "op": "DUP4"
    },
    "8693": {
      "op": "MLOAD"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8700": {
      "op": "SHL"
    },
    "8701": {
      "op": "SUB"
    },
    "8702": {
      "op": "AND"
    },
    "8703": {
      "op": "DUP4"
    },
    "8704": {
      "op": "MSTORE"
    },
    "8705": {
      "op": "SWAP3"
    },
    "8706": {
      "op": "DUP5"
    },
    "8707": {
      "op": "ADD"
    },
    "8708": {
      "op": "SWAP3"
    },
    "8709": {
      "op": "SWAP2"
    },
    "8710": {
      "op": "DUP5"
    },
    "8711": {
      "op": "ADD"
    },
    "8712": {
      "op": "SWAP2"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8715": {
      "op": "ADD"
    },
    "8716": {
      "op": "PUSH2",
      "value": "0x21EB"
    },
    "8719": {
      "op": "JUMP"
    },
    "8720": {
      "op": "JUMPDEST"
    },
    "8721": {
      "op": "POP"
    },
    "8722": {
      "op": "SWAP1"
    },
    "8723": {
      "op": "SWAP7"
    },
    "8724": {
      "op": "SWAP6"
    },
    "8725": {
      "op": "POP"
    },
    "8726": {
      "op": "POP"
    },
    "8727": {
      "op": "POP"
    },
    "8728": {
      "op": "POP"
    },
    "8729": {
      "op": "POP"
    },
    "8730": {
      "op": "POP"
    },
    "8731": {
      "jump": "o",
      "op": "JUMP"
    },
    "8732": {
      "op": "JUMPDEST"
    },
    "8733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8735": {
      "op": "DUP1"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8738": {
      "op": "DUP4"
    },
    "8739": {
      "op": "DUP6"
    },
    "8740": {
      "op": "SUB"
    },
    "8741": {
      "op": "SLT"
    },
    "8742": {
      "op": "ISZERO"
    },
    "8743": {
      "op": "PUSH2",
      "value": "0x222F"
    },
    "8746": {
      "op": "JUMPI"
    },
    "8747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8749": {
      "op": "DUP1"
    },
    "8750": {
      "op": "REVERT"
    },
    "8751": {
      "op": "JUMPDEST"
    },
    "8752": {
      "op": "DUP3"
    },
    "8753": {
      "op": "CALLDATALOAD"
    },
    "8754": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8763": {
      "op": "DUP1"
    },
    "8764": {
      "op": "DUP3"
    },
    "8765": {
      "op": "GT"
    },
    "8766": {
      "op": "ISZERO"
    },
    "8767": {
      "op": "PUSH2",
      "value": "0x2247"
    },
    "8770": {
      "op": "JUMPI"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8773": {
      "op": "DUP1"
    },
    "8774": {
      "op": "REVERT"
    },
    "8775": {
      "op": "JUMPDEST"
    },
    "8776": {
      "op": "DUP2"
    },
    "8777": {
      "op": "DUP6"
    },
    "8778": {
      "op": "ADD"
    },
    "8779": {
      "op": "SWAP2"
    },
    "8780": {
      "op": "POP"
    },
    "8781": {
      "op": "DUP6"
    },
    "8782": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8784": {
      "op": "DUP4"
    },
    "8785": {
      "op": "ADD"
    },
    "8786": {
      "op": "SLT"
    },
    "8787": {
      "op": "PUSH2",
      "value": "0x225B"
    },
    "8790": {
      "op": "JUMPI"
    },
    "8791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8793": {
      "op": "DUP1"
    },
    "8794": {
      "op": "REVERT"
    },
    "8795": {
      "op": "JUMPDEST"
    },
    "8796": {
      "op": "DUP2"
    },
    "8797": {
      "op": "CALLDATALOAD"
    },
    "8798": {
      "op": "DUP2"
    },
    "8799": {
      "op": "DUP2"
    },
    "8800": {
      "op": "GT"
    },
    "8801": {
      "op": "ISZERO"
    },
    "8802": {
      "op": "PUSH2",
      "value": "0x226A"
    },
    "8805": {
      "op": "JUMPI"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8808": {
      "op": "DUP1"
    },
    "8809": {
      "op": "REVERT"
    },
    "8810": {
      "op": "JUMPDEST"
    },
    "8811": {
      "op": "DUP7"
    },
    "8812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8814": {
      "op": "DUP3"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8817": {
      "op": "SHL"
    },
    "8818": {
      "op": "DUP6"
    },
    "8819": {
      "op": "ADD"
    },
    "8820": {
      "op": "ADD"
    },
    "8821": {
      "op": "GT"
    },
    "8822": {
      "op": "ISZERO"
    },
    "8823": {
      "op": "PUSH2",
      "value": "0x227F"
    },
    "8826": {
      "op": "JUMPI"
    },
    "8827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8829": {
      "op": "DUP1"
    },
    "8830": {
      "op": "REVERT"
    },
    "8831": {
      "op": "JUMPDEST"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8834": {
      "op": "SWAP3"
    },
    "8835": {
      "op": "SWAP1"
    },
    "8836": {
      "op": "SWAP3"
    },
    "8837": {
      "op": "ADD"
    },
    "8838": {
      "op": "SWAP7"
    },
    "8839": {
      "op": "SWAP2"
    },
    "8840": {
      "op": "SWAP6"
    },
    "8841": {
      "op": "POP"
    },
    "8842": {
      "op": "SWAP1"
    },
    "8843": {
      "op": "SWAP4"
    },
    "8844": {
      "op": "POP"
    },
    "8845": {
      "op": "POP"
    },
    "8846": {
      "op": "POP"
    },
    "8847": {
      "op": "POP"
    },
    "8848": {
      "jump": "o",
      "op": "JUMP"
    },
    "8849": {
      "op": "JUMPDEST"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8852": {
      "op": "DUP1"
    },
    "8853": {
      "op": "DUP3"
    },
    "8854": {
      "op": "MSTORE"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "8857": {
      "op": "SWAP1"
    },
    "8858": {
      "op": "DUP3"
    },
    "8859": {
      "op": "ADD"
    },
    "8860": {
      "op": "MSTORE"
    },
    "8861": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "8878": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "8880": {
      "op": "SHL"
    },
    "8881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8883": {
      "op": "DUP3"
    },
    "8884": {
      "op": "ADD"
    },
    "8885": {
      "op": "MSTORE"
    },
    "8886": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8888": {
      "op": "ADD"
    },
    "8889": {
      "op": "SWAP1"
    },
    "8890": {
      "jump": "o",
      "op": "JUMP"
    },
    "8891": {
      "op": "JUMPDEST"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8894": {
      "op": "DUP1"
    },
    "8895": {
      "op": "DUP3"
    },
    "8896": {
      "op": "MSTORE"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "8899": {
      "op": "SWAP1"
    },
    "8900": {
      "op": "DUP3"
    },
    "8901": {
      "op": "ADD"
    },
    "8902": {
      "op": "MSTORE"
    },
    "8903": {
      "op": "PUSH32",
      "value": "0x526166666C653A20436F6E747261637420646F6573206E6F74206F776E207261"
    },
    "8936": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8938": {
      "op": "DUP3"
    },
    "8939": {
      "op": "ADD"
    },
    "8940": {
      "op": "MSTORE"
    },
    "8941": {
      "op": "PUSH13",
      "value": "0x33333632B0B136329027232A17"
    },
    "8955": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "8957": {
      "op": "SHL"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8960": {
      "op": "DUP3"
    },
    "8961": {
      "op": "ADD"
    },
    "8962": {
      "op": "MSTORE"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8965": {
      "op": "ADD"
    },
    "8966": {
      "op": "SWAP1"
    },
    "8967": {
      "jump": "o",
      "op": "JUMP"
    },
    "8968": {
      "op": "JUMPDEST"
    },
    "8969": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8974": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8976": {
      "op": "SHL"
    },
    "8977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8979": {
      "op": "MSTORE"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8984": {
      "op": "MSTORE"
    },
    "8985": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8989": {
      "op": "REVERT"
    },
    "8990": {
      "op": "JUMPDEST"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8993": {
      "op": "DUP2"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8996": {
      "op": "NOT"
    },
    "8997": {
      "op": "DIV"
    },
    "8998": {
      "op": "DUP4"
    },
    "8999": {
      "op": "GT"
    },
    "9000": {
      "op": "DUP3"
    },
    "9001": {
      "op": "ISZERO"
    },
    "9002": {
      "op": "ISZERO"
    },
    "9003": {
      "op": "AND"
    },
    "9004": {
      "op": "ISZERO"
    },
    "9005": {
      "op": "PUSH2",
      "value": "0x2338"
    },
    "9008": {
      "op": "JUMPI"
    },
    "9009": {
      "op": "PUSH2",
      "value": "0x2338"
    },
    "9012": {
      "op": "PUSH2",
      "value": "0x2308"
    },
    "9015": {
      "jump": "i",
      "op": "JUMP"
    },
    "9016": {
      "op": "JUMPDEST"
    },
    "9017": {
      "op": "POP"
    },
    "9018": {
      "op": "MUL"
    },
    "9019": {
      "op": "SWAP1"
    },
    "9020": {
      "jump": "o",
      "op": "JUMP"
    },
    "9021": {
      "op": "JUMPDEST"
    },
    "9022": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9027": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9029": {
      "op": "SHL"
    },
    "9030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9032": {
      "op": "MSTORE"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9037": {
      "op": "MSTORE"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9042": {
      "op": "REVERT"
    },
    "9043": {
      "op": "JUMPDEST"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9046": {
      "op": "DUP3"
    },
    "9047": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9050": {
      "op": "JUMPI"
    },
    "9051": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9054": {
      "op": "PUSH2",
      "value": "0x233D"
    },
    "9057": {
      "jump": "i",
      "op": "JUMP"
    },
    "9058": {
      "op": "JUMPDEST"
    },
    "9059": {
      "op": "POP"
    },
    "9060": {
      "op": "DIV"
    },
    "9061": {
      "op": "SWAP1"
    },
    "9062": {
      "jump": "o",
      "op": "JUMP"
    },
    "9063": {
      "op": "JUMPDEST"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9066": {
      "op": "DUP3"
    },
    "9067": {
      "op": "NOT"
    },
    "9068": {
      "op": "DUP3"
    },
    "9069": {
      "op": "GT"
    },
    "9070": {
      "op": "ISZERO"
    },
    "9071": {
      "op": "PUSH2",
      "value": "0x237A"
    },
    "9074": {
      "op": "JUMPI"
    },
    "9075": {
      "op": "PUSH2",
      "value": "0x237A"
    },
    "9078": {
      "op": "PUSH2",
      "value": "0x2308"
    },
    "9081": {
      "jump": "i",
      "op": "JUMP"
    },
    "9082": {
      "op": "JUMPDEST"
    },
    "9083": {
      "op": "POP"
    },
    "9084": {
      "op": "ADD"
    },
    "9085": {
      "op": "SWAP1"
    },
    "9086": {
      "jump": "o",
      "op": "JUMP"
    },
    "9087": {
      "op": "JUMPDEST"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9090": {
      "op": "DUP3"
    },
    "9091": {
      "op": "DUP3"
    },
    "9092": {
      "op": "LT"
    },
    "9093": {
      "op": "ISZERO"
    },
    "9094": {
      "op": "PUSH2",
      "value": "0x2391"
    },
    "9097": {
      "op": "JUMPI"
    },
    "9098": {
      "op": "PUSH2",
      "value": "0x2391"
    },
    "9101": {
      "op": "PUSH2",
      "value": "0x2308"
    },
    "9104": {
      "jump": "i",
      "op": "JUMP"
    },
    "9105": {
      "op": "JUMPDEST"
    },
    "9106": {
      "op": "POP"
    },
    "9107": {
      "op": "SUB"
    },
    "9108": {
      "op": "SWAP1"
    },
    "9109": {
      "jump": "o",
      "op": "JUMP"
    },
    "9110": {
      "op": "JUMPDEST"
    },
    "9111": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9116": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9118": {
      "op": "SHL"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9121": {
      "op": "MSTORE"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9124": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9126": {
      "op": "MSTORE"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9131": {
      "op": "REVERT"
    },
    "9132": {
      "op": "JUMPDEST"
    },
    "9133": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9138": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9140": {
      "op": "SHL"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9143": {
      "op": "MSTORE"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "9146": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9148": {
      "op": "MSTORE"
    },
    "9149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9153": {
      "op": "REVERT"
    },
    "9154": {
      "op": "JUMPDEST"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9159": {
      "op": "NOT"
    },
    "9160": {
      "op": "DUP3"
    },
    "9161": {
      "op": "EQ"
    },
    "9162": {
      "op": "ISZERO"
    },
    "9163": {
      "op": "PUSH2",
      "value": "0x23D6"
    },
    "9166": {
      "op": "JUMPI"
    },
    "9167": {
      "op": "PUSH2",
      "value": "0x23D6"
    },
    "9170": {
      "op": "PUSH2",
      "value": "0x2308"
    },
    "9173": {
      "jump": "i",
      "op": "JUMP"
    },
    "9174": {
      "op": "JUMPDEST"
    },
    "9175": {
      "op": "POP"
    },
    "9176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9178": {
      "op": "ADD"
    },
    "9179": {
      "op": "SWAP1"
    },
    "9180": {
      "jump": "o",
      "op": "JUMP"
    },
    "9181": {
      "op": "JUMPDEST"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9184": {
      "op": "DUP3"
    },
    "9185": {
      "op": "PUSH2",
      "value": "0x23EC"
    },
    "9188": {
      "op": "JUMPI"
    },
    "9189": {
      "op": "PUSH2",
      "value": "0x23EC"
    },
    "9192": {
      "op": "PUSH2",
      "value": "0x233D"
    },
    "9195": {
      "jump": "i",
      "op": "JUMP"
    },
    "9196": {
      "op": "JUMPDEST"
    },
    "9197": {
      "op": "POP"
    },
    "9198": {
      "op": "MOD"
    },
    "9199": {
      "op": "SWAP1"
    },
    "9200": {
      "jump": "o",
      "op": "JUMP"
    },
    "9201": {
      "op": "JUMPDEST"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9206": {
      "op": "DUP3"
    },
    "9207": {
      "op": "DUP5"
    },
    "9208": {
      "op": "SUB"
    },
    "9209": {
      "op": "SLT"
    },
    "9210": {
      "op": "ISZERO"
    },
    "9211": {
      "op": "PUSH2",
      "value": "0x2403"
    },
    "9214": {
      "op": "JUMPI"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9217": {
      "op": "DUP1"
    },
    "9218": {
      "op": "REVERT"
    },
    "9219": {
      "op": "JUMPDEST"
    },
    "9220": {
      "op": "POP"
    },
    "9221": {
      "op": "MLOAD"
    },
    "9222": {
      "op": "SWAP2"
    },
    "9223": {
      "op": "SWAP1"
    },
    "9224": {
      "op": "POP"
    },
    "9225": {
      "jump": "o",
      "op": "JUMP"
    },
    "9226": {
      "op": "JUMPDEST"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9229": {
      "op": "JUMPDEST"
    },
    "9230": {
      "op": "DUP4"
    },
    "9231": {
      "op": "DUP2"
    },
    "9232": {
      "op": "LT"
    },
    "9233": {
      "op": "ISZERO"
    },
    "9234": {
      "op": "PUSH2",
      "value": "0x2425"
    },
    "9237": {
      "op": "JUMPI"
    },
    "9238": {
      "op": "DUP2"
    },
    "9239": {
      "op": "DUP2"
    },
    "9240": {
      "op": "ADD"
    },
    "9241": {
      "op": "MLOAD"
    },
    "9242": {
      "op": "DUP4"
    },
    "9243": {
      "op": "DUP3"
    },
    "9244": {
      "op": "ADD"
    },
    "9245": {
      "op": "MSTORE"
    },
    "9246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9248": {
      "op": "ADD"
    },
    "9249": {
      "op": "PUSH2",
      "value": "0x240D"
    },
    "9252": {
      "op": "JUMP"
    },
    "9253": {
      "op": "JUMPDEST"
    },
    "9254": {
      "op": "DUP4"
    },
    "9255": {
      "op": "DUP2"
    },
    "9256": {
      "op": "GT"
    },
    "9257": {
      "op": "ISZERO"
    },
    "9258": {
      "op": "PUSH2",
      "value": "0x2434"
    },
    "9261": {
      "op": "JUMPI"
    },
    "9262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9264": {
      "op": "DUP5"
    },
    "9265": {
      "op": "DUP5"
    },
    "9266": {
      "op": "ADD"
    },
    "9267": {
      "op": "MSTORE"
    },
    "9268": {
      "op": "JUMPDEST"
    },
    "9269": {
      "op": "POP"
    },
    "9270": {
      "op": "POP"
    },
    "9271": {
      "op": "POP"
    },
    "9272": {
      "op": "POP"
    },
    "9273": {
      "jump": "o",
      "op": "JUMP"
    },
    "9274": {
      "op": "JUMPDEST"
    },
    "9275": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
    },
    "9308": {
      "op": "DUP2"
    },
    "9309": {
      "op": "MSTORE"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9312": {
      "op": "DUP4"
    },
    "9313": {
      "op": "MLOAD"
    },
    "9314": {
      "op": "PUSH2",
      "value": "0x2472"
    },
    "9317": {
      "op": "DUP2"
    },
    "9318": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "9320": {
      "op": "DUP6"
    },
    "9321": {
      "op": "ADD"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9324": {
      "op": "DUP9"
    },
    "9325": {
      "op": "ADD"
    },
    "9326": {
      "op": "PUSH2",
      "value": "0x240A"
    },
    "9329": {
      "jump": "i",
      "op": "JUMP"
    },
    "9330": {
      "op": "JUMPDEST"
    },
    "9331": {
      "op": "PUSH17",
      "value": "0x1034B99036B4B9B9B4B733903937B6329"
    },
    "9349": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "9351": {
      "op": "SHL"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "9354": {
      "op": "SWAP2"
    },
    "9355": {
      "op": "DUP5"
    },
    "9356": {
      "op": "ADD"
    },
    "9357": {
      "op": "SWAP2"
    },
    "9358": {
      "op": "DUP3"
    },
    "9359": {
      "op": "ADD"
    },
    "9360": {
      "op": "MSTORE"
    },
    "9361": {
      "op": "DUP4"
    },
    "9362": {
      "op": "MLOAD"
    },
    "9363": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "9366": {
      "op": "DUP2"
    },
    "9367": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "9369": {
      "op": "DUP5"
    },
    "9370": {
      "op": "ADD"
    },
    "9371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9373": {
      "op": "DUP9"
    },
    "9374": {
      "op": "ADD"
    },
    "9375": {
      "op": "PUSH2",
      "value": "0x240A"
    },
    "9378": {
      "jump": "i",
      "op": "JUMP"
    },
    "9379": {
      "op": "JUMPDEST"
    },
    "9380": {
      "op": "ADD"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "9383": {
      "op": "ADD"
    },
    "9384": {
      "op": "SWAP5"
    },
    "9385": {
      "op": "SWAP4"
    },
    "9386": {
      "op": "POP"
    },
    "9387": {
      "op": "POP"
    },
    "9388": {
      "op": "POP"
    },
    "9389": {
      "op": "POP"
    },
    "9390": {
      "jump": "o",
      "op": "JUMP"
    },
    "9391": {
      "op": "JUMPDEST"
    },
    "9392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9394": {
      "op": "DUP2"
    },
    "9395": {
      "op": "MLOAD"
    },
    "9396": {
      "op": "DUP1"
    },
    "9397": {
      "op": "DUP5"
    },
    "9398": {
      "op": "MSTORE"
    },
    "9399": {
      "op": "PUSH2",
      "value": "0x24C7"
    },
    "9402": {
      "op": "DUP2"
    },
    "9403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9405": {
      "op": "DUP7"
    },
    "9406": {
      "op": "ADD"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9409": {
      "op": "DUP7"
    },
    "9410": {
      "op": "ADD"
    },
    "9411": {
      "op": "PUSH2",
      "value": "0x240A"
    },
    "9414": {
      "jump": "i",
      "op": "JUMP"
    },
    "9415": {
      "op": "JUMPDEST"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9418": {
      "op": "ADD"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9421": {
      "op": "NOT"
    },
    "9422": {
      "op": "AND"
    },
    "9423": {
      "op": "SWAP3"
    },
    "9424": {
      "op": "SWAP1"
    },
    "9425": {
      "op": "SWAP3"
    },
    "9426": {
      "op": "ADD"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9429": {
      "op": "ADD"
    },
    "9430": {
      "op": "SWAP3"
    },
    "9431": {
      "op": "SWAP2"
    },
    "9432": {
      "op": "POP"
    },
    "9433": {
      "op": "POP"
    },
    "9434": {
      "jump": "o",
      "op": "JUMP"
    },
    "9435": {
      "op": "JUMPDEST"
    },
    "9436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9438": {
      "op": "DUP2"
    },
    "9439": {
      "op": "MSTORE"
    },
    "9440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9442": {
      "op": "PUSH2",
      "value": "0x2065"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9447": {
      "op": "DUP4"
    },
    "9448": {
      "op": "ADD"
    },
    "9449": {
      "op": "DUP5"
    },
    "9450": {
      "op": "PUSH2",
      "value": "0x24AF"
    },
    "9453": {
      "jump": "i",
      "op": "JUMP"
    },
    "9454": {
      "op": "JUMPDEST"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9457": {
      "op": "DUP1"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9460": {
      "op": "SHL"
    },
    "9461": {
      "op": "SUB"
    },
    "9462": {
      "op": "DUP5"
    },
    "9463": {
      "op": "AND"
    },
    "9464": {
      "op": "DUP2"
    },
    "9465": {
      "op": "MSTORE"
    },
    "9466": {
      "op": "DUP3"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9469": {
      "op": "DUP3"
    },
    "9470": {
      "op": "ADD"
    },
    "9471": {
      "op": "MSTORE"
    },
    "9472": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9474": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9476": {
      "op": "DUP3"
    },
    "9477": {
      "op": "ADD"
    },
    "9478": {
      "op": "MSTORE"
    },
    "9479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9481": {
      "op": "PUSH2",
      "value": "0x2515"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9486": {
      "op": "DUP4"
    },
    "9487": {
      "op": "ADD"
    },
    "9488": {
      "op": "DUP5"
    },
    "9489": {
      "op": "PUSH2",
      "value": "0x24AF"
    },
    "9492": {
      "jump": "i",
      "op": "JUMP"
    },
    "9493": {
      "op": "JUMPDEST"
    },
    "9494": {
      "op": "SWAP6"
    },
    "9495": {
      "op": "SWAP5"
    },
    "9496": {
      "op": "POP"
    },
    "9497": {
      "op": "POP"
    },
    "9498": {
      "op": "POP"
    },
    "9499": {
      "op": "POP"
    },
    "9500": {
      "op": "POP"
    },
    "9501": {
      "jump": "o",
      "op": "JUMP"
    },
    "9502": {
      "op": "JUMPDEST"
    },
    "9503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9507": {
      "op": "DUP3"
    },
    "9508": {
      "op": "DUP5"
    },
    "9509": {
      "op": "SUB"
    },
    "9510": {
      "op": "SLT"
    },
    "9511": {
      "op": "ISZERO"
    },
    "9512": {
      "op": "PUSH2",
      "value": "0x2530"
    },
    "9515": {
      "op": "JUMPI"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9518": {
      "op": "DUP1"
    },
    "9519": {
      "op": "REVERT"
    },
    "9520": {
      "op": "JUMPDEST"
    },
    "9521": {
      "op": "DUP2"
    },
    "9522": {
      "op": "MLOAD"
    },
    "9523": {
      "op": "DUP1"
    },
    "9524": {
      "op": "ISZERO"
    },
    "9525": {
      "op": "ISZERO"
    },
    "9526": {
      "op": "DUP2"
    },
    "9527": {
      "op": "EQ"
    },
    "9528": {
      "op": "PUSH2",
      "value": "0x2065"
    },
    "9531": {
      "op": "JUMPI"
    },
    "9532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9534": {
      "op": "DUP1"
    },
    "9535": {
      "op": "REVERT"
    },
    "9536": {
      "op": "JUMPDEST"
    },
    "9537": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9544": {
      "op": "SHL"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9547": {
      "op": "MSTORE"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9552": {
      "op": "MSTORE"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9557": {
      "op": "REVERT"
    },
    "9558": {
      "op": "JUMPDEST"
    },
    "9559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9561": {
      "op": "DUP2"
    },
    "9562": {
      "op": "PUSH2",
      "value": "0x2565"
    },
    "9565": {
      "op": "JUMPI"
    },
    "9566": {
      "op": "PUSH2",
      "value": "0x2565"
    },
    "9569": {
      "op": "PUSH2",
      "value": "0x2308"
    },
    "9572": {
      "jump": "i",
      "op": "JUMP"
    },
    "9573": {
      "op": "JUMPDEST"
    },
    "9574": {
      "op": "POP"
    },
    "9575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9577": {
      "op": "NOT"
    },
    "9578": {
      "op": "ADD"
    },
    "9579": {
      "op": "SWAP1"
    },
    "9580": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "033b0bc42456df4728c184b5c97ba145957650d9",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n// import \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n/**\n* @dev Raffle Contract\n* @author merkle-groot\n*/\ncontract Raffle is AccessControl, VRFConsumerBase, Pausable, IERC721Receiver{\n    // ============ Immutable storage ============\n\n    // Chainlink keyHash\n    bytes32 internal immutable keyHash;\n    // Chainlink fee\n    uint256 internal immutable fee;\n    // Price (in Ether) per raffle slot\n    uint256 public slotPrice;\n    // Number of total available raffle slots\n    uint256 public numSlotsAvailable;\n    // Address of NFT contract\n    address public nftContract;\n    // Treasury Role \n    bytes32 public constant TREASURY_ROLE = keccak256(\"TREASURY_ROLE\");\n    // Treasury address which manages the locked funds\n    address public treasury;\n    // No of Raffle Rounds\n    uint256 public noOfRounds = 0;\n    // Current Phase of a Round\n    int256 public currentPhase = -1;\n    // Used for time delay\n    uint256 public countDown;\n    // Stores if Raffle is Stopped by the operator\n    uint256 public isStopped = 0;\n     // NFT ID\n    uint256 public nftID;\n\n    // ============ Mutable storage ============\n\n    // struct to store info about addresses that own/owned a slot\n    struct slotOwner{\n        uint256 noOfSlots;        \n        uint256 noOfSlotsBought;\n        uint256 enteredRound;\n    }\n    // Result from Chainlink VRF\n    uint256 public randomResult = 0;\n    // Toggled when contract requests result from Chainlink VRF\n    bool public randomResultRequested = false;\n    // Number of filled raffle slots\n    uint256 public numSlotsFilled = 0;\n    // Array of slot owners\n    address[] public slotOwners;\n    // Array of deleted slots to be filled while buying slots\n    uint256[] public deletedSlots;\n    // Mapping of slot owners to number of slots owned\n    mapping(address => slotOwner) public addressToSlotsOwner;\n    // Toggled when contract holds NFT to raffle\n    bool public nftOwned = false;\n\n    // ============ Events ============\n\n    // Address of slot claimee and number of slots claimed\n    event SlotsClaimed(address indexed claimee, uint256 numClaimed);\n    // Address of slot refunder and number of slots refunded\n    event SlotsRefunded(address indexed refunder, uint256 numRefunded);\n    // Address of raffle winner\n    event RaffleWon(address indexed winner);\n\n    // ============ Constructor ============\n\n\n    event TreasuryAddressChanged(\n        address\n    );\n\n    constructor(\n        address _treasuryOwner,\n        address _treasuryAddress,\n        address _nftAddress,\n        uint256 _slotPrice,\n        bytes32 _keyhash,\n        address _vrfCoordinator, \n        address _linkToken, \n        uint256 _fee,\n        uint256 _numSlotsAvailable\n    )  VRFConsumerBase(\n        _vrfCoordinator, // VRF Coordinator\n        _linkToken\n    ){\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(TREASURY_ROLE, _treasuryOwner);\n        treasury = _treasuryAddress;\n        keyHash = _keyhash;\n        nftContract = _nftAddress;\n        fee = _fee; \n        slotPrice = _slotPrice;\n        numSlotsAvailable = _numSlotsAvailable;\n    }\n      // ============ Functions ============\n\n    /**\n    * @dev Function used to buy slots or get free slots\n    * @param _numSlots No of slots\n    * @param _method 0 if buying, 1 if getting it for free\n    * @notice For getting free slots, the number must be calculated at front-end\n    */\n    function purchaseSlot(uint256 _numSlots, uint256 _method) payable external whenNotPaused(){\n        // method 0 -> buy slots\n        // method 1 -> get free slots\n\n        // Require the currentPhase to be the Raffle phase\n        require(currentPhase == 0, \"Cannot buy during this round\");\n        // Require purchasing at least 1 slot\n        require(_numSlots > 0, \"Raffle: Cannot purchase 0 slots.\");\n        // Require the raffle contract to own the NFT to raffle\n        require(nftOwned == true, \"Raffle: Contract does not own raffleable NFT.\");\n        // Require there to be available raffle slots\n        require(numSlotsFilled < numSlotsAvailable, \"Raffle: All raffle slots are filled.\");\n        // Prevent claiming after winner selection\n        require(randomResultRequested == false, \"Raffle: Cannot purchase slot after winner has been chosen.\");\n        // Require appropriate payment for number of slots to purchase if the method is 0\n        require(msg.value >= _numSlots * slotPrice || _method == 1, \"Raffle: Insufficient ETH provided to purchase slots.\");\n        // Require the caller to have participated in the last round if the method is 1\n        require((addressToSlotsOwner[msg.sender].enteredRound < noOfRounds && _numSlots <= (addressToSlotsOwner[msg.sender].noOfSlotsBought/10 + 1)) || _method == 0, \"Raffle: Cannot increment slots in this round\");\n        // Require number of slots to purchase to be <= number of available slots\n        require(_numSlots <= numSlotsAvailable - numSlotsFilled, \"Raffle: Requesting to purchase too many slots.\");\n\n        uint256 idx = 0;\n\n        // Try to allot the deleted slots if available\n        while (deletedSlots.length != 0){\n            slotOwners[deletedSlots[deletedSlots.length - 1]] = msg.sender;\n            deletedSlots.pop();\n            idx++;\n        }\n\n        // Allot new slots\n        if(idx < _numSlots){\n            // For each _numSlots\n            for (uint256 i = 0; i < _numSlots - idx; i++) {\n                // Add address to slot owners array\n                slotOwners.push(msg.sender);\n            }\n        }\n\n        // Increment filled slots\n        numSlotsFilled = numSlotsFilled + _numSlots;\n        // Increment slots owned by address\n        addressToSlotsOwner[msg.sender].noOfSlots += _numSlots;\n        addressToSlotsOwner[msg.sender].enteredRound = noOfRounds;\n\n        // Increment the slots bought count if method is 0\n        if(_method == 0){\n            addressToSlotsOwner[msg.sender].noOfSlotsBought += _numSlots;\n        }\n        // Emit claim event\n        emit SlotsClaimed(msg.sender, _numSlots);\n    }\n\n    /**\n    * @dev Function to get refund from the raffle\n    * @param deleteIndices Pass the array of indices to be deleted\n    * @notice Only bought slots can be refunded\n    */\n    function refundSlot(uint[] calldata deleteIndices) external whenNotPaused(){\n        //Require the currentPhase to be the raffle Round\n        require(currentPhase == 0 || isStopped == 1, \"Raffle: Cannot refund during this round.\");\n        // Require the raffle contract to own the NFT to raffle\n        require(nftOwned == true || isStopped == 1, \"Raffle: Contract does not own raffleable NFT.\");\n        // Require number of slots owned by address to be >= _numSlots requested for refund\n        require(addressToSlotsOwner[msg.sender].noOfSlotsBought >= deleteIndices.length, \"Raffle: Address did not buy these slots.\");\n\n        uint256 idx = 0;\n        uint256 deletedCount = 0;\n\n        // Loop through all entries \n        while (idx < deleteIndices.length) {\n            if(deleteIndices[idx] < slotOwners.length){\n                if (slotOwners[deleteIndices[idx]] == msg.sender) {\n                    slotOwners[deleteIndices[idx]] = address(0);\n                    deletedSlots.push(deleteIndices[idx]);\n                    deletedCount += 1;\n                }\n            }\n            idx++;\n        }\n\n        // Repay raffle participant\n        payable(msg.sender).transfer(deletedCount * slotPrice);\n        // Decrement filled slots\n        numSlotsFilled = numSlotsFilled - deletedCount;\n        // Decrement slots owned by address\n        addressToSlotsOwner[msg.sender].noOfSlots -= deletedCount;\n        addressToSlotsOwner[msg.sender].noOfSlotsBought -= deletedCount;\n\n        // Emit refund event\n        emit SlotsRefunded(msg.sender, deletedCount);\n    }\n\n    /**\n    * @dev Internal Function called by exitLockPeriod\n    * @notice Calls the Chainlink Oracle\n    */\n    function collectRandomWinner() internal returns (bytes32 requestId) {\n        // Require at least 1 raffle slot to be filled\n        require(numSlotsFilled > 0, \"Raffle: No slots are filled\");\n        // Require NFT to be owned by raffle contract\n        require(nftOwned == true, \"Raffle: Contract does not own raffleable NFT.\");\n        // Require this to be the first time that randomness is requested\n        require(randomResultRequested == false, \"Raffle: Cannot collect winner twice.\");\n\n        // Toggle randomness requested\n        randomResultRequested = true;\n\n        // Call for random number\n        return getRandomNumber();\n    }\n\n    function stopTheRaffle() external onlyRole(DEFAULT_ADMIN_ROLE){\n        isStopped = 1;\n\n        IERC721(nftContract).safeTransferFrom(address(this), msg.sender, nftID);\n        nftOwned = false;\n    }\n\n    /**\n    * Disburses NFT to winner and raised raffle pool to owner\n    */\n    function disburseWinner() external {\n        // Require that the contract holds the NFT\n        require(nftOwned == true, \"Raffle: Cannot disurbse NFT to winner without holding NFT.\");\n        // Require that a winner has been collected already\n        require(randomResultRequested == true, \"Raffle: Cannot disburse to winner without having collected one.\");\n        // Require that the random result is not 0\n        require(randomResult != 0, \"Raffle: Please wait for Chainlink VRF to update the winner first.\");\n\n        uint256 randomNumber = randomResult;\n        address winner;\n\n        while(true){\n            if(slotOwners[randomNumber % slotOwners.length] != address(0)){\n                winner = slotOwners[randomNumber % slotOwners.length];\n                break;\n            }\n\n            randomNumber += 1;        \n        }\n\n        // Transfer NFT to winner\n        IERC721(nftContract).safeTransferFrom(address(this), winner, nftID);\n\n        // Toggle nftOwned\n        nftOwned = false;\n\n        // Toggle randomness requested to false\n        randomResultRequested = false;\n\n        // Reset result\n        randomResult = 0;\n\n        // Emit raffle winner\n        emit RaffleWon(winner);\n    }\n\n    /**\n    * @dev Function to lock the funds and enter phase 1\n    * @notice Can only be called by admin role\n    */\n    function enterLockPeriod() external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(currentPhase == 0, \"Can only call this after raffle round\");\n        require(countDown > block.timestamp, \"Contract is still in raffle round\");\n        \n        currentPhase = 1;\n        countDown = block.timestamp + 30 days;\n        _pause();\n    }\n\n    /**\n    * @dev Function to return -1 phase and call the chainlink oracle\n    * @notice Can only be called by the admin role   \n    */\n    function exitLockPeriod() external onlyRole(DEFAULT_ADMIN_ROLE) whenPaused() returns (bytes32 requestId){\n        require(currentPhase == 1, \"Can only call this after lock period\");\n        require(countDown > block.timestamp, \"Contract is still in lock period\");\n\n\n        _unpause();\n        currentPhase = -1;\n        return collectRandomWinner();\n    }\n\n\n    /**\n    * @dev Called by the NFT contract\n    */\n    function onERC721Received(\n        address operator,\n        address from, \n        uint256 tokenId,\n        bytes calldata data\n    ) external virtual override returns (bytes4) {\n        // Require NFT from correct contract\n        require(from == nftContract, \"Raffle: Raffle not initiated with this NFT contract.\");\n        require(currentPhase == -1 && nftOwned == false, \"Cannot receive NFT at this phase\");\n        \n        nftID = tokenId;\n\n        currentPhase = 0;\n        noOfRounds++;\n        countDown = block.timestamp + 7 days;\n        // Toggle contract NFT ownership\n        nftOwned = true;\n\n        // Return required successful interface bytes\n        return this.onERC721Received.selector;\n    }\n\n    /** \n     * Requests randomness \n     */\n    function getRandomNumber() public returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) >= fee, \"Not enough LINK - fill contract with faucet\");\n        return requestRandomness(keyHash, fee);\n    }\n\n    /**\n     * Callback function used by VRF Coordinator\n     */\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        randomResult = randomness;\n    }\n\n\n    /**\n    * @dev Function that allows changing the treasury address\n    * @notice Can only be called by the owner of the contract\n    * @param newTreasuryAddress The new address to which the collected fees will be spent\n     */\n    function changeTreasuryAddress(address newTreasuryAddress) public onlyRole(TREASURY_ROLE){\n        require(newTreasuryAddress != address(0), \"Non zero address required\");\n        treasury = newTreasuryAddress;\n        emit TreasuryAddressChanged(newTreasuryAddress);\n    }\n\n    function getSlotOwners()public view returns(address [] memory){\n        return slotOwners;\n    }\n}\n",
  "sourceMap": "541:12761:12:-:0;;;1247:1;1219:29;;;;-1:-1:-1;;1286:31:12;;1431:28;;;;1782:31;;;;1883:41;;;-1:-1:-1;;1883:41:12;;;;;;1967:33;;;;;2330:28;;;;;;;;2850:685;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9369:32:9;;;;;9407;;;;924:7:2;:15;;-1:-1:-1;;924:15:2;;;3234:42:12::1;934:5:2::0;3265:10:12::1;3234;:42::i;:::-;3286:41;1076:26;3312:14:::0;3286:10:::1;:41::i;:::-;3337:8;:27:::0;;-1:-1:-1;;;;;;3337:27:12;;::::1;-1:-1:-1::0;;;;;3337:27:12;;::::1;;::::0;;;3374:18:::1;::::0;;;;3402:11:::1;:25:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;3437:10:12::1;::::0;;;;3458:9:::1;:22:::0;3490:17:::1;:38:::0;-1:-1:-1;541:12761:12;;6084:110:0;6162:25;6173:4;6179:7;6162:10;:25::i;:::-;6084:110;;:::o;6572:224::-;2912:4;2935:12;;;;;;;;;;;-1:-1:-1;;;;;2935:29:0;;;;;;;;;;;;6641:149;;6684:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6684:29:0;;;;;;;;;:36;;-1:-1:-1;;6684:36:0;6716:4;6684:36;;;6766:12;666:10:5;;587:96;6766:12:0;-1:-1:-1;;;;;6739:40:0;6757:7;-1:-1:-1;;;;;6739:40:0;6751:4;6739:40;;;;;;;;;;6572:224;;:::o;14:177:13:-;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:798::-;338:6;346;354;362;370;378;386;394;402;455:3;443:9;434:7;430:23;426:33;423:53;;;472:1;469;462:12;423:53;495:40;525:9;495:40;:::i;:::-;485:50;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;711:2;700:9;696:18;690:25;680:35;;755:3;744:9;740:19;734:26;724:36;;779:50;824:3;813:9;809:19;779:50;:::i;:::-;769:60;;848:50;893:3;882:9;878:19;848:50;:::i;:::-;838:60;;938:3;927:9;923:19;917:26;907:36;;983:3;972:9;968:19;962:26;952:36;;196:798;;;;;;;;;;;:::o;:::-;541:12761:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Raffle.sol",
  "type": "contract"
}